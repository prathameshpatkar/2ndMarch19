**********************
Windows PowerShell transcript start
Start time: 20190309104748
Username: NTMS_PC8\Administrator
RunAs User: NTMS_PC8\Administrator
Machine: NTMS_PC8 (Microsoft Windows NT 6.3.9600.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell_ise.exe
Process ID: 3860
PSVersion: 5.1.14409.1005
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.14409.1005
BuildVersion: 10.0.14409.1005
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\Prathamesh.txt
PS C:\Windows\system32> Get-Command -Noun date

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\Windows\system32> get-date

09 March 2019 10:53:48 AM


PS C:\Windows\system32> get-help get-date -online
PS C:\Windows\system32> get-date -DisplayHint Date

09 March 2019


PS C:\Windows\system32> get-date -Format dd/MM/yyyy
09-03-2019
PS C:\Windows\system32> get-date -Format yyyy/MM/dd
2019-03-09
PS C:\Windows\system32> get-date -Format yy/MM/dd
19-03-09
PS C:\Windows\system32> get-date -DisplayHint Time -Format hh/mm/ss
11-00-29
PS C:\Windows\system32> get-date -Format hh/mm/ss
11-01-25
PS C:\Windows\system32> get-date -Format hh:mm:ss
11:01:56
PS C:\Windows\system32> get-date -Format "dd '#'mm '#'yy"
09 #08 #19
PS C:\Windows\system32> get-date -Format "dd'.'mm'.'yy"
09.08.19
PS C:\Windows\system32> $myservices= get-service
PS C:\Windows\system32> $myservices

Status   Name               DisplayName
------   ----               -----------
Running  AdobeARMservice    Adobe Acrobat Update Service
Stopped  AdtAgent           Microsoft Monitoring Agent Audit Fo...
Stopped  AeLookupSvc        Application Experience
Stopped  ALG                Application Layer Gateway Service
Running  AnyDesk            AnyDesk Service
Stopped  AppIDSvc           Application Identity
Stopped  Appinfo            Application Information
Stopped  AppMgmt            Application Management
Stopped  AppReadiness       App Readiness
Running  AppXSvc            AppX Deployment Service (AppXSVC)
Running  AudioEndpointBu... Windows Audio Endpoint Builder
Running  Audiosrv           Windows Audio
Stopped  AxInstSV           ActiveX Installer (AxInstSV)
Running  AzureADConnectA... Microsoft Azure AD Connect Agent Up...
Running  AzureADConnectA... Microsoft Azure AD Connect Authenti...
Stopped  BDESVC             BitLocker Drive Encryption Service
Running  BFE                Base Filtering Engine
Running  BITS               Background Intelligent Transfer Ser...
Running  BrokerInfrastru... Background Tasks Infrastructure Ser...
Running  Browser            Computer Browser
Stopped  BthHFSrv           Bluetooth Handsfree Service
Stopped  bthserv            Bluetooth Support Service
Stopped  CertPropSvc        Certificate Propagation
Stopped  COMSysApp          COM+ System Application
Stopped  cphs               Intel(R) Content Protection HECI Se...
Running  CryptSvc           Cryptographic Services
Stopped  CscService         Offline Files
Running  DcomLaunch         DCOM Server Process Launcher
Stopped  defragsvc          Optimise drives
Running  DeviceAssociati... Device Association Service
Stopped  DeviceInstall      Device Install Service
Running  Dhcp               DHCP Client
Running  DiagTrack          Diagnostics Tracking Service
Running  Dnscache           DNS Client
Stopped  dot3svc            Wired AutoConfig
Running  DPS                Diagnostic Policy Service
Stopped  DsmSvc             Device Setup Manager
Stopped  Eaphost            Extensible Authentication Protocol
Stopped  EFS                Encrypting File System (EFS)
Running  EventLog           Windows Event Log
Running  EventSystem        COM+ Event System
Stopped  Fax                Fax
Running  fdPHost            Function Discovery Provider Host
Running  FDResPub           Function Discovery Resource Publica...
Stopped  fhsvc              File History Service
Running  FontCache          Windows Font Cache Service
Stopped  GoogleChromeEle... Google Chrome Elevation Service
Stopped  gpsvc              Group Policy Client
Stopped  gupdate            Google Update Service (gupdate)
Stopped  gupdatem           Google Update Service (gupdatem)
Stopped  gusvc              Google Software Updater
Running  HealthService      Microsoft Monitoring Agent
Running  hidserv            Human Interface Device Service
Stopped  hkmsvc             Health Key and Certificate Management
Running  HomeGroupListener  HomeGroup Listener
Running  HomeGroupProvider  HomeGroup Provider
Running  IAStorDataMgrSvc   Intel(R) Rapid Storage Technology
Stopped  IEEtwCollectorS... Internet Explorer ETW Collector Ser...
Running  igfxCUIService2... Intel(R) HD Graphics Control Panel ...
Running  IKEEXT             IKE and AuthIP IPsec Keying Modules
Running  Intel(R) PROSet... Intel(R) PROSet Monitoring Service
Running  iphlpsvc           IP Helper
Stopped  Jenkins            Jenkins
Running  KeyIso             CNG Key Isolation
Stopped  KtmRm              KtmRm for Distributed Transaction C...
Running  LanmanServer       Server
Running  LanmanWorkstation  Workstation
Stopped  lfsvc              Windows Location Framework Service
Stopped  lltdsvc            Link-Layer Topology Discovery Mapper
Running  lmhosts            TCP/IP NetBIOS Helper
Running  LSM                Local Session Manager
Stopped  Microsoft Offic... Microsoft Office Groove Audit Service
Stopped  MMCSS              Multimedia Class Scheduler
Running  MpsSvc             Windows Firewall
Stopped  MSDTC              Distributed Transaction Coordinator
Stopped  MSiSCSI            Microsoft iSCSI Initiator Service
Stopped  msiserver          Windows Installer
Stopped  MsKeyboardFilter   Microsoft Keyboard Filter
Running  msoidsvc           Microsoft Online Services Sign-in A...
Running  MVMCP2VAgent       Microsoft Virtual Machine Converter...
Stopped  napagent           Network Access Protection Agent
Stopped  NcaSvc             Network Connectivity Assistant
Running  NcbService         Network Connection Broker
Running  NcdAutoSetup       Network Connected Devices Auto-Setup
Stopped  Netlogon           Netlogon
Stopped  Netman             Network Connections
Running  netprofm           Network List Service
Stopped  NetTcpPortSharing  NetTcpPortSharing
Running  NlaSvc             Network Location Awareness
Running  nsi                Network Store Interface Service
Stopped  odserv             Microsoft Office Diagnostics Service
Stopped  ose                Office Source Engine
Running  p2pimsvc           Peer Networking Identity Manager
Running  p2psvc             Peer Networking Grouping
Running  PassThru Service   Internet Pass-Through Service
Running  PcaSvc             Program Compatibility Assistant Ser...
Stopped  PeerDistSvc        BranchCache
Stopped  PerfHost           Performance Counter DLL Host
Stopped  pla                Performance Logs & Alerts
Running  PlugPlay           Plug and Play
Stopped  PNRPAutoReg        PNRP Machine Name Publication Service
Running  PNRPsvc            Peer Name Resolution Protocol
Running  PolicyAgent        IPsec Policy Agent
Running  Power              Power
Stopped  PrintNotify        Printer Extensions and Notifications
Running  ProfSvc            User Profile Service
Stopped  QWAVE              Quality Windows Audio Video Experience
Stopped  RasAuto            Remote Access Auto Connection Manager
Stopped  RasMan             Remote Access Connection Manager
Stopped  RemoteAccess       Routing and Remote Access
Stopped  RemoteRegistry     Remote Registry
Stopped  rpcapd             Remote Packet Capture Protocol v.0 ...
Running  RpcEptMapper       RPC Endpoint Mapper
Stopped  RpcLocator         Remote Procedure Call (RPC) Locator
Running  RpcSs              Remote Procedure Call (RPC)
Running  SamSs              Security Accounts Manager
Stopped  SCardSvr           Smart Card
Stopped  ScDeviceEnum       Smart Card Device Enumeration Service
Running  Schedule           Task Scheduler
Stopped  SCPolicySvc        Smart Card Removal Policy
Running  seclogon           Secondary Log-on
Running  SENS               System Event Notification Service
Stopped  SensrSvc           Sensor Monitoring Service
Stopped  SessionEnv         Remote Desktop Configuration
Stopped  SharedAccess       Internet Connection Sharing (ICS)
Running  ShellHWDetection   Shell Hardware Detection
Stopped  smphost            Microsoft Storage Spaces SMP
Stopped  SNMPTRAP           SNMP Trap
Running  Spooler            Print Spooler
Stopped  sppsvc             Software Protection
Running  SQLWriter          SQL Server VSS Writer
Running  SSDPSRV            SSDP Discovery
Stopped  SstpSvc            Secure Socket Tunneling Protocol Se...
Running  stisvc             Windows Image Acquisition (WIA)
Stopped  StorSvc            Storage Service
Stopped  svsvc              Spot Verifier
Stopped  swprv              Microsoft Software Shadow Copy Prov...
Running  SysMain            Superfetch
Running  SystemEventsBroker System Events Broker
Stopped  TabletInputService Touch Keyboard and Handwriting Pane...
Stopped  TapiSrv            Telephony
Running  TeamViewer         TeamViewer 13
Stopped  TermService        Remote Desktop Services
Running  Themes             Themes
Stopped  THREADORDER        Thread Ordering Server
Running  TimeBroker         Time Broker
Running  TrkWks             Distributed Link Tracking Client
Stopped  TrustedInstaller   Windows Modules Installer
Stopped  UI0Detect          Interactive Services Detection
Stopped  UmRdpService       Remote Desktop Services UserMode Po...
Running  upnphost           UPnP Device Host
Stopped  uSHAREitSvc        SHAREit Hotspot Service
Stopped  VaultSvc           Credential Manager
Stopped  vds                Virtual Disk
Running  VMAuthdService     VMware Authorization Service
Stopped  vmicguestinterface Hyper-V Guest Service Interface
Stopped  vmicheartbeat      Hyper-V Heartbeat Service
Stopped  vmickvpexchange    Hyper-V Data Exchange Service
Stopped  vmicrdv            Hyper-V Remote Desktop Virtualizati...
Stopped  vmicshutdown       Hyper-V Guest Shutdown Service
Stopped  vmictimesync       Hyper-V Time Synchronization Service
Stopped  vmicvss            Hyper-V Volume Shadow Copy Requestor
Stopped  VMnetDHCP          VMware DHCP Service
Running  VMUSBArbService    VMware USB Arbitration Service
Running  VMware NAT Service VMware NAT Service
Running  VMwareHostd        VMware Workstation Server
Stopped  VSS                Volume Shadow Copy
Running  W32Time            Windows Time
Stopped  wbengine           Block Level Backup Engine Service
Stopped  WbioSrvc           Windows Biometric Service
Running  Wcmsvc             Windows Connection Manager
Stopped  wcncsvc            Windows Connect Now - Config Registrar
Stopped  WcsPlugInService   Windows Colour System
Running  WdiServiceHost     Diagnostic Service Host
Stopped  WdiSystemHost      Diagnostic System Host
Stopped  WdNisSvc           Windows Defender Network Inspection...
Stopped  WebClient          WebClient
Stopped  Wecsvc             Windows Event Collector
Stopped  WEPHOSTSVC         Windows Encryption Provider Host Se...
Stopped  wercplsupport      Problem Reports and Solutions Contr...
Stopped  WerSvc             Windows Error Reporting Service
Stopped  WiaRpc             Still Image Acquisition Events
Stopped  WinDefend          Windows Defender Service
Running  WinHttpAutoProx... WinHTTP Web Proxy Auto-Discovery Se...
Running  Winmgmt            Windows Management Instrumentation
Running  WinRM              Windows Remote Management (WS-Manag...
Stopped  WlanSvc            WLAN AutoConfig
Stopped  wlidsvc            Microsoft Account Sign-in Assistant
Stopped  wmiApSrv           WMI Performance Adapter
Running  WMPNetworkSvc      Windows Media Player Network Sharin...
Stopped  workfolderssvc     Work Folders
Stopped  WPCSvc             Family Safety
Stopped  WPDBusEnum         Portable Device Enumerator Service
Running  wscsvc             Security Center
Running  WSearch            Windows Search
Running  WSService          Windows Store Service (WSService)
Stopped  wuauserv           Windows Update
Running  wudfsvc            Windows Driver Foundation - User-mo...
Stopped  WwanSvc            WWAN AutoConfig


PS C:\Windows\system32> get-services -name
get-services : The term 'get-services' is not recognized as the name of a cmdlet, function, script file, or operable 
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ get-services -name
+ ~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (get-services:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
get-services : The term 'get-services' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is
correct and try again.
At line:1 char:1
+ get-services -name
+ ~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (get-services:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Windows\system32> get-help $myservices -Examples
>> TerminatingError(Get-Help): "Cannot convert 'System.Object[]' to the type 'System.String' required by parameter 'Name'. Specified method is not supported."
Get-Help : Cannot convert 'System.Object[]' to the type 'System.String' required by parameter 'Name'. Specified method 
is not supported.
At line:1 char:10
+ get-help $myservices -Examples
+          ~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-Help], ParameterBindingException
    + FullyQualifiedErrorId : CannotConvertArgument,Microsoft.PowerShell.Commands.GetHelpCommand
Get-Help : Cannot convert 'System.Object[]' to the type 'System.String' required by parameter 'Name'. Specified method is not supported.
At line:1 char:10
+ get-help $myservices -Examples
+          ~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-Help], ParameterBindingException
    + FullyQualifiedErrorId : CannotConvertArgument,Microsoft.PowerShell.Commands.GetHelpCommand

PS C:\Windows\system32> $myservices | Get-Member


   TypeName: System.ServiceProcess.ServiceController

Name                      MemberType    Definition
----                      ----------    ----------
Name                      AliasProperty Name = ServiceName
RequiredServices          AliasProperty RequiredServices = ServicesDependedOn
Disposed                  Event         System.EventHandler Disposed(System.Object, System.EventArgs)
Close                     Method        void Close()
Continue                  Method        void Continue()
CreateObjRef              Method        System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
Dispose                   Method        void Dispose(), void IDisposable.Dispose()
Equals                    Method        bool Equals(System.Object obj)
ExecuteCommand            Method        void ExecuteCommand(int command)
GetHashCode               Method        int GetHashCode()
GetLifetimeService        Method        System.Object GetLifetimeService()
GetType                   Method        type GetType()
InitializeLifetimeService Method        System.Object InitializeLifetimeService()
Pause                     Method        void Pause()
Refresh                   Method        void Refresh()
Start                     Method        void Start(), void Start(string[] args)
Stop                      Method        void Stop()
WaitForStatus             Method        void WaitForStatus(System.ServiceProcess.ServiceControllerStatus desiredStatus), void WaitForStatus(System.ServiceProcess.ServiceControllerStatus desiredStatus, timespan ...
CanPauseAndContinue       Property      bool CanPauseAndContinue {get;}
CanShutdown               Property      bool CanShutdown {get;}
CanStop                   Property      bool CanStop {get;}
Container                 Property      System.ComponentModel.IContainer Container {get;}
DependentServices         Property      System.ServiceProcess.ServiceController[] DependentServices {get;}
DisplayName               Property      string DisplayName {get;set;}
MachineName               Property      string MachineName {get;set;}
ServiceHandle             Property      System.Runtime.InteropServices.SafeHandle ServiceHandle {get;}
ServiceName               Property      string ServiceName {get;set;}
ServicesDependedOn        Property      System.ServiceProcess.ServiceController[] ServicesDependedOn {get;}
ServiceType               Property      System.ServiceProcess.ServiceType ServiceType {get;}
Site                      Property      System.ComponentModel.ISite Site {get;set;}
StartType                 Property      System.ServiceProcess.ServiceStartMode StartType {get;}
Status                    Property      System.ServiceProcess.ServiceControllerStatus Status {get;}
ToString                  ScriptMethod  System.Object ToString();


PS C:\Windows\system32> $myservices.GetType()

IsPublic IsSerial Name                                     BaseType
-------- -------- ----                                     --------
True     True     Object[]                                 System.Array


PS C:\Windows\system32> Get-Member -InputObject $myservices


   TypeName: System.Object[]

Name           MemberType            Definition
----           ----------            ----------
Count          AliasProperty         Count = Length
Add            Method                int IList.Add(System.Object value)
Address        Method                System.Object&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 Address(int )
Clear          Method                void IList.Clear()
Clone          Method                System.Object Clone(), System.Object ICloneable.Clone()
CompareTo      Method                int IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)
Contains       Method                bool IList.Contains(System.Object value)
CopyTo         Method                void CopyTo(array array, int index), void CopyTo(array array, long index), void ICollection.CopyTo(array array, int index)
Equals         Method                bool Equals(System.Object obj), bool IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)
Get            Method                System.Object Get(int )
GetEnumerator  Method                System.Collections.IEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator()
GetHashCode    Method                int GetHashCode(), int IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)
GetLength      Method                int GetLength(int dimension)
GetLongLength  Method                long GetLongLength(int dimension)
GetLowerBound  Method                int GetLowerBound(int dimension)
GetType        Method                type GetType()
GetUpperBound  Method                int GetUpperBound(int dimension)
GetValue       Method                System.Object GetValue(Params int[] indices), System.Object GetValue(int index), System.Object GetValue(int index1, int index2), System.Object GetValue(int index1, int index...
IndexOf        Method                int IList.IndexOf(System.Object value)
Initialize     Method                void Initialize()
Insert         Method                void IList.Insert(int index, System.Object value)
Remove         Method                void IList.Remove(System.Object value)
RemoveAt       Method                void IList.RemoveAt(int index)
Set            Method                void Set(int , System.Object )
SetValue       Method                void SetValue(System.Object value, int index), void SetValue(System.Object value, int index1, int index2), void SetValue(System.Object value, int index1, int index2, int ind...
ToString       Method                string ToString()
Item           ParameterizedProperty System.Object IList.Item(int index) {get;set;}
IsFixedSize    Property              bool IsFixedSize {get;}
IsReadOnly     Property              bool IsReadOnly {get;}
IsSynchronized Property              bool IsSynchronized {get;}
Length         Property              int Length {get;}
LongLength     Property              long LongLength {get;}
Rank           Property              int Rank {get;}
SyncRoot       Property              System.Object SyncRoot {get;}


PS C:\Windows\system32> $myarray=@(1,"2","prathamesh",4)
PS C:\Windows\system32> $myarray
1
2
prathamesh
4
PS C:\Windows\system32> $myarray | Get-Member


   TypeName: System.Int32

Name        MemberType Definition
----        ---------- ----------
CompareTo   Method     int CompareTo(System.Object value), int CompareTo(int value), int IComparable.CompareTo(System.Object obj), int IComparable[int].CompareTo(int other)
Equals      Method     bool Equals(System.Object obj), bool Equals(int obj), bool IEquatable[int].Equals(int other)
GetHashCode Method     int GetHashCode()
GetType     Method     type GetType()
GetTypeCode Method     System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()
ToBoolean   Method     bool IConvertible.ToBoolean(System.IFormatProvider provider)
ToByte      Method     byte IConvertible.ToByte(System.IFormatProvider provider)
ToChar      Method     char IConvertible.ToChar(System.IFormatProvider provider)
ToDateTime  Method     datetime IConvertible.ToDateTime(System.IFormatProvider provider)
ToDecimal   Method     decimal IConvertible.ToDecimal(System.IFormatProvider provider)
ToDouble    Method     double IConvertible.ToDouble(System.IFormatProvider provider)
ToInt16     Method     int16 IConvertible.ToInt16(System.IFormatProvider provider)
ToInt32     Method     int IConvertible.ToInt32(System.IFormatProvider provider)
ToInt64     Method     long IConvertible.ToInt64(System.IFormatProvider provider)
ToSByte     Method     sbyte IConvertible.ToSByte(System.IFormatProvider provider)
ToSingle    Method     float IConvertible.ToSingle(System.IFormatProvider provider)
ToString    Method     string ToString(), string ToString(string format), string ToString(System.IFormatProvider provider), string ToString(string format, System.IFormatProvider provider), string IFormattable.T...
ToType      Method     System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)
ToUInt16    Method     uint16 IConvertible.ToUInt16(System.IFormatProvider provider)
ToUInt32    Method     uint32 IConvertible.ToUInt32(System.IFormatProvider provider)
ToUInt64    Method     uint64 IConvertible.ToUInt64(System.IFormatProvider provider)


   TypeName: System.String

Name             MemberType            Definition
----             ----------            ----------
Clone            Method                System.Object Clone(), System.Object ICloneable.Clone()
CompareTo        Method                int CompareTo(System.Object value), int CompareTo(string strB), int IComparable.CompareTo(System.Object obj), int IComparable[string].CompareTo(string other)
Contains         Method                bool Contains(string value)
CopyTo           Method                void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)
EndsWith         Method                bool EndsWith(string value), bool EndsWith(string value, System.StringComparison comparisonType), bool EndsWith(string value, bool ignoreCase, cultureinfo culture)
Equals           Method                bool Equals(System.Object obj), bool Equals(string value), bool Equals(string value, System.StringComparison comparisonType), bool IEquatable[string].Equals(string other)
GetEnumerator    Method                System.CharEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator(), System.Collections.Generic.IEnumerator[char] IEnumerable[char].GetEnumer...
GetHashCode      Method                int GetHashCode()
GetType          Method                type GetType()
GetTypeCode      Method                System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()
IndexOf          Method                int IndexOf(char value), int IndexOf(char value, int startIndex), int IndexOf(char value, int startIndex, int count), int IndexOf(string value), int IndexOf(string value, ...
IndexOfAny       Method                int IndexOfAny(char[] anyOf), int IndexOfAny(char[] anyOf, int startIndex), int IndexOfAny(char[] anyOf, int startIndex, int count)
Insert           Method                string Insert(int startIndex, string value)
IsNormalized     Method                bool IsNormalized(), bool IsNormalized(System.Text.NormalizationForm normalizationForm)
LastIndexOf      Method                int LastIndexOf(char value), int LastIndexOf(char value, int startIndex), int LastIndexOf(char value, int startIndex, int count), int LastIndexOf(string value), int LastIn...
LastIndexOfAny   Method                int LastIndexOfAny(char[] anyOf), int LastIndexOfAny(char[] anyOf, int startIndex), int LastIndexOfAny(char[] anyOf, int startIndex, int count)
Normalize        Method                string Normalize(), string Normalize(System.Text.NormalizationForm normalizationForm)
PadLeft          Method                string PadLeft(int totalWidth), string PadLeft(int totalWidth, char paddingChar)
PadRight         Method                string PadRight(int totalWidth), string PadRight(int totalWidth, char paddingChar)
Remove           Method                string Remove(int startIndex, int count), string Remove(int startIndex)
Replace          Method                string Replace(char oldChar, char newChar), string Replace(string oldValue, string newValue)
Split            Method                string[] Split(Params char[] separator), string[] Split(char[] separator, int count), string[] Split(char[] separator, System.StringSplitOptions options), string[] Split(c...
StartsWith       Method                bool StartsWith(string value), bool StartsWith(string value, System.StringComparison comparisonType), bool StartsWith(string value, bool ignoreCase, cultureinfo culture)
Substring        Method                string Substring(int startIndex), string Substring(int startIndex, int length)
ToBoolean        Method                bool IConvertible.ToBoolean(System.IFormatProvider provider)
ToByte           Method                byte IConvertible.ToByte(System.IFormatProvider provider)
ToChar           Method                char IConvertible.ToChar(System.IFormatProvider provider)
ToCharArray      Method                char[] ToCharArray(), char[] ToCharArray(int startIndex, int length)
ToDateTime       Method                datetime IConvertible.ToDateTime(System.IFormatProvider provider)
ToDecimal        Method                decimal IConvertible.ToDecimal(System.IFormatProvider provider)
ToDouble         Method                double IConvertible.ToDouble(System.IFormatProvider provider)
ToInt16          Method                int16 IConvertible.ToInt16(System.IFormatProvider provider)
ToInt32          Method                int IConvertible.ToInt32(System.IFormatProvider provider)
ToInt64          Method                long IConvertible.ToInt64(System.IFormatProvider provider)
ToLower          Method                string ToLower(), string ToLower(cultureinfo culture)
ToLowerInvariant Method                string ToLowerInvariant()
ToSByte          Method                sbyte IConvertible.ToSByte(System.IFormatProvider provider)
ToSingle         Method                float IConvertible.ToSingle(System.IFormatProvider provider)
ToString         Method                string ToString(), string ToString(System.IFormatProvider provider), string IConvertible.ToString(System.IFormatProvider provider)
ToType           Method                System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)
ToUInt16         Method                uint16 IConvertible.ToUInt16(System.IFormatProvider provider)
ToUInt32         Method                uint32 IConvertible.ToUInt32(System.IFormatProvider provider)
ToUInt64         Method                uint64 IConvertible.ToUInt64(System.IFormatProvider provider)
ToUpper          Method                string ToUpper(), string ToUpper(cultureinfo culture)
ToUpperInvariant Method                string ToUpperInvariant()
Trim             Method                string Trim(Params char[] trimChars), string Trim()
TrimEnd          Method                string TrimEnd(Params char[] trimChars)
TrimStart        Method                string TrimStart(Params char[] trimChars)
Chars            ParameterizedProperty char Chars(int index) {get;}
Length           Property              int Length {get;}


PS C:\Windows\system32> $myarray.GetType()

IsPublic IsSerial Name                                     BaseType
-------- -------- ----                                     --------
True     True     Object[]                                 System.Array


PS C:\Windows\system32> Get-Member -InputObject $myarray


   TypeName: System.Object[]

Name           MemberType            Definition
----           ----------            ----------
Count          AliasProperty         Count = Length
Add            Method                int IList.Add(System.Object value)
Address        Method                System.Object&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 Address(int )
Clear          Method                void IList.Clear()
Clone          Method                System.Object Clone(), System.Object ICloneable.Clone()
CompareTo      Method                int IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)
Contains       Method                bool IList.Contains(System.Object value)
CopyTo         Method                void CopyTo(array array, int index), void CopyTo(array array, long index), void ICollection.CopyTo(array array, int index)
Equals         Method                bool Equals(System.Object obj), bool IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)
Get            Method                System.Object Get(int )
GetEnumerator  Method                System.Collections.IEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator()
GetHashCode    Method                int GetHashCode(), int IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)
GetLength      Method                int GetLength(int dimension)
GetLongLength  Method                long GetLongLength(int dimension)
GetLowerBound  Method                int GetLowerBound(int dimension)
GetType        Method                type GetType()
GetUpperBound  Method                int GetUpperBound(int dimension)
GetValue       Method                System.Object GetValue(Params int[] indices), System.Object GetValue(int index), System.Object GetValue(int index1, int index2), System.Object GetValue(int index1, int index...
IndexOf        Method                int IList.IndexOf(System.Object value)
Initialize     Method                void Initialize()
Insert         Method                void IList.Insert(int index, System.Object value)
Remove         Method                void IList.Remove(System.Object value)
RemoveAt       Method                void IList.RemoveAt(int index)
Set            Method                void Set(int , System.Object )
SetValue       Method                void SetValue(System.Object value, int index), void SetValue(System.Object value, int index1, int index2), void SetValue(System.Object value, int index1, int index2, int ind...
ToString       Method                string ToString()
Item           ParameterizedProperty System.Object IList.Item(int index) {get;set;}
IsFixedSize    Property              bool IsFixedSize {get;}
IsReadOnly     Property              bool IsReadOnly {get;}
IsSynchronized Property              bool IsSynchronized {get;}
Length         Property              int Length {get;}
LongLength     Property              long LongLength {get;}
Rank           Property              int Rank {get;}
SyncRoot       Property              System.Object SyncRoot {get;}


PS C:\Windows\system32> $myarray[0]
1
PS C:\Windows\system32> $myarray[2]
prathamesh
PS C:\Windows\system32> $myarray[0]='prathamesh'
PS C:\Windows\system32> $myarray[0]=1
PS C:\Windows\system32> $myarray
1
2
prathamesh
4
PS C:\Windows\system32> $myarray[0]=4
PS C:\Windows\system32> $myarray
4
2
prathamesh
4
PS C:\Windows\system32> $myarray | Get-Member


   TypeName: System.Int32

Name        MemberType Definition
----        ---------- ----------
CompareTo   Method     int CompareTo(System.Object value), int CompareTo(int value), int IComparable.CompareTo(System.Object obj), int IComparable[int].CompareTo(int other)
Equals      Method     bool Equals(System.Object obj), bool Equals(int obj), bool IEquatable[int].Equals(int other)
GetHashCode Method     int GetHashCode()
GetType     Method     type GetType()
GetTypeCode Method     System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()
ToBoolean   Method     bool IConvertible.ToBoolean(System.IFormatProvider provider)
ToByte      Method     byte IConvertible.ToByte(System.IFormatProvider provider)
ToChar      Method     char IConvertible.ToChar(System.IFormatProvider provider)
ToDateTime  Method     datetime IConvertible.ToDateTime(System.IFormatProvider provider)
ToDecimal   Method     decimal IConvertible.ToDecimal(System.IFormatProvider provider)
ToDouble    Method     double IConvertible.ToDouble(System.IFormatProvider provider)
ToInt16     Method     int16 IConvertible.ToInt16(System.IFormatProvider provider)
ToInt32     Method     int IConvertible.ToInt32(System.IFormatProvider provider)
ToInt64     Method     long IConvertible.ToInt64(System.IFormatProvider provider)
ToSByte     Method     sbyte IConvertible.ToSByte(System.IFormatProvider provider)
ToSingle    Method     float IConvertible.ToSingle(System.IFormatProvider provider)
ToString    Method     string ToString(), string ToString(string format), string ToString(System.IFormatProvider provider), string ToString(string format, System.IFormatProvider provider), string IFormattable.T...
ToType      Method     System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)
ToUInt16    Method     uint16 IConvertible.ToUInt16(System.IFormatProvider provider)
ToUInt32    Method     uint32 IConvertible.ToUInt32(System.IFormatProvider provider)
ToUInt64    Method     uint64 IConvertible.ToUInt64(System.IFormatProvider provider)


   TypeName: System.String

Name             MemberType            Definition
----             ----------            ----------
Clone            Method                System.Object Clone(), System.Object ICloneable.Clone()
CompareTo        Method                int CompareTo(System.Object value), int CompareTo(string strB), int IComparable.CompareTo(System.Object obj), int IComparable[string].CompareTo(string other)
Contains         Method                bool Contains(string value)
CopyTo           Method                void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)
EndsWith         Method                bool EndsWith(string value), bool EndsWith(string value, System.StringComparison comparisonType), bool EndsWith(string value, bool ignoreCase, cultureinfo culture)
Equals           Method                bool Equals(System.Object obj), bool Equals(string value), bool Equals(string value, System.StringComparison comparisonType), bool IEquatable[string].Equals(string other)
GetEnumerator    Method                System.CharEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator(), System.Collections.Generic.IEnumerator[char] IEnumerable[char].GetEnumer...
GetHashCode      Method                int GetHashCode()
GetType          Method                type GetType()
GetTypeCode      Method                System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()
IndexOf          Method                int IndexOf(char value), int IndexOf(char value, int startIndex), int IndexOf(char value, int startIndex, int count), int IndexOf(string value), int IndexOf(string value, ...
IndexOfAny       Method                int IndexOfAny(char[] anyOf), int IndexOfAny(char[] anyOf, int startIndex), int IndexOfAny(char[] anyOf, int startIndex, int count)
Insert           Method                string Insert(int startIndex, string value)
IsNormalized     Method                bool IsNormalized(), bool IsNormalized(System.Text.NormalizationForm normalizationForm)
LastIndexOf      Method                int LastIndexOf(char value), int LastIndexOf(char value, int startIndex), int LastIndexOf(char value, int startIndex, int count), int LastIndexOf(string value), int LastIn...
LastIndexOfAny   Method                int LastIndexOfAny(char[] anyOf), int LastIndexOfAny(char[] anyOf, int startIndex), int LastIndexOfAny(char[] anyOf, int startIndex, int count)
Normalize        Method                string Normalize(), string Normalize(System.Text.NormalizationForm normalizationForm)
PadLeft          Method                string PadLeft(int totalWidth), string PadLeft(int totalWidth, char paddingChar)
PadRight         Method                string PadRight(int totalWidth), string PadRight(int totalWidth, char paddingChar)
Remove           Method                string Remove(int startIndex, int count), string Remove(int startIndex)
Replace          Method                string Replace(char oldChar, char newChar), string Replace(string oldValue, string newValue)
Split            Method                string[] Split(Params char[] separator), string[] Split(char[] separator, int count), string[] Split(char[] separator, System.StringSplitOptions options), string[] Split(c...
StartsWith       Method                bool StartsWith(string value), bool StartsWith(string value, System.StringComparison comparisonType), bool StartsWith(string value, bool ignoreCase, cultureinfo culture)
Substring        Method                string Substring(int startIndex), string Substring(int startIndex, int length)
ToBoolean        Method                bool IConvertible.ToBoolean(System.IFormatProvider provider)
ToByte           Method                byte IConvertible.ToByte(System.IFormatProvider provider)
ToChar           Method                char IConvertible.ToChar(System.IFormatProvider provider)
ToCharArray      Method                char[] ToCharArray(), char[] ToCharArray(int startIndex, int length)
ToDateTime       Method                datetime IConvertible.ToDateTime(System.IFormatProvider provider)
ToDecimal        Method                decimal IConvertible.ToDecimal(System.IFormatProvider provider)
ToDouble         Method                double IConvertible.ToDouble(System.IFormatProvider provider)
ToInt16          Method                int16 IConvertible.ToInt16(System.IFormatProvider provider)
ToInt32          Method                int IConvertible.ToInt32(System.IFormatProvider provider)
ToInt64          Method                long IConvertible.ToInt64(System.IFormatProvider provider)
ToLower          Method                string ToLower(), string ToLower(cultureinfo culture)
ToLowerInvariant Method                string ToLowerInvariant()
ToSByte          Method                sbyte IConvertible.ToSByte(System.IFormatProvider provider)
ToSingle         Method                float IConvertible.ToSingle(System.IFormatProvider provider)
ToString         Method                string ToString(), string ToString(System.IFormatProvider provider), string IConvertible.ToString(System.IFormatProvider provider)
ToType           Method                System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)
ToUInt16         Method                uint16 IConvertible.ToUInt16(System.IFormatProvider provider)
ToUInt32         Method                uint32 IConvertible.ToUInt32(System.IFormatProvider provider)
ToUInt64         Method                uint64 IConvertible.ToUInt64(System.IFormatProvider provider)
ToUpper          Method                string ToUpper(), string ToUpper(cultureinfo culture)
ToUpperInvariant Method                string ToUpperInvariant()
Trim             Method                string Trim(Params char[] trimChars), string Trim()
TrimEnd          Method                string TrimEnd(Params char[] trimChars)
TrimStart        Method                string TrimStart(Params char[] trimChars)
Chars            ParameterizedProperty char Chars(int index) {get;}
Length           Property              int Length {get;}


PS C:\Windows\system32> $myarray.GetType()

IsPublic IsSerial Name                                     BaseType
-------- -------- ----                                     --------
True     True     Object[]                                 System.Array


PS C:\Windows\system32> $myarray | Get-Member


   TypeName: System.Int32

Name        MemberType Definition
----        ---------- ----------
CompareTo   Method     int CompareTo(System.Object value), int CompareTo(int value), int IComparable.CompareTo(System.Object obj), int IComparable[int].CompareTo(int other)
Equals      Method     bool Equals(System.Object obj), bool Equals(int obj), bool IEquatable[int].Equals(int other)
GetHashCode Method     int GetHashCode()
GetType     Method     type GetType()
GetTypeCode Method     System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()
ToBoolean   Method     bool IConvertible.ToBoolean(System.IFormatProvider provider)
ToByte      Method     byte IConvertible.ToByte(System.IFormatProvider provider)
ToChar      Method     char IConvertible.ToChar(System.IFormatProvider provider)
ToDateTime  Method     datetime IConvertible.ToDateTime(System.IFormatProvider provider)
ToDecimal   Method     decimal IConvertible.ToDecimal(System.IFormatProvider provider)
ToDouble    Method     double IConvertible.ToDouble(System.IFormatProvider provider)
ToInt16     Method     int16 IConvertible.ToInt16(System.IFormatProvider provider)
ToInt32     Method     int IConvertible.ToInt32(System.IFormatProvider provider)
ToInt64     Method     long IConvertible.ToInt64(System.IFormatProvider provider)
ToSByte     Method     sbyte IConvertible.ToSByte(System.IFormatProvider provider)
ToSingle    Method     float IConvertible.ToSingle(System.IFormatProvider provider)
ToString    Method     string ToString(), string ToString(string format), string ToString(System.IFormatProvider provider), string ToString(string format, System.IFormatProvider provider), string IFormattable.T...
ToType      Method     System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)
ToUInt16    Method     uint16 IConvertible.ToUInt16(System.IFormatProvider provider)
ToUInt32    Method     uint32 IConvertible.ToUInt32(System.IFormatProvider provider)
ToUInt64    Method     uint64 IConvertible.ToUInt64(System.IFormatProvider provider)


   TypeName: System.String

Name             MemberType            Definition
----             ----------            ----------
Clone            Method                System.Object Clone(), System.Object ICloneable.Clone()
CompareTo        Method                int CompareTo(System.Object value), int CompareTo(string strB), int IComparable.CompareTo(System.Object obj), int IComparable[string].CompareTo(string other)
Contains         Method                bool Contains(string value)
CopyTo           Method                void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)
EndsWith         Method                bool EndsWith(string value), bool EndsWith(string value, System.StringComparison comparisonType), bool EndsWith(string value, bool ignoreCase, cultureinfo culture)
Equals           Method                bool Equals(System.Object obj), bool Equals(string value), bool Equals(string value, System.StringComparison comparisonType), bool IEquatable[string].Equals(string other)
GetEnumerator    Method                System.CharEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator(), System.Collections.Generic.IEnumerator[char] IEnumerable[char].GetEnumer...
GetHashCode      Method                int GetHashCode()
GetType          Method                type GetType()
GetTypeCode      Method                System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()
IndexOf          Method                int IndexOf(char value), int IndexOf(char value, int startIndex), int IndexOf(char value, int startIndex, int count), int IndexOf(string value), int IndexOf(string value, ...
IndexOfAny       Method                int IndexOfAny(char[] anyOf), int IndexOfAny(char[] anyOf, int startIndex), int IndexOfAny(char[] anyOf, int startIndex, int count)
Insert           Method                string Insert(int startIndex, string value)
IsNormalized     Method                bool IsNormalized(), bool IsNormalized(System.Text.NormalizationForm normalizationForm)
LastIndexOf      Method                int LastIndexOf(char value), int LastIndexOf(char value, int startIndex), int LastIndexOf(char value, int startIndex, int count), int LastIndexOf(string value), int LastIn...
LastIndexOfAny   Method                int LastIndexOfAny(char[] anyOf), int LastIndexOfAny(char[] anyOf, int startIndex), int LastIndexOfAny(char[] anyOf, int startIndex, int count)
Normalize        Method                string Normalize(), string Normalize(System.Text.NormalizationForm normalizationForm)
PadLeft          Method                string PadLeft(int totalWidth), string PadLeft(int totalWidth, char paddingChar)
PadRight         Method                string PadRight(int totalWidth), string PadRight(int totalWidth, char paddingChar)
Remove           Method                string Remove(int startIndex, int count), string Remove(int startIndex)
Replace          Method                string Replace(char oldChar, char newChar), string Replace(string oldValue, string newValue)
Split            Method                string[] Split(Params char[] separator), string[] Split(char[] separator, int count), string[] Split(char[] separator, System.StringSplitOptions options), string[] Split(c...
StartsWith       Method                bool StartsWith(string value), bool StartsWith(string value, System.StringComparison comparisonType), bool StartsWith(string value, bool ignoreCase, cultureinfo culture)
Substring        Method                string Substring(int startIndex), string Substring(int startIndex, int length)
ToBoolean        Method                bool IConvertible.ToBoolean(System.IFormatProvider provider)
ToByte           Method                byte IConvertible.ToByte(System.IFormatProvider provider)
ToChar           Method                char IConvertible.ToChar(System.IFormatProvider provider)
ToCharArray      Method                char[] ToCharArray(), char[] ToCharArray(int startIndex, int length)
ToDateTime       Method                datetime IConvertible.ToDateTime(System.IFormatProvider provider)
ToDecimal        Method                decimal IConvertible.ToDecimal(System.IFormatProvider provider)
ToDouble         Method                double IConvertible.ToDouble(System.IFormatProvider provider)
ToInt16          Method                int16 IConvertible.ToInt16(System.IFormatProvider provider)
ToInt32          Method                int IConvertible.ToInt32(System.IFormatProvider provider)
ToInt64          Method                long IConvertible.ToInt64(System.IFormatProvider provider)
ToLower          Method                string ToLower(), string ToLower(cultureinfo culture)
ToLowerInvariant Method                string ToLowerInvariant()
ToSByte          Method                sbyte IConvertible.ToSByte(System.IFormatProvider provider)
ToSingle         Method                float IConvertible.ToSingle(System.IFormatProvider provider)
ToString         Method                string ToString(), string ToString(System.IFormatProvider provider), string IConvertible.ToString(System.IFormatProvider provider)
ToType           Method                System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)
ToUInt16         Method                uint16 IConvertible.ToUInt16(System.IFormatProvider provider)
ToUInt32         Method                uint32 IConvertible.ToUInt32(System.IFormatProvider provider)
ToUInt64         Method                uint64 IConvertible.ToUInt64(System.IFormatProvider provider)
ToUpper          Method                string ToUpper(), string ToUpper(cultureinfo culture)
ToUpperInvariant Method                string ToUpperInvariant()
Trim             Method                string Trim(Params char[] trimChars), string Trim()
TrimEnd          Method                string TrimEnd(Params char[] trimChars)
TrimStart        Method                string TrimStart(Params char[] trimChars)
Chars            ParameterizedProperty char Chars(int index) {get;}
Length           Property              int Length {get;}


PS C:\Windows\system32> Get-Member -InputObject $myarray


   TypeName: System.Object[]

Name           MemberType            Definition
----           ----------            ----------
Count          AliasProperty         Count = Length
Add            Method                int IList.Add(System.Object value)
Address        Method                System.Object&, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 Address(int )
Clear          Method                void IList.Clear()
Clone          Method                System.Object Clone(), System.Object ICloneable.Clone()
CompareTo      Method                int IStructuralComparable.CompareTo(System.Object other, System.Collections.IComparer comparer)
Contains       Method                bool IList.Contains(System.Object value)
CopyTo         Method                void CopyTo(array array, int index), void CopyTo(array array, long index), void ICollection.CopyTo(array array, int index)
Equals         Method                bool Equals(System.Object obj), bool IStructuralEquatable.Equals(System.Object other, System.Collections.IEqualityComparer comparer)
Get            Method                System.Object Get(int )
GetEnumerator  Method                System.Collections.IEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator()
GetHashCode    Method                int GetHashCode(), int IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer comparer)
GetLength      Method                int GetLength(int dimension)
GetLongLength  Method                long GetLongLength(int dimension)
GetLowerBound  Method                int GetLowerBound(int dimension)
GetType        Method                type GetType()
GetUpperBound  Method                int GetUpperBound(int dimension)
GetValue       Method                System.Object GetValue(Params int[] indices), System.Object GetValue(int index), System.Object GetValue(int index1, int index2), System.Object GetValue(int index1, int index...
IndexOf        Method                int IList.IndexOf(System.Object value)
Initialize     Method                void Initialize()
Insert         Method                void IList.Insert(int index, System.Object value)
Remove         Method                void IList.Remove(System.Object value)
RemoveAt       Method                void IList.RemoveAt(int index)
Set            Method                void Set(int , System.Object )
SetValue       Method                void SetValue(System.Object value, int index), void SetValue(System.Object value, int index1, int index2), void SetValue(System.Object value, int index1, int index2, int ind...
ToString       Method                string ToString()
Item           ParameterizedProperty System.Object IList.Item(int index) {get;set;}
IsFixedSize    Property              bool IsFixedSize {get;}
IsReadOnly     Property              bool IsReadOnly {get;}
IsSynchronized Property              bool IsSynchronized {get;}
Length         Property              int Length {get;}
LongLength     Property              long LongLength {get;}
Rank           Property              int Rank {get;}
SyncRoot       Property              System.Object SyncRoot {get;}


PS C:\Windows\system32> $myarray.Add(1)
Exception calling "Add" with "1" argument(s): "Collection was of a fixed size."
At line:1 char:1
+ $myarray.Add(1)
+ ~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException
Exception calling "Add" with "1" argument(s): "Collection was of a fixed size."
At line:1 char:1
+ $myarray.Add(1)
+ ~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException

PS C:\Windows\system32> $myarray.Add(0)
Exception calling "Add" with "1" argument(s): "Collection was of a fixed size."
At line:1 char:1
+ $myarray.Add(0)
+ ~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException
Exception calling "Add" with "1" argument(s): "Collection was of a fixed size."
At line:1 char:1
+ $myarray.Add(0)
+ ~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : NotSupportedException

PS C:\Windows\system32> [System.Collections.ArrayList]$mynewarray=@(1,2,3)
PS C:\Windows\system32> $mynewarray
1
2
3
PS C:\Windows\system32> $mynewarray.Add(4)
3
PS C:\Windows\system32> $mynewarray
1
2
3
4
PS C:\Windows\system32> $mynewarray.Count
4
PS C:\Windows\system32> $mynewarray[-1]
4
PS C:\Windows\system32> $mynewarray[-2]
3
PS C:\Windows\system32> $mynewa = @(1,2,3)
PS C:\Windows\system32> $value=$mynewa.IndexOf(1)
PS C:\Windows\system32> TerminatingError(Resolve-Path): "Cannot process argument because the value of argument "path" is not valid. Change the value of the "path" argument and run the operation again."
PS C:\Windows\system32> $mynewa[$value]='abc'
PS C:\Windows\system32> $mynewa
abc
2
3
PS C:\Windows\system32> $array=@("1","Sam","2","Sam","4")
PS C:\Windows\system32> $array
1
Sam
2
Sam
4
PS C:\Windows\system32> $array.IndexOf("Sam")
1
PS C:\Windows\system32> $array(1)="abc"
At line:1 char:7
+ $array(1)="abc"
+       ~
Unexpected token '(' in expression or statement.

At line:1 char:8
+ $array(1)="abc"
+        ~
The assignment expression is not valid. The input to an assignment operator must be an object that is able to accept assignments, such as a variable or a property.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnexpectedToken

PS C:\Windows\system32> $array.IndexOf("Sam",2)
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ $array.IndexOf("Sam",2)
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ $array.IndexOf("Sam",2)
+ ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Windows\system32> $array.IndexOf("Sam")
1
PS C:\Windows\system32> $array.Contains("Sam")
True
PS C:\Windows\system32> ($array).IndexOf("Sam",1)
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ ($array).IndexOf("Sam",1)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ ($array).IndexOf("Sam",1)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Windows\system32> $value1=$array.IndexOf("Sam",$value+1)
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ $value1=$array.IndexOf("Sam",$value+1)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ $value1=$array.IndexOf("Sam",$value+1)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Windows\system32> $value=$array.IndexOf("Sam")
PS C:\Windows\system32> $array
1
Sam
2
Sam
4
PS C:\Windows\system32> $array.IndexOf("Sam")
1
PS C:\Windows\system32> $value=$array.IndexOf("Sam")
PS C:\Windows\system32> $value1=$array.IndexOf("Sam",$value+1)
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ $value1=$array.IndexOf("Sam",$value+1)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest
Cannot find an overload for "IndexOf" and the argument count: "2".
At line:1 char:1
+ $value1=$array.IndexOf("Sam",$value+1)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodCountCouldNotFindBest

PS C:\Windows\system32> $array[$value]='ijk'
PS C:\Windows\system32> $array
1
ijk
2
Sam
4
PS C:\Windows\system32> $value=$array.IndexOf("Sam")
PS C:\Windows\system32> $array[$value]='ijk'
PS C:\Windows\system32> $array
1
ijk
2
ijk
4
PS C:\Windows\system32> $value=$array.IndexOf("Sam")
PS C:\Windows\system32> $array
1
ijk
2
ijk
4
PS C:\Windows\system32> get-help restart-service -online
PS C:\Windows\system32> get-process | Get-Member


   TypeName: System.Diagnostics.Process

Name                       MemberType     Definition
----                       ----------     ----------
Handles                    AliasProperty  Handles = Handlecount
Name                       AliasProperty  Name = ProcessName
NPM                        AliasProperty  NPM = NonpagedSystemMemorySize64
PM                         AliasProperty  PM = PagedMemorySize64
SI                         AliasProperty  SI = SessionId
VM                         AliasProperty  VM = VirtualMemorySize64
WS                         AliasProperty  WS = WorkingSet64
Disposed                   Event          System.EventHandler Disposed(System.Object, System.EventArgs)
ErrorDataReceived          Event          System.Diagnostics.DataReceivedEventHandler ErrorDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
Exited                     Event          System.EventHandler Exited(System.Object, System.EventArgs)
OutputDataReceived         Event          System.Diagnostics.DataReceivedEventHandler OutputDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
BeginErrorReadLine         Method         void BeginErrorReadLine()
BeginOutputReadLine        Method         void BeginOutputReadLine()
CancelErrorRead            Method         void CancelErrorRead()
CancelOutputRead           Method         void CancelOutputRead()
Close                      Method         void Close()
CloseMainWindow            Method         bool CloseMainWindow()
CreateObjRef               Method         System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
Dispose                    Method         void Dispose(), void IDisposable.Dispose()
Equals                     Method         bool Equals(System.Object obj)
GetHashCode                Method         int GetHashCode()
GetLifetimeService         Method         System.Object GetLifetimeService()
GetType                    Method         type GetType()
InitializeLifetimeService  Method         System.Object InitializeLifetimeService()
Kill                       Method         void Kill()
Refresh                    Method         void Refresh()
Start                      Method         bool Start()
ToString                   Method         string ToString()
WaitForExit                Method         bool WaitForExit(int milliseconds), void WaitForExit()
WaitForInputIdle           Method         bool WaitForInputIdle(int milliseconds), bool WaitForInputIdle()
__NounName                 NoteProperty   string __NounName=Process
BasePriority               Property       int BasePriority {get;}
Container                  Property       System.ComponentModel.IContainer Container {get;}
EnableRaisingEvents        Property       bool EnableRaisingEvents {get;set;}
ExitCode                   Property       int ExitCode {get;}
ExitTime                   Property       datetime ExitTime {get;}
Handle                     Property       System.IntPtr Handle {get;}
HandleCount                Property       int HandleCount {get;}
HasExited                  Property       bool HasExited {get;}
Id                         Property       int Id {get;}
MachineName                Property       string MachineName {get;}
MainModule                 Property       System.Diagnostics.ProcessModule MainModule {get;}
MainWindowHandle           Property       System.IntPtr MainWindowHandle {get;}
MainWindowTitle            Property       string MainWindowTitle {get;}
MaxWorkingSet              Property       System.IntPtr MaxWorkingSet {get;set;}
MinWorkingSet              Property       System.IntPtr MinWorkingSet {get;set;}
Modules                    Property       System.Diagnostics.ProcessModuleCollection Modules {get;}
NonpagedSystemMemorySize   Property       int NonpagedSystemMemorySize {get;}
NonpagedSystemMemorySize64 Property       long NonpagedSystemMemorySize64 {get;}
PagedMemorySize            Property       int PagedMemorySize {get;}
PagedMemorySize64          Property       long PagedMemorySize64 {get;}
PagedSystemMemorySize      Property       int PagedSystemMemorySize {get;}
PagedSystemMemorySize64    Property       long PagedSystemMemorySize64 {get;}
PeakPagedMemorySize        Property       int PeakPagedMemorySize {get;}
PeakPagedMemorySize64      Property       long PeakPagedMemorySize64 {get;}
PeakVirtualMemorySize      Property       int PeakVirtualMemorySize {get;}
PeakVirtualMemorySize64    Property       long PeakVirtualMemorySize64 {get;}
PeakWorkingSet             Property       int PeakWorkingSet {get;}
PeakWorkingSet64           Property       long PeakWorkingSet64 {get;}
PriorityBoostEnabled       Property       bool PriorityBoostEnabled {get;set;}
PriorityClass              Property       System.Diagnostics.ProcessPriorityClass PriorityClass {get;set;}
PrivateMemorySize          Property       int PrivateMemorySize {get;}
PrivateMemorySize64        Property       long PrivateMemorySize64 {get;}
PrivilegedProcessorTime    Property       timespan PrivilegedProcessorTime {get;}
ProcessName                Property       string ProcessName {get;}
ProcessorAffinity          Property       System.IntPtr ProcessorAffinity {get;set;}
Responding                 Property       bool Responding {get;}
SafeHandle                 Property       Microsoft.Win32.SafeHandles.SafeProcessHandle SafeHandle {get;}
SessionId                  Property       int SessionId {get;}
Site                       Property       System.ComponentModel.ISite Site {get;set;}
StandardError              Property       System.IO.StreamReader StandardError {get;}
StandardInput              Property       System.IO.StreamWriter StandardInput {get;}
StandardOutput             Property       System.IO.StreamReader StandardOutput {get;}
StartInfo                  Property       System.Diagnostics.ProcessStartInfo StartInfo {get;set;}
StartTime                  Property       datetime StartTime {get;}
SynchronizingObject        Property       System.ComponentModel.ISynchronizeInvoke SynchronizingObject {get;set;}
Threads                    Property       System.Diagnostics.ProcessThreadCollection Threads {get;}
TotalProcessorTime         Property       timespan TotalProcessorTime {get;}
UserProcessorTime          Property       timespan UserProcessorTime {get;}
VirtualMemorySize          Property       int VirtualMemorySize {get;}
VirtualMemorySize64        Property       long VirtualMemorySize64 {get;}
WorkingSet                 Property       int WorkingSet {get;}
WorkingSet64               Property       long WorkingSet64 {get;}
PSConfiguration            PropertySet    PSConfiguration {Name, Id, PriorityClass, FileVersion}
PSResources                PropertySet    PSResources {Name, Id, Handlecount, WorkingSet, NonPagedMemorySize, PagedMemorySize, PrivateMemorySize, VirtualMemorySize, Threads.Count, TotalProcessorTime}
Company                    ScriptProperty System.Object Company {get=$this.Mainmodule.FileVersionInfo.CompanyName;}
CPU                        ScriptProperty System.Object CPU {get=$this.TotalProcessorTime.TotalSeconds;}
Description                ScriptProperty System.Object Description {get=$this.Mainmodule.FileVersionInfo.FileDescription;}
FileVersion                ScriptProperty System.Object FileVersion {get=$this.Mainmodule.FileVersionInfo.FileVersion;}
Path                       ScriptProperty System.Object Path {get=$this.Mainmodule.FileName;}
Product                    ScriptProperty System.Object Product {get=$this.Mainmodule.FileVersionInfo.ProductName;}
ProductVersion             ScriptProperty System.Object ProductVersion {get=$this.Mainmodule.FileVersionInfo.ProductVersion;}


PS C:\Windows\system32> Get-Help Stop-Process -Online
PS C:\Windows\system32> get-process | Get-Member


   TypeName: System.Diagnostics.Process

Name                       MemberType     Definition
----                       ----------     ----------
Handles                    AliasProperty  Handles = Handlecount
Name                       AliasProperty  Name = ProcessName
NPM                        AliasProperty  NPM = NonpagedSystemMemorySize64
PM                         AliasProperty  PM = PagedMemorySize64
SI                         AliasProperty  SI = SessionId
VM                         AliasProperty  VM = VirtualMemorySize64
WS                         AliasProperty  WS = WorkingSet64
Disposed                   Event          System.EventHandler Disposed(System.Object, System.EventArgs)
ErrorDataReceived          Event          System.Diagnostics.DataReceivedEventHandler ErrorDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
Exited                     Event          System.EventHandler Exited(System.Object, System.EventArgs)
OutputDataReceived         Event          System.Diagnostics.DataReceivedEventHandler OutputDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
BeginErrorReadLine         Method         void BeginErrorReadLine()
BeginOutputReadLine        Method         void BeginOutputReadLine()
CancelErrorRead            Method         void CancelErrorRead()
CancelOutputRead           Method         void CancelOutputRead()
Close                      Method         void Close()
CloseMainWindow            Method         bool CloseMainWindow()
CreateObjRef               Method         System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
Dispose                    Method         void Dispose(), void IDisposable.Dispose()
Equals                     Method         bool Equals(System.Object obj)
GetHashCode                Method         int GetHashCode()
GetLifetimeService         Method         System.Object GetLifetimeService()
GetType                    Method         type GetType()
InitializeLifetimeService  Method         System.Object InitializeLifetimeService()
Kill                       Method         void Kill()
Refresh                    Method         void Refresh()
Start                      Method         bool Start()
ToString                   Method         string ToString()
WaitForExit                Method         bool WaitForExit(int milliseconds), void WaitForExit()
WaitForInputIdle           Method         bool WaitForInputIdle(int milliseconds), bool WaitForInputIdle()
__NounName                 NoteProperty   string __NounName=Process
BasePriority               Property       int BasePriority {get;}
Container                  Property       System.ComponentModel.IContainer Container {get;}
EnableRaisingEvents        Property       bool EnableRaisingEvents {get;set;}
ExitCode                   Property       int ExitCode {get;}
ExitTime                   Property       datetime ExitTime {get;}
Handle                     Property       System.IntPtr Handle {get;}
HandleCount                Property       int HandleCount {get;}
HasExited                  Property       bool HasExited {get;}
Id                         Property       int Id {get;}
MachineName                Property       string MachineName {get;}
MainModule                 Property       System.Diagnostics.ProcessModule MainModule {get;}
MainWindowHandle           Property       System.IntPtr MainWindowHandle {get;}
MainWindowTitle            Property       string MainWindowTitle {get;}
MaxWorkingSet              Property       System.IntPtr MaxWorkingSet {get;set;}
MinWorkingSet              Property       System.IntPtr MinWorkingSet {get;set;}
Modules                    Property       System.Diagnostics.ProcessModuleCollection Modules {get;}
NonpagedSystemMemorySize   Property       int NonpagedSystemMemorySize {get;}
NonpagedSystemMemorySize64 Property       long NonpagedSystemMemorySize64 {get;}
PagedMemorySize            Property       int PagedMemorySize {get;}
PagedMemorySize64          Property       long PagedMemorySize64 {get;}
PagedSystemMemorySize      Property       int PagedSystemMemorySize {get;}
PagedSystemMemorySize64    Property       long PagedSystemMemorySize64 {get;}
PeakPagedMemorySize        Property       int PeakPagedMemorySize {get;}
PeakPagedMemorySize64      Property       long PeakPagedMemorySize64 {get;}
PeakVirtualMemorySize      Property       int PeakVirtualMemorySize {get;}
PeakVirtualMemorySize64    Property       long PeakVirtualMemorySize64 {get;}
PeakWorkingSet             Property       int PeakWorkingSet {get;}
PeakWorkingSet64           Property       long PeakWorkingSet64 {get;}
PriorityBoostEnabled       Property       bool PriorityBoostEnabled {get;set;}
PriorityClass              Property       System.Diagnostics.ProcessPriorityClass PriorityClass {get;set;}
PrivateMemorySize          Property       int PrivateMemorySize {get;}
PrivateMemorySize64        Property       long PrivateMemorySize64 {get;}
PrivilegedProcessorTime    Property       timespan PrivilegedProcessorTime {get;}
ProcessName                Property       string ProcessName {get;}
ProcessorAffinity          Property       System.IntPtr ProcessorAffinity {get;set;}
Responding                 Property       bool Responding {get;}
SafeHandle                 Property       Microsoft.Win32.SafeHandles.SafeProcessHandle SafeHandle {get;}
SessionId                  Property       int SessionId {get;}
Site                       Property       System.ComponentModel.ISite Site {get;set;}
StandardError              Property       System.IO.StreamReader StandardError {get;}
StandardInput              Property       System.IO.StreamWriter StandardInput {get;}
StandardOutput             Property       System.IO.StreamReader StandardOutput {get;}
StartInfo                  Property       System.Diagnostics.ProcessStartInfo StartInfo {get;set;}
StartTime                  Property       datetime StartTime {get;}
SynchronizingObject        Property       System.ComponentModel.ISynchronizeInvoke SynchronizingObject {get;set;}
Threads                    Property       System.Diagnostics.ProcessThreadCollection Threads {get;}
TotalProcessorTime         Property       timespan TotalProcessorTime {get;}
UserProcessorTime          Property       timespan UserProcessorTime {get;}
VirtualMemorySize          Property       int VirtualMemorySize {get;}
VirtualMemorySize64        Property       long VirtualMemorySize64 {get;}
WorkingSet                 Property       int WorkingSet {get;}
WorkingSet64               Property       long WorkingSet64 {get;}
PSConfiguration            PropertySet    PSConfiguration {Name, Id, PriorityClass, FileVersion}
PSResources                PropertySet    PSResources {Name, Id, Handlecount, WorkingSet, NonPagedMemorySize, PagedMemorySize, PrivateMemorySize, VirtualMemorySize, Threads.Count, TotalProcessorTime}
Company                    ScriptProperty System.Object Company {get=$this.Mainmodule.FileVersionInfo.CompanyName;}
CPU                        ScriptProperty System.Object CPU {get=$this.TotalProcessorTime.TotalSeconds;}
Description                ScriptProperty System.Object Description {get=$this.Mainmodule.FileVersionInfo.FileDescription;}
FileVersion                ScriptProperty System.Object FileVersion {get=$this.Mainmodule.FileVersionInfo.FileVersion;}
Path                       ScriptProperty System.Object Path {get=$this.Mainmodule.FileName;}
Product                    ScriptProperty System.Object Product {get=$this.Mainmodule.FileVersionInfo.ProductName;}
ProductVersion             ScriptProperty System.Object ProductVersion {get=$this.Mainmodule.FileVersionInfo.ProductVersion;}


PS C:\Windows\system32> get-process | Export-Csv -path C:\Temp\process.csv
PS C:\Windows\system32> $myprocess = Import-Csv -path C:\Temp\process.csv
PS C:\Windows\system32> $myprocess | Get-Member


   TypeName: CSV:System.Diagnostics.Process

Name                       MemberType   Definition
----                       ----------   ----------
Equals                     Method       bool Equals(System.Object obj)
GetHashCode                Method       int GetHashCode()
GetType                    Method       type GetType()
ToString                   Method       string ToString()
BasePriority               NoteProperty string BasePriority=13
Company                    NoteProperty string Company=philandro Software GmbH
Container                  NoteProperty string Container=
CPU                        NoteProperty string CPU=0.421875
Description                NoteProperty string Description=AnyDesk
EnableRaisingEvents        NoteProperty string EnableRaisingEvents=False
ExitCode                   NoteProperty string ExitCode=
ExitTime                   NoteProperty string ExitTime=
FileVersion                NoteProperty string FileVersion=4.2.3.0
Handle                     NoteProperty string Handle=3172
HandleCount                NoteProperty string HandleCount=209
Handles                    NoteProperty string Handles=209
HasExited                  NoteProperty string HasExited=False
Id                         NoteProperty string Id=1384
MachineName                NoteProperty string MachineName=.
MainModule                 NoteProperty string MainModule=System.Diagnostics.ProcessModule (AnyDesk.exe)
MainWindowHandle           NoteProperty string MainWindowHandle=0
MainWindowTitle            NoteProperty string MainWindowTitle=
MaxWorkingSet              NoteProperty string MaxWorkingSet=1413120
MinWorkingSet              NoteProperty string MinWorkingSet=204800
Modules                    NoteProperty string Modules=System.Diagnostics.ProcessModuleCollection
Name                       NoteProperty string Name=AnyDesk
NonpagedSystemMemorySize   NoteProperty string NonpagedSystemMemorySize=16032
NonpagedSystemMemorySize64 NoteProperty string NonpagedSystemMemorySize64=16032
NPM                        NoteProperty string NPM=16032
PagedMemorySize            NoteProperty string PagedMemorySize=11923456
PagedMemorySize64          NoteProperty string PagedMemorySize64=11923456
PagedSystemMemorySize      NoteProperty string PagedSystemMemorySize=149112
PagedSystemMemorySize64    NoteProperty string PagedSystemMemorySize64=149112
Path                       NoteProperty string Path=C:\Program Files (x86)\AnyDesk\AnyDesk.exe
PeakPagedMemorySize        NoteProperty string PeakPagedMemorySize=15962112
PeakPagedMemorySize64      NoteProperty string PeakPagedMemorySize64=15962112
PeakVirtualMemorySize      NoteProperty string PeakVirtualMemorySize=112992256
PeakVirtualMemorySize64    NoteProperty string PeakVirtualMemorySize64=112992256
PeakWorkingSet             NoteProperty string PeakWorkingSet=17952768
PeakWorkingSet64           NoteProperty string PeakWorkingSet64=17952768
PM                         NoteProperty string PM=11923456
PriorityBoostEnabled       NoteProperty string PriorityBoostEnabled=True
PriorityClass              NoteProperty string PriorityClass=High
PrivateMemorySize          NoteProperty string PrivateMemorySize=11923456
PrivateMemorySize64        NoteProperty string PrivateMemorySize64=11923456
PrivilegedProcessorTime    NoteProperty string PrivilegedProcessorTime=00:00:00.0937500
ProcessName                NoteProperty string ProcessName=AnyDesk
ProcessorAffinity          NoteProperty string ProcessorAffinity=15
Product                    NoteProperty string Product=AnyDesk
ProductVersion             NoteProperty string ProductVersion=4.2
Responding                 NoteProperty string Responding=True
SafeHandle                 NoteProperty string SafeHandle=Microsoft.Win32.SafeHandles.SafeProcessHandle
SessionId                  NoteProperty string SessionId=0
SI                         NoteProperty string SI=0
Site                       NoteProperty string Site=
StandardError              NoteProperty string StandardError=
StandardInput              NoteProperty string StandardInput=
StandardOutput             NoteProperty string StandardOutput=
StartInfo                  NoteProperty string StartInfo=System.Diagnostics.ProcessStartInfo
StartTime                  NoteProperty string StartTime=09-03-2019 09:43:38 AM
SynchronizingObject        NoteProperty string SynchronizingObject=
Threads                    NoteProperty string Threads=System.Diagnostics.ProcessThreadCollection
TotalProcessorTime         NoteProperty string TotalProcessorTime=00:00:00.4218750
UserProcessorTime          NoteProperty string UserProcessorTime=00:00:00.3281250
VirtualMemorySize          NoteProperty string VirtualMemorySize=84082688
VirtualMemorySize64        NoteProperty string VirtualMemorySize64=84082688
VM                         NoteProperty string VM=84082688
WorkingSet                 NoteProperty string WorkingSet=11358208
WorkingSet64               NoteProperty string WorkingSet64=11358208
WS                         NoteProperty string WS=11358208
__NounName                 NoteProperty string __NounName=Process


PS C:\Windows\system32> $myprocess | stop-process -WhatIf
What if: Performing the operation "Stop-Process" on target "AnyDesk (1384)".
What if: Performing the operation "Stop-Process" on target "AnyDesk (4764)".
What if: Performing the operation "Stop-Process" on target "armsvc (1356)".
What if: Performing the operation "Stop-Process" on target "AsrAPPShop (3760)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAgentUpdater (3900)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAuthenticationAgentService (1796)".
What if: Performing the operation "Stop-Process" on target "chrome (104)".
What if: Performing the operation "Stop-Process" on target "chrome (1572)".
What if: Performing the operation "Stop-Process" on target "chrome (2176)".
What if: Performing the operation "Stop-Process" on target "chrome (2208)".
What if: Performing the operation "Stop-Process" on target "chrome (3408)".
What if: Performing the operation "Stop-Process" on target "chrome (3412)".
What if: Performing the operation "Stop-Process" on target "chrome (3692)".
What if: Performing the operation "Stop-Process" on target "chrome (4252)".
What if: Performing the operation "Stop-Process" on target "chrome (4584)".
What if: Performing the operation "Stop-Process" on target "chrome (5172)".
What if: Performing the operation "Stop-Process" on target "concentr (4980)".
What if: Performing the operation "Stop-Process" on target "conhost (4620)".
What if: Performing the operation "Stop-Process" on target "csrss (476)".
What if: Performing the operation "Stop-Process" on target "csrss (548)".
What if: Performing the operation "Stop-Process" on target "dasHost (1520)".
What if: Performing the operation "Stop-Process" on target "dllhost (4668)".
What if: Performing the operation "Stop-Process" on target "dwm (860)".
What if: Performing the operation "Stop-Process" on target "explorer (3788)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler (4840)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler64 (4848)".
What if: Performing the operation "Stop-Process" on target "HealthService (1492)".
What if: Performing the operation "Stop-Process" on target "IAStorDataMgrSvc (5292)".
What if: Performing the operation "Stop-Process" on target "IAStorIcon (2644)".
What if: Performing the operation "Stop-Process" on target "Idle (0)".
What if: Performing the operation "Stop-Process" on target "igfxCUIService (304)".
What if: Performing the operation "Stop-Process" on target "igfxEM (3768)".
What if: Performing the operation "Stop-Process" on target "IPROSetMonitor (1564)".
What if: Performing the operation "Stop-Process" on target "lsass (652)".
What if: Performing the operation "Stop-Process" on target "MonitoringHost (2908)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVC (1688)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVCM (1860)".
What if: Performing the operation "Stop-Process" on target "mvmcP2VAgent (2068)".
What if: Performing the operation "Stop-Process" on target "PassThruSvr (1752)".
What if: Performing the operation "Stop-Process" on target "powershell (1700)".
What if: Performing the operation "Stop-Process" on target "powershell_ise (3860)".
What if: Performing the operation "Stop-Process" on target "SearchIndexer (3280)".
What if: Performing the operation "Stop-Process" on target "services (644)".
What if: Performing the operation "Stop-Process" on target "smss (316)".
What if: Performing the operation "Stop-Process" on target "spoolsv (1196)".
What if: Performing the operation "Stop-Process" on target "sqlwriter (1872)".
What if: Performing the operation "Stop-Process" on target "svchost (336)".
What if: Performing the operation "Stop-Process" on target "svchost (728)".
What if: Performing the operation "Stop-Process" on target "svchost (740)".
What if: Performing the operation "Stop-Process" on target "svchost (772)".
What if: Performing the operation "Stop-Process" on target "svchost (876)".
What if: Performing the operation "Stop-Process" on target "svchost (920)".
What if: Performing the operation "Stop-Process" on target "svchost (948)".
What if: Performing the operation "Stop-Process" on target "svchost (1240)".
What if: Performing the operation "Stop-Process" on target "svchost (1440)".
What if: Performing the operation "Stop-Process" on target "svchost (1932)".
What if: Performing the operation "Stop-Process" on target "svchost (2820)".
What if: Performing the operation "Stop-Process" on target "svchost (2860)".
What if: Performing the operation "Stop-Process" on target "svchost (3316)".
What if: Performing the operation "Stop-Process" on target "System (4)".
What if: Performing the operation "Stop-Process" on target "taskhostex (3748)".
What if: Performing the operation "Stop-Process" on target "TeamViewer_Service (2000)".
What if: Performing the operation "Stop-Process" on target "vmnat (2028)".
What if: Performing the operation "Stop-Process" on target "vmware-authd (1596)".
What if: Performing the operation "Stop-Process" on target "vmware-hostd (2284)".
What if: Performing the operation "Stop-Process" on target "vmware-tray (5036)".
What if: Performing the operation "Stop-Process" on target "vmware-usbarbitrator64 (1696)".
What if: Performing the operation "Stop-Process" on target "wfcrun32 (5012)".
What if: Performing the operation "Stop-Process" on target "wininit (556)".
What if: Performing the operation "Stop-Process" on target "winlogon (600)".
What if: Performing the operation "Stop-Process" on target "wmpnetwk (5452)".
What if: Performing the operation "Stop-Process" on target "WZQKPICK (4772)".
PS C:\Windows\system32> $mynewprocess = Import-Csv -Path 'C:\Temp\process 1.csv'
PS C:\Windows\system32> $mynewprocess | Get-Member


   TypeName: System.Management.Automation.PSCustomObject

Name                       MemberType   Definition
----                       ----------   ----------
Equals                     Method       bool Equals(System.Object obj)
GetHashCode                Method       int GetHashCode()
GetType                    Method       type GetType()
ToString                   Method       string ToString()
BasePriority               NoteProperty string BasePriority=13
Company                    NoteProperty string Company=philandro Software GmbH
Container                  NoteProperty string Container=
CPU                        NoteProperty string CPU=0.421875
Description                NoteProperty string Description=AnyDesk
EnableRaisingEvents        NoteProperty string EnableRaisingEvents=FALSE
ExitCode                   NoteProperty string ExitCode=
ExitTime                   NoteProperty string ExitTime=
FileVersion                NoteProperty string FileVersion=4.2.3.0
Handle                     NoteProperty string Handle=3172
HandleCount                NoteProperty string HandleCount=209
Handles                    NoteProperty string Handles=209
HasExited                  NoteProperty string HasExited=FALSE
Id                         NoteProperty string Id=1384
MachineName                NoteProperty string MachineName=.
MainModule                 NoteProperty string MainModule=System.Diagnostics.ProcessModule (AnyDesk.exe)
MainWindowHandle           NoteProperty string MainWindowHandle=0
MainWindowTitle            NoteProperty string MainWindowTitle=
MaxWorkingSet              NoteProperty string MaxWorkingSet=1413120
MinWorkingSet              NoteProperty string MinWorkingSet=204800
Modules                    NoteProperty string Modules=System.Diagnostics.ProcessModuleCollection
Name                       NoteProperty string Name=AnyDesk
NonpagedSystemMemorySize   NoteProperty string NonpagedSystemMemorySize=16032
NonpagedSystemMemorySize64 NoteProperty string NonpagedSystemMemorySize64=16032
NPM                        NoteProperty string NPM=16032
PagedMemorySize            NoteProperty string PagedMemorySize=11923456
PagedMemorySize64          NoteProperty string PagedMemorySize64=11923456
PagedSystemMemorySize      NoteProperty string PagedSystemMemorySize=149112
PagedSystemMemorySize64    NoteProperty string PagedSystemMemorySize64=149112
Path                       NoteProperty string Path=C:\Program Files (x86)\AnyDesk\AnyDesk.exe
PeakPagedMemorySize        NoteProperty string PeakPagedMemorySize=15962112
PeakPagedMemorySize64      NoteProperty string PeakPagedMemorySize64=15962112
PeakVirtualMemorySize      NoteProperty string PeakVirtualMemorySize=112992256
PeakVirtualMemorySize64    NoteProperty string PeakVirtualMemorySize64=112992256
PeakWorkingSet             NoteProperty string PeakWorkingSet=17952768
PeakWorkingSet64           NoteProperty string PeakWorkingSet64=17952768
PM                         NoteProperty string PM=11923456
PriorityBoostEnabled       NoteProperty string PriorityBoostEnabled=TRUE
PriorityClass              NoteProperty string PriorityClass=High
PrivateMemorySize          NoteProperty string PrivateMemorySize=11923456
PrivateMemorySize64        NoteProperty string PrivateMemorySize64=11923456
PrivilegedProcessorTime    NoteProperty string PrivilegedProcessorTime=00:00.1
ProcessName                NoteProperty string ProcessName=AnyDesk
ProcessorAffinity          NoteProperty string ProcessorAffinity=15
Product                    NoteProperty string Product=AnyDesk
ProductVersion             NoteProperty string ProductVersion=4.2
Responding                 NoteProperty string Responding=TRUE
SafeHandle                 NoteProperty string SafeHandle=Microsoft.Win32.SafeHandles.SafeProcessHandle
SessionId                  NoteProperty string SessionId=0
SI                         NoteProperty string SI=0
Site                       NoteProperty string Site=
StandardError              NoteProperty string StandardError=
StandardInput              NoteProperty string StandardInput=
StandardOutput             NoteProperty string StandardOutput=
StartInfo                  NoteProperty string StartInfo=System.Diagnostics.ProcessStartInfo
StartTime                  NoteProperty string StartTime=09-03-2019 09:43
SynchronizingObject        NoteProperty string SynchronizingObject=
Threads                    NoteProperty string Threads=System.Diagnostics.ProcessThreadCollection
TotalProcessorTime         NoteProperty string TotalProcessorTime=00:00.4
UserProcessorTime          NoteProperty string UserProcessorTime=00:00.3
VirtualMemorySize          NoteProperty string VirtualMemorySize=84082688
VirtualMemorySize64        NoteProperty string VirtualMemorySize64=84082688
VM                         NoteProperty string VM=84082688
WorkingSet                 NoteProperty string WorkingSet=11358208
WorkingSet64               NoteProperty string WorkingSet64=11358208
WS                         NoteProperty string WS=11358208
__NounName                 NoteProperty string __NounName=Process


PS C:\Windows\system32> $mynewprocess | Stop-Service -WhatIf
What if: Performing the operation "Stop-Service" on target "AnyDesk Service (AnyDesk)".
What if: Performing the operation "Stop-Service" on target "AnyDesk Service (AnyDesk)".
Stop-Service : Cannot find any service with service name 'armsvc'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (armsvc:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'armsvc'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (armsvc:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'AsrAPPShop'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AsrAPPShop:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'AsrAPPShop'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AsrAPPShop:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

What if: Performing the operation "Stop-Service" on target "Microsoft Azure AD Connect Agent Updater (AzureADConnectAgentUpdater)".
Stop-Service : Cannot find any service with service name 'AzureADConnectAuthenticationAgentService'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AzureADConnectAuthenticationAgentService:String) [Stop-Service], 
ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'AzureADConnectAuthenticationAgentService'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AzureADConnectAuthenticationAgentService:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'chrome'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (chrome:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'concentr'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (concentr:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'concentr'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (concentr:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'conhost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (conhost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'conhost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (conhost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'csrss'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (csrss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'dasHost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dasHost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'dasHost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dasHost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'dllhost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dllhost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'dllhost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dllhost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'dwm'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dwm:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'dwm'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dwm:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'explorer'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (explorer:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'explorer'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (explorer:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'GoogleCrashHandler'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'GoogleCrashHandler'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'GoogleCrashHandler64'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler64:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'GoogleCrashHandler64'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleCrashHandler64:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

What if: Performing the operation "Stop-Service" on target "Microsoft Monitoring Agent (HealthService)".
What if: Performing the operation "Stop-Service" on target "Intel(R) Rapid Storage Technology (IAStorDataMgrSvc)".
Stop-Service : Cannot find any service with service name 'IAStorIcon'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IAStorIcon:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'IAStorIcon'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IAStorIcon:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'Idle'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Idle:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'Idle'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Idle:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'igfxCUIService'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (igfxCUIService:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'igfxCUIService'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (igfxCUIService:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'igfxEM'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (igfxEM:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'igfxEM'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (igfxEM:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'IPROSetMonitor'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IPROSetMonitor:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'IPROSetMonitor'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IPROSetMonitor:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'lsass'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lsass:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'lsass'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lsass:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'MonitoringHost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MonitoringHost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'MonitoringHost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MonitoringHost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

What if: Performing the operation "Stop-Service" on target "Microsoft Online Services Sign-in Assistant (MSOIDSVC)".
Stop-Service : Cannot find any service with service name 'MSOIDSVCM'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSOIDSVCM:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'MSOIDSVCM'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSOIDSVCM:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

What if: Performing the operation "Stop-Service" on target "Microsoft Virtual Machine Converter P2V Agent (mvmcP2VAgent)".
Stop-Service : Cannot find any service with service name 'PassThruSvr'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PassThruSvr:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'PassThruSvr'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PassThruSvr:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'powershell'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (powershell:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'powershell'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (powershell:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'powershell_ise'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (powershell_ise:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'powershell_ise'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (powershell_ise:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'SearchIndexer'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SearchIndexer:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'SearchIndexer'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SearchIndexer:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'services'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (services:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'services'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (services:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'smss'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (smss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'smss'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (smss:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'spoolsv'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (spoolsv:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'spoolsv'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (spoolsv:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

What if: Performing the operation "Stop-Service" on target "SQL Server VSS Writer (sqlwriter)".
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'svchost'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (svchost:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'System'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (System:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'System'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (System:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'taskhostex'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (taskhostex:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'taskhostex'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (taskhostex:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'TeamViewer_Service'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (TeamViewer_Service:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'TeamViewer_Service'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (TeamViewer_Service:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'vmnat'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmnat:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmnat'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmnat:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'vmware-authd'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-authd:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmware-authd'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-authd:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'vmware-hostd'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-hostd:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmware-hostd'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-hostd:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'vmware-tray'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-tray:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmware-tray'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-tray:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'vmware-usbarbitrator64'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-usbarbitrator64:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'vmware-usbarbitrator64'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (vmware-usbarbitrator64:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'wfcrun32'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wfcrun32:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'wfcrun32'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wfcrun32:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'wininit'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wininit:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'wininit'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wininit:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'winlogon'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (winlogon:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'winlogon'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (winlogon:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'wmpnetwk'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wmpnetwk:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'wmpnetwk'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (wmpnetwk:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

Stop-Service : Cannot find any service with service name 'WZQKPICK'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WZQKPICK:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand
Stop-Service : Cannot find any service with service name 'WZQKPICK'.
At line:1 char:17
+ $mynewprocess | Stop-Service -WhatIf
+                 ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WZQKPICK:String) [Stop-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.StopServiceCommand

PS C:\Windows\system32> $mynewprocess | Stop-process -WhatIf
What if: Performing the operation "Stop-Process" on target "AnyDesk (1384)".
What if: Performing the operation "Stop-Process" on target "AnyDesk (4764)".
What if: Performing the operation "Stop-Process" on target "armsvc (1356)".
What if: Performing the operation "Stop-Process" on target "AsrAPPShop (3760)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAgentUpdater (3900)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAuthenticationAgentService (1796)".
What if: Performing the operation "Stop-Process" on target "chrome (104)".
What if: Performing the operation "Stop-Process" on target "chrome (1572)".
What if: Performing the operation "Stop-Process" on target "chrome (2176)".
What if: Performing the operation "Stop-Process" on target "chrome (2208)".
What if: Performing the operation "Stop-Process" on target "chrome (3408)".
What if: Performing the operation "Stop-Process" on target "chrome (3412)".
What if: Performing the operation "Stop-Process" on target "chrome (3692)".
What if: Performing the operation "Stop-Process" on target "chrome (4252)".
What if: Performing the operation "Stop-Process" on target "chrome (4584)".
What if: Performing the operation "Stop-Process" on target "chrome (5172)".
What if: Performing the operation "Stop-Process" on target "concentr (4980)".
What if: Performing the operation "Stop-Process" on target "conhost (4620)".
What if: Performing the operation "Stop-Process" on target "csrss (476)".
What if: Performing the operation "Stop-Process" on target "csrss (548)".
What if: Performing the operation "Stop-Process" on target "dasHost (1520)".
What if: Performing the operation "Stop-Process" on target "dllhost (4668)".
What if: Performing the operation "Stop-Process" on target "dwm (860)".
What if: Performing the operation "Stop-Process" on target "explorer (3788)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler (4840)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler64 (4848)".
What if: Performing the operation "Stop-Process" on target "HealthService (1492)".
What if: Performing the operation "Stop-Process" on target "IAStorDataMgrSvc (5292)".
What if: Performing the operation "Stop-Process" on target "IAStorIcon (2644)".
What if: Performing the operation "Stop-Process" on target "Idle (0)".
What if: Performing the operation "Stop-Process" on target "igfxCUIService (304)".
What if: Performing the operation "Stop-Process" on target "igfxEM (3768)".
What if: Performing the operation "Stop-Process" on target "IPROSetMonitor (1564)".
What if: Performing the operation "Stop-Process" on target "lsass (652)".
What if: Performing the operation "Stop-Process" on target "MonitoringHost (2908)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVC (1688)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVCM (1860)".
What if: Performing the operation "Stop-Process" on target "mvmcP2VAgent (2068)".
What if: Performing the operation "Stop-Process" on target "PassThruSvr (1752)".
What if: Performing the operation "Stop-Process" on target "powershell (1700)".
What if: Performing the operation "Stop-Process" on target "powershell_ise (3860)".
What if: Performing the operation "Stop-Process" on target "SearchIndexer (3280)".
What if: Performing the operation "Stop-Process" on target "services (644)".
What if: Performing the operation "Stop-Process" on target "smss (316)".
What if: Performing the operation "Stop-Process" on target "spoolsv (1196)".
What if: Performing the operation "Stop-Process" on target "sqlwriter (1872)".
What if: Performing the operation "Stop-Process" on target "svchost (336)".
What if: Performing the operation "Stop-Process" on target "svchost (728)".
What if: Performing the operation "Stop-Process" on target "svchost (740)".
What if: Performing the operation "Stop-Process" on target "svchost (772)".
What if: Performing the operation "Stop-Process" on target "svchost (876)".
What if: Performing the operation "Stop-Process" on target "svchost (920)".
What if: Performing the operation "Stop-Process" on target "svchost (948)".
What if: Performing the operation "Stop-Process" on target "svchost (1240)".
What if: Performing the operation "Stop-Process" on target "svchost (1440)".
What if: Performing the operation "Stop-Process" on target "svchost (1932)".
What if: Performing the operation "Stop-Process" on target "svchost (2820)".
What if: Performing the operation "Stop-Process" on target "svchost (2860)".
What if: Performing the operation "Stop-Process" on target "svchost (3316)".
What if: Performing the operation "Stop-Process" on target "System (4)".
What if: Performing the operation "Stop-Process" on target "taskhostex (3748)".
What if: Performing the operation "Stop-Process" on target "TeamViewer_Service (2000)".
What if: Performing the operation "Stop-Process" on target "vmnat (2028)".
What if: Performing the operation "Stop-Process" on target "vmware-authd (1596)".
What if: Performing the operation "Stop-Process" on target "vmware-hostd (2284)".
What if: Performing the operation "Stop-Process" on target "vmware-tray (5036)".
What if: Performing the operation "Stop-Process" on target "vmware-usbarbitrator64 (1696)".
What if: Performing the operation "Stop-Process" on target "wfcrun32 (5012)".
What if: Performing the operation "Stop-Process" on target "wininit (556)".
What if: Performing the operation "Stop-Process" on target "winlogon (600)".
What if: Performing the operation "Stop-Process" on target "wmpnetwk (5452)".
What if: Performing the operation "Stop-Process" on target "WZQKPICK (4772)".
PS C:\Windows\system32> $mynewpro = Import-Csv -path 'C:\Temp\process 2.csv'
PS C:\Windows\system32> $mynewpro | Get-Member


   TypeName: System.Management.Automation.PSCustomObject

Name                       MemberType   Definition
----                       ----------   ----------
Equals                     Method       bool Equals(System.Object obj)
GetHashCode                Method       int GetHashCode()
GetType                    Method       type GetType()
ToString                   Method       string ToString()
BasePriority               NoteProperty string BasePriority=13
Company                    NoteProperty string Company=philandro Software GmbH
Container                  NoteProperty string Container=
CPU                        NoteProperty string CPU=0.421875
Description                NoteProperty string Description=AnyDesk
EnableRaisingEvents        NoteProperty string EnableRaisingEvents=FALSE
ExitCode                   NoteProperty string ExitCode=
ExitTime                   NoteProperty string ExitTime=
FileVersion                NoteProperty string FileVersion=4.2.3.0
Handle                     NoteProperty string Handle=3172
HandleCount                NoteProperty string HandleCount=209
Handles                    NoteProperty string Handles=209
HasExited                  NoteProperty string HasExited=FALSE
Id 1                       NoteProperty string Id 1=1384
MachineName                NoteProperty string MachineName=.
MainModule                 NoteProperty string MainModule=System.Diagnostics.ProcessModule (AnyDesk.exe)
MainWindowHandle           NoteProperty string MainWindowHandle=0
MainWindowTitle            NoteProperty string MainWindowTitle=
MaxWorkingSet              NoteProperty string MaxWorkingSet=1413120
MinWorkingSet              NoteProperty string MinWorkingSet=204800
Modules                    NoteProperty string Modules=System.Diagnostics.ProcessModuleCollection
Name 1                     NoteProperty string Name 1=AnyDesk
NonpagedSystemMemorySize   NoteProperty string NonpagedSystemMemorySize=16032
NonpagedSystemMemorySize64 NoteProperty string NonpagedSystemMemorySize64=16032
NPM                        NoteProperty string NPM=16032
PagedMemorySize            NoteProperty string PagedMemorySize=11923456
PagedMemorySize64          NoteProperty string PagedMemorySize64=11923456
PagedSystemMemorySize      NoteProperty string PagedSystemMemorySize=149112
PagedSystemMemorySize64    NoteProperty string PagedSystemMemorySize64=149112
Path                       NoteProperty string Path=C:\Program Files (x86)\AnyDesk\AnyDesk.exe
PeakPagedMemorySize        NoteProperty string PeakPagedMemorySize=15962112
PeakPagedMemorySize64      NoteProperty string PeakPagedMemorySize64=15962112
PeakVirtualMemorySize      NoteProperty string PeakVirtualMemorySize=112992256
PeakVirtualMemorySize64    NoteProperty string PeakVirtualMemorySize64=112992256
PeakWorkingSet             NoteProperty string PeakWorkingSet=17952768
PeakWorkingSet64           NoteProperty string PeakWorkingSet64=17952768
PM                         NoteProperty string PM=11923456
PriorityBoostEnabled       NoteProperty string PriorityBoostEnabled=TRUE
PriorityClass              NoteProperty string PriorityClass=High
PrivateMemorySize          NoteProperty string PrivateMemorySize=11923456
PrivateMemorySize64        NoteProperty string PrivateMemorySize64=11923456
PrivilegedProcessorTime    NoteProperty string PrivilegedProcessorTime=00:00.1
ProcessName                NoteProperty string ProcessName=AnyDesk
ProcessorAffinity          NoteProperty string ProcessorAffinity=15
Product                    NoteProperty string Product=AnyDesk
ProductVersion             NoteProperty string ProductVersion=4.2
Responding                 NoteProperty string Responding=TRUE
SafeHandle                 NoteProperty string SafeHandle=Microsoft.Win32.SafeHandles.SafeProcessHandle
SessionId                  NoteProperty string SessionId=0
SI                         NoteProperty string SI=0
Site                       NoteProperty string Site=
StandardError              NoteProperty string StandardError=
StandardInput              NoteProperty string StandardInput=
StandardOutput             NoteProperty string StandardOutput=
StartInfo                  NoteProperty string StartInfo=System.Diagnostics.ProcessStartInfo
StartTime                  NoteProperty string StartTime=09-03-2019 09:43
SynchronizingObject        NoteProperty string SynchronizingObject=
Threads                    NoteProperty string Threads=System.Diagnostics.ProcessThreadCollection
TotalProcessorTime         NoteProperty string TotalProcessorTime=00:00.4
UserProcessorTime          NoteProperty string UserProcessorTime=00:00.3
VirtualMemorySize          NoteProperty string VirtualMemorySize=84082688
VirtualMemorySize64        NoteProperty string VirtualMemorySize64=84082688
VM                         NoteProperty string VM=84082688
WorkingSet                 NoteProperty string WorkingSet=11358208
WorkingSet64               NoteProperty string WorkingSet64=11358208
WS                         NoteProperty string WS=11358208
__NounName                 NoteProperty string __NounName=Process


PS C:\Windows\system32> $mynewpro | Stop-process -WhatIf
What if: Performing the operation "Stop-Process" on target "AnyDesk (1384)".
What if: Performing the operation "Stop-Process" on target "AnyDesk (4764)".
What if: Performing the operation "Stop-Process" on target "armsvc (1356)".
What if: Performing the operation "Stop-Process" on target "AsrAPPShop (3760)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAgentUpdater (3900)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAuthenticationAgentService (1796)".
What if: Performing the operation "Stop-Process" on target "chrome (104)".
What if: Performing the operation "Stop-Process" on target "chrome (1572)".
What if: Performing the operation "Stop-Process" on target "chrome (2176)".
What if: Performing the operation "Stop-Process" on target "chrome (2208)".
What if: Performing the operation "Stop-Process" on target "chrome (3408)".
What if: Performing the operation "Stop-Process" on target "chrome (3412)".
What if: Performing the operation "Stop-Process" on target "chrome (3692)".
What if: Performing the operation "Stop-Process" on target "chrome (4252)".
What if: Performing the operation "Stop-Process" on target "chrome (4584)".
What if: Performing the operation "Stop-Process" on target "chrome (5172)".
What if: Performing the operation "Stop-Process" on target "concentr (4980)".
What if: Performing the operation "Stop-Process" on target "conhost (4620)".
What if: Performing the operation "Stop-Process" on target "csrss (476)".
What if: Performing the operation "Stop-Process" on target "csrss (548)".
What if: Performing the operation "Stop-Process" on target "dasHost (1520)".
What if: Performing the operation "Stop-Process" on target "dllhost (4668)".
What if: Performing the operation "Stop-Process" on target "dwm (860)".
What if: Performing the operation "Stop-Process" on target "explorer (3788)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler (4840)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler64 (4848)".
What if: Performing the operation "Stop-Process" on target "HealthService (1492)".
What if: Performing the operation "Stop-Process" on target "IAStorDataMgrSvc (5292)".
What if: Performing the operation "Stop-Process" on target "IAStorIcon (2644)".
What if: Performing the operation "Stop-Process" on target "Idle (0)".
What if: Performing the operation "Stop-Process" on target "igfxCUIService (304)".
What if: Performing the operation "Stop-Process" on target "igfxEM (3768)".
What if: Performing the operation "Stop-Process" on target "IPROSetMonitor (1564)".
What if: Performing the operation "Stop-Process" on target "lsass (652)".
What if: Performing the operation "Stop-Process" on target "MonitoringHost (2908)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVC (1688)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVCM (1860)".
What if: Performing the operation "Stop-Process" on target "mvmcP2VAgent (2068)".
What if: Performing the operation "Stop-Process" on target "PassThruSvr (1752)".
What if: Performing the operation "Stop-Process" on target "powershell (1700)".
What if: Performing the operation "Stop-Process" on target "powershell_ise (3860)".
What if: Performing the operation "Stop-Process" on target "SearchIndexer (3280)".
What if: Performing the operation "Stop-Process" on target "services (644)".
What if: Performing the operation "Stop-Process" on target "smss (316)".
What if: Performing the operation "Stop-Process" on target "spoolsv (1196)".
What if: Performing the operation "Stop-Process" on target "sqlwriter (1872)".
What if: Performing the operation "Stop-Process" on target "svchost (336)".
What if: Performing the operation "Stop-Process" on target "svchost (728)".
What if: Performing the operation "Stop-Process" on target "svchost (740)".
What if: Performing the operation "Stop-Process" on target "svchost (772)".
What if: Performing the operation "Stop-Process" on target "svchost (876)".
What if: Performing the operation "Stop-Process" on target "svchost (920)".
What if: Performing the operation "Stop-Process" on target "svchost (948)".
What if: Performing the operation "Stop-Process" on target "svchost (1240)".
What if: Performing the operation "Stop-Process" on target "svchost (1440)".
What if: Performing the operation "Stop-Process" on target "svchost (1932)".
What if: Performing the operation "Stop-Process" on target "svchost (2820)".
What if: Performing the operation "Stop-Process" on target "svchost (2860)".
What if: Performing the operation "Stop-Process" on target "svchost (3316)".
What if: Performing the operation "Stop-Process" on target "System (4)".
What if: Performing the operation "Stop-Process" on target "taskhostex (3748)".
What if: Performing the operation "Stop-Process" on target "TeamViewer_Service (2000)".
What if: Performing the operation "Stop-Process" on target "vmnat (2028)".
What if: Performing the operation "Stop-Process" on target "vmware-authd (1596)".
What if: Performing the operation "Stop-Process" on target "vmware-hostd (2284)".
What if: Performing the operation "Stop-Process" on target "vmware-tray (5036)".
What if: Performing the operation "Stop-Process" on target "vmware-usbarbitrator64 (1696)".
What if: Performing the operation "Stop-Process" on target "wfcrun32 (5012)".
What if: Performing the operation "Stop-Process" on target "wininit (556)".
What if: Performing the operation "Stop-Process" on target "winlogon (600)".
What if: Performing the operation "Stop-Process" on target "wmpnetwk (5452)".
What if: Performing the operation "Stop-Process" on target "WZQKPICK (4772)".
PS C:\Windows\system32> $mynewpro | Get-Member


   TypeName: System.Management.Automation.PSCustomObject

Name                       MemberType   Definition
----                       ----------   ----------
Equals                     Method       bool Equals(System.Object obj)
GetHashCode                Method       int GetHashCode()
GetType                    Method       type GetType()
ToString                   Method       string ToString()
BasePriority               NoteProperty string BasePriority=13
Company                    NoteProperty string Company=philandro Software GmbH
Container                  NoteProperty string Container=
CPU                        NoteProperty string CPU=0.421875
Description                NoteProperty string Description=AnyDesk
EnableRaisingEvents        NoteProperty string EnableRaisingEvents=FALSE
ExitCode                   NoteProperty string ExitCode=
ExitTime                   NoteProperty string ExitTime=
FileVersion                NoteProperty string FileVersion=4.2.3.0
Handle                     NoteProperty string Handle=3172
HandleCount                NoteProperty string HandleCount=209
Handles                    NoteProperty string Handles=209
HasExited                  NoteProperty string HasExited=FALSE
Id 1                       NoteProperty string Id 1=1384
MachineName                NoteProperty string MachineName=.
MainModule                 NoteProperty string MainModule=System.Diagnostics.ProcessModule (AnyDesk.exe)
MainWindowHandle           NoteProperty string MainWindowHandle=0
MainWindowTitle            NoteProperty string MainWindowTitle=
MaxWorkingSet              NoteProperty string MaxWorkingSet=1413120
MinWorkingSet              NoteProperty string MinWorkingSet=204800
Modules                    NoteProperty string Modules=System.Diagnostics.ProcessModuleCollection
Name 1                     NoteProperty string Name 1=AnyDesk
NonpagedSystemMemorySize   NoteProperty string NonpagedSystemMemorySize=16032
NonpagedSystemMemorySize64 NoteProperty string NonpagedSystemMemorySize64=16032
NPM                        NoteProperty string NPM=16032
PagedMemorySize            NoteProperty string PagedMemorySize=11923456
PagedMemorySize64          NoteProperty string PagedMemorySize64=11923456
PagedSystemMemorySize      NoteProperty string PagedSystemMemorySize=149112
PagedSystemMemorySize64    NoteProperty string PagedSystemMemorySize64=149112
Path                       NoteProperty string Path=C:\Program Files (x86)\AnyDesk\AnyDesk.exe
PeakPagedMemorySize        NoteProperty string PeakPagedMemorySize=15962112
PeakPagedMemorySize64      NoteProperty string PeakPagedMemorySize64=15962112
PeakVirtualMemorySize      NoteProperty string PeakVirtualMemorySize=112992256
PeakVirtualMemorySize64    NoteProperty string PeakVirtualMemorySize64=112992256
PeakWorkingSet             NoteProperty string PeakWorkingSet=17952768
PeakWorkingSet64           NoteProperty string PeakWorkingSet64=17952768
PM                         NoteProperty string PM=11923456
PriorityBoostEnabled       NoteProperty string PriorityBoostEnabled=TRUE
PriorityClass              NoteProperty string PriorityClass=High
PrivateMemorySize          NoteProperty string PrivateMemorySize=11923456
PrivateMemorySize64        NoteProperty string PrivateMemorySize64=11923456
PrivilegedProcessorTime    NoteProperty string PrivilegedProcessorTime=00:00.1
ProcessName                NoteProperty string ProcessName=AnyDesk
ProcessorAffinity          NoteProperty string ProcessorAffinity=15
Product                    NoteProperty string Product=AnyDesk
ProductVersion             NoteProperty string ProductVersion=4.2
Responding                 NoteProperty string Responding=TRUE
SafeHandle                 NoteProperty string SafeHandle=Microsoft.Win32.SafeHandles.SafeProcessHandle
SessionId                  NoteProperty string SessionId=0
SI                         NoteProperty string SI=0
Site                       NoteProperty string Site=
StandardError              NoteProperty string StandardError=
StandardInput              NoteProperty string StandardInput=
StandardOutput             NoteProperty string StandardOutput=
StartInfo                  NoteProperty string StartInfo=System.Diagnostics.ProcessStartInfo
StartTime                  NoteProperty string StartTime=09-03-2019 09:43
SynchronizingObject        NoteProperty string SynchronizingObject=
Threads                    NoteProperty string Threads=System.Diagnostics.ProcessThreadCollection
TotalProcessorTime         NoteProperty string TotalProcessorTime=00:00.4
UserProcessorTime          NoteProperty string UserProcessorTime=00:00.3
VirtualMemorySize          NoteProperty string VirtualMemorySize=84082688
VirtualMemorySize64        NoteProperty string VirtualMemorySize64=84082688
VM                         NoteProperty string VM=84082688
WorkingSet                 NoteProperty string WorkingSet=11358208
WorkingSet64               NoteProperty string WorkingSet64=11358208
WS                         NoteProperty string WS=11358208
__NounName                 NoteProperty string __NounName=Process


PS C:\Windows\system32> $mynewpro | Stop-process -WhatIf
What if: Performing the operation "Stop-Process" on target "AnyDesk (1384)".
What if: Performing the operation "Stop-Process" on target "AnyDesk (4764)".
What if: Performing the operation "Stop-Process" on target "armsvc (1356)".
What if: Performing the operation "Stop-Process" on target "AsrAPPShop (3760)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAgentUpdater (3900)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAuthenticationAgentService (1796)".
What if: Performing the operation "Stop-Process" on target "chrome (104)".
What if: Performing the operation "Stop-Process" on target "chrome (1572)".
What if: Performing the operation "Stop-Process" on target "chrome (2176)".
What if: Performing the operation "Stop-Process" on target "chrome (2208)".
What if: Performing the operation "Stop-Process" on target "chrome (3408)".
What if: Performing the operation "Stop-Process" on target "chrome (3412)".
What if: Performing the operation "Stop-Process" on target "chrome (3692)".
What if: Performing the operation "Stop-Process" on target "chrome (4252)".
What if: Performing the operation "Stop-Process" on target "chrome (4584)".
What if: Performing the operation "Stop-Process" on target "chrome (5172)".
What if: Performing the operation "Stop-Process" on target "concentr (4980)".
What if: Performing the operation "Stop-Process" on target "conhost (4620)".
What if: Performing the operation "Stop-Process" on target "csrss (476)".
What if: Performing the operation "Stop-Process" on target "csrss (548)".
What if: Performing the operation "Stop-Process" on target "dasHost (1520)".
What if: Performing the operation "Stop-Process" on target "dllhost (4668)".
What if: Performing the operation "Stop-Process" on target "dwm (860)".
What if: Performing the operation "Stop-Process" on target "explorer (3788)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler (4840)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler64 (4848)".
What if: Performing the operation "Stop-Process" on target "HealthService (1492)".
What if: Performing the operation "Stop-Process" on target "IAStorDataMgrSvc (5292)".
What if: Performing the operation "Stop-Process" on target "IAStorIcon (2644)".
What if: Performing the operation "Stop-Process" on target "Idle (0)".
What if: Performing the operation "Stop-Process" on target "igfxCUIService (304)".
What if: Performing the operation "Stop-Process" on target "igfxEM (3768)".
What if: Performing the operation "Stop-Process" on target "IPROSetMonitor (1564)".
What if: Performing the operation "Stop-Process" on target "lsass (652)".
What if: Performing the operation "Stop-Process" on target "MonitoringHost (2908)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVC (1688)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVCM (1860)".
What if: Performing the operation "Stop-Process" on target "mvmcP2VAgent (2068)".
What if: Performing the operation "Stop-Process" on target "PassThruSvr (1752)".
What if: Performing the operation "Stop-Process" on target "powershell (1700)".
What if: Performing the operation "Stop-Process" on target "powershell_ise (3860)".
What if: Performing the operation "Stop-Process" on target "SearchIndexer (3280)".
What if: Performing the operation "Stop-Process" on target "services (644)".
What if: Performing the operation "Stop-Process" on target "smss (316)".
What if: Performing the operation "Stop-Process" on target "spoolsv (1196)".
What if: Performing the operation "Stop-Process" on target "sqlwriter (1872)".
What if: Performing the operation "Stop-Process" on target "svchost (336)".
What if: Performing the operation "Stop-Process" on target "svchost (728)".
What if: Performing the operation "Stop-Process" on target "svchost (740)".
What if: Performing the operation "Stop-Process" on target "svchost (772)".
What if: Performing the operation "Stop-Process" on target "svchost (876)".
What if: Performing the operation "Stop-Process" on target "svchost (920)".
What if: Performing the operation "Stop-Process" on target "svchost (948)".
What if: Performing the operation "Stop-Process" on target "svchost (1240)".
What if: Performing the operation "Stop-Process" on target "svchost (1440)".
What if: Performing the operation "Stop-Process" on target "svchost (1932)".
What if: Performing the operation "Stop-Process" on target "svchost (2820)".
What if: Performing the operation "Stop-Process" on target "svchost (2860)".
What if: Performing the operation "Stop-Process" on target "svchost (3316)".
What if: Performing the operation "Stop-Process" on target "System (4)".
What if: Performing the operation "Stop-Process" on target "taskhostex (3748)".
What if: Performing the operation "Stop-Process" on target "TeamViewer_Service (2000)".
What if: Performing the operation "Stop-Process" on target "vmnat (2028)".
What if: Performing the operation "Stop-Process" on target "vmware-authd (1596)".
What if: Performing the operation "Stop-Process" on target "vmware-hostd (2284)".
What if: Performing the operation "Stop-Process" on target "vmware-tray (5036)".
What if: Performing the operation "Stop-Process" on target "vmware-usbarbitrator64 (1696)".
What if: Performing the operation "Stop-Process" on target "wfcrun32 (5012)".
What if: Performing the operation "Stop-Process" on target "wininit (556)".
What if: Performing the operation "Stop-Process" on target "winlogon (600)".
What if: Performing the operation "Stop-Process" on target "wmpnetwk (5452)".
What if: Performing the operation "Stop-Process" on target "WZQKPICK (4772)".
PS C:\Windows\system32> Trace-Command -name ParameterBinding -Expression{$mynewpro | Stop-Process -WhatIf}
What if: Performing the operation "Stop-Process" on target "AnyDesk (1384)".
What if: Performing the operation "Stop-Process" on target "AnyDesk (4764)".
What if: Performing the operation "Stop-Process" on target "armsvc (1356)".
What if: Performing the operation "Stop-Process" on target "AsrAPPShop (3760)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAgentUpdater (3900)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAuthenticationAgentService (1796)".
What if: Performing the operation "Stop-Process" on target "chrome (104)".
What if: Performing the operation "Stop-Process" on target "chrome (1572)".
What if: Performing the operation "Stop-Process" on target "chrome (2176)".
What if: Performing the operation "Stop-Process" on target "chrome (2208)".
What if: Performing the operation "Stop-Process" on target "chrome (3408)".
What if: Performing the operation "Stop-Process" on target "chrome (3412)".
What if: Performing the operation "Stop-Process" on target "chrome (3692)".
What if: Performing the operation "Stop-Process" on target "chrome (4252)".
What if: Performing the operation "Stop-Process" on target "chrome (4584)".
What if: Performing the operation "Stop-Process" on target "chrome (5172)".
What if: Performing the operation "Stop-Process" on target "concentr (4980)".
What if: Performing the operation "Stop-Process" on target "conhost (4620)".
What if: Performing the operation "Stop-Process" on target "csrss (476)".
What if: Performing the operation "Stop-Process" on target "csrss (548)".
What if: Performing the operation "Stop-Process" on target "dasHost (1520)".
What if: Performing the operation "Stop-Process" on target "dllhost (4668)".
What if: Performing the operation "Stop-Process" on target "dwm (860)".
What if: Performing the operation "Stop-Process" on target "explorer (3788)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler (4840)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler64 (4848)".
What if: Performing the operation "Stop-Process" on target "HealthService (1492)".
What if: Performing the operation "Stop-Process" on target "IAStorDataMgrSvc (5292)".
What if: Performing the operation "Stop-Process" on target "IAStorIcon (2644)".
What if: Performing the operation "Stop-Process" on target "Idle (0)".
What if: Performing the operation "Stop-Process" on target "igfxCUIService (304)".
What if: Performing the operation "Stop-Process" on target "igfxEM (3768)".
What if: Performing the operation "Stop-Process" on target "IPROSetMonitor (1564)".
What if: Performing the operation "Stop-Process" on target "lsass (652)".
What if: Performing the operation "Stop-Process" on target "MonitoringHost (2908)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVC (1688)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVCM (1860)".
What if: Performing the operation "Stop-Process" on target "mvmcP2VAgent (2068)".
What if: Performing the operation "Stop-Process" on target "PassThruSvr (1752)".
What if: Performing the operation "Stop-Process" on target "powershell (1700)".
What if: Performing the operation "Stop-Process" on target "powershell_ise (3860)".
What if: Performing the operation "Stop-Process" on target "SearchIndexer (3280)".
What if: Performing the operation "Stop-Process" on target "services (644)".
What if: Performing the operation "Stop-Process" on target "smss (316)".
What if: Performing the operation "Stop-Process" on target "spoolsv (1196)".
What if: Performing the operation "Stop-Process" on target "sqlwriter (1872)".
What if: Performing the operation "Stop-Process" on target "svchost (336)".
What if: Performing the operation "Stop-Process" on target "svchost (728)".
What if: Performing the operation "Stop-Process" on target "svchost (740)".
What if: Performing the operation "Stop-Process" on target "svchost (772)".
What if: Performing the operation "Stop-Process" on target "svchost (876)".
What if: Performing the operation "Stop-Process" on target "svchost (920)".
What if: Performing the operation "Stop-Process" on target "svchost (948)".
What if: Performing the operation "Stop-Process" on target "svchost (1240)".
What if: Performing the operation "Stop-Process" on target "svchost (1440)".
What if: Performing the operation "Stop-Process" on target "svchost (1932)".
What if: Performing the operation "Stop-Process" on target "svchost (2820)".
What if: Performing the operation "Stop-Process" on target "svchost (2860)".
What if: Performing the operation "Stop-Process" on target "svchost (3316)".
What if: Performing the operation "Stop-Process" on target "System (4)".
What if: Performing the operation "Stop-Process" on target "taskhostex (3748)".
What if: Performing the operation "Stop-Process" on target "TeamViewer_Service (2000)".
What if: Performing the operation "Stop-Process" on target "vmnat (2028)".
What if: Performing the operation "Stop-Process" on target "vmware-authd (1596)".
What if: Performing the operation "Stop-Process" on target "vmware-hostd (2284)".
What if: Performing the operation "Stop-Process" on target "vmware-tray (5036)".
What if: Performing the operation "Stop-Process" on target "vmware-usbarbitrator64 (1696)".
What if: Performing the operation "Stop-Process" on target "wfcrun32 (5012)".
What if: Performing the operation "Stop-Process" on target "wininit (556)".
What if: Performing the operation "Stop-Process" on target "winlogon (600)".
What if: Performing the operation "Stop-Process" on target "wmpnetwk (5452)".
What if: Performing the operation "Stop-Process" on target "WZQKPICK (4772)".
PS C:\Windows\system32> Trace-Command -name ParameterBinding -Expression{$mynewpro | Stop-Process -WhatIf} -PSHost
What if: Performing the operation "Stop-Process" on target "AnyDesk (1384)".
What if: Performing the operation "Stop-Process" on target "AnyDesk (4764)".
What if: Performing the operation "Stop-Process" on target "armsvc (1356)".
What if: Performing the operation "Stop-Process" on target "AsrAPPShop (3760)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAgentUpdater (3900)".
What if: Performing the operation "Stop-Process" on target "AzureADConnectAuthenticationAgentService (1796)".
What if: Performing the operation "Stop-Process" on target "chrome (104)".
What if: Performing the operation "Stop-Process" on target "chrome (1572)".
What if: Performing the operation "Stop-Process" on target "chrome (2176)".
What if: Performing the operation "Stop-Process" on target "chrome (2208)".
What if: Performing the operation "Stop-Process" on target "chrome (3408)".
What if: Performing the operation "Stop-Process" on target "chrome (3412)".
What if: Performing the operation "Stop-Process" on target "chrome (3692)".
What if: Performing the operation "Stop-Process" on target "chrome (4252)".
What if: Performing the operation "Stop-Process" on target "chrome (4584)".
What if: Performing the operation "Stop-Process" on target "chrome (5172)".
What if: Performing the operation "Stop-Process" on target "concentr (4980)".
What if: Performing the operation "Stop-Process" on target "conhost (4620)".
What if: Performing the operation "Stop-Process" on target "csrss (476)".
What if: Performing the operation "Stop-Process" on target "csrss (548)".
What if: Performing the operation "Stop-Process" on target "dasHost (1520)".
What if: Performing the operation "Stop-Process" on target "dllhost (4668)".
What if: Performing the operation "Stop-Process" on target "dwm (860)".
What if: Performing the operation "Stop-Process" on target "explorer (3788)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler (4840)".
What if: Performing the operation "Stop-Process" on target "GoogleCrashHandler64 (4848)".
What if: Performing the operation "Stop-Process" on target "HealthService (1492)".
What if: Performing the operation "Stop-Process" on target "IAStorDataMgrSvc (5292)".
What if: Performing the operation "Stop-Process" on target "IAStorIcon (2644)".
What if: Performing the operation "Stop-Process" on target "Idle (0)".
What if: Performing the operation "Stop-Process" on target "igfxCUIService (304)".
What if: Performing the operation "Stop-Process" on target "igfxEM (3768)".
What if: Performing the operation "Stop-Process" on target "IPROSetMonitor (1564)".
What if: Performing the operation "Stop-Process" on target "lsass (652)".
What if: Performing the operation "Stop-Process" on target "MonitoringHost (2908)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVC (1688)".
What if: Performing the operation "Stop-Process" on target "MSOIDSVCM (1860)".
What if: Performing the operation "Stop-Process" on target "mvmcP2VAgent (2068)".
What if: Performing the operation "Stop-Process" on target "PassThruSvr (1752)".
What if: Performing the operation "Stop-Process" on target "powershell (1700)".
What if: Performing the operation "Stop-Process" on target "powershell_ise (3860)".
What if: Performing the operation "Stop-Process" on target "SearchIndexer (3280)".
What if: Performing the operation "Stop-Process" on target "services (644)".
What if: Performing the operation "Stop-Process" on target "smss (316)".
What if: Performing the operation "Stop-Process" on target "spoolsv (1196)".
What if: Performing the operation "Stop-Process" on target "sqlwriter (1872)".
What if: Performing the operation "Stop-Process" on target "svchost (336)".
What if: Performing the operation "Stop-Process" on target "svchost (728)".
What if: Performing the operation "Stop-Process" on target "svchost (740)".
What if: Performing the operation "Stop-Process" on target "svchost (772)".
What if: Performing the operation "Stop-Process" on target "svchost (876)".
What if: Performing the operation "Stop-Process" on target "svchost (920)".
What if: Performing the operation "Stop-Process" on target "svchost (948)".
What if: Performing the operation "Stop-Process" on target "svchost (1240)".
What if: Performing the operation "Stop-Process" on target "svchost (1440)".
What if: Performing the operation "Stop-Process" on target "svchost (1932)".
What if: Performing the operation "Stop-Process" on target "svchost (2820)".
What if: Performing the operation "Stop-Process" on target "svchost (2860)".
What if: Performing the operation "Stop-Process" on target "svchost (3316)".
What if: Performing the operation "Stop-Process" on target "System (4)".
What if: Performing the operation "Stop-Process" on target "taskhostex (3748)".
What if: Performing the operation "Stop-Process" on target "TeamViewer_Service (2000)".
What if: Performing the operation "Stop-Process" on target "vmnat (2028)".
What if: Performing the operation "Stop-Process" on target "vmware-authd (1596)".
What if: Performing the operation "Stop-Process" on target "vmware-hostd (2284)".
What if: Performing the operation "Stop-Process" on target "vmware-tray (5036)".
What if: Performing the operation "Stop-Process" on target "vmware-usbarbitrator64 (1696)".
What if: Performing the operation "Stop-Process" on target "wfcrun32 (5012)".
What if: Performing the operation "Stop-Process" on target "wininit (556)".
What if: Performing the operation "Stop-Process" on target "winlogon (600)".
What if: Performing the operation "Stop-Process" on target "wmpnetwk (5452)".
What if: Performing the operation "Stop-Process" on target "WZQKPICK (4772)".
PS C:\Windows\system32> get-process | Get-Member


   TypeName: System.Diagnostics.Process

Name                       MemberType     Definition
----                       ----------     ----------
Handles                    AliasProperty  Handles = Handlecount
Name                       AliasProperty  Name = ProcessName
NPM                        AliasProperty  NPM = NonpagedSystemMemorySize64
PM                         AliasProperty  PM = PagedMemorySize64
SI                         AliasProperty  SI = SessionId
VM                         AliasProperty  VM = VirtualMemorySize64
WS                         AliasProperty  WS = WorkingSet64
Disposed                   Event          System.EventHandler Disposed(System.Object, System.EventArgs)
ErrorDataReceived          Event          System.Diagnostics.DataReceivedEventHandler ErrorDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
Exited                     Event          System.EventHandler Exited(System.Object, System.EventArgs)
OutputDataReceived         Event          System.Diagnostics.DataReceivedEventHandler OutputDataReceived(System.Object, System.Diagnostics.DataReceivedEventArgs)
BeginErrorReadLine         Method         void BeginErrorReadLine()
BeginOutputReadLine        Method         void BeginOutputReadLine()
CancelErrorRead            Method         void CancelErrorRead()
CancelOutputRead           Method         void CancelOutputRead()
Close                      Method         void Close()
CloseMainWindow            Method         bool CloseMainWindow()
CreateObjRef               Method         System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
Dispose                    Method         void Dispose(), void IDisposable.Dispose()
Equals                     Method         bool Equals(System.Object obj)
GetHashCode                Method         int GetHashCode()
GetLifetimeService         Method         System.Object GetLifetimeService()
GetType                    Method         type GetType()
InitializeLifetimeService  Method         System.Object InitializeLifetimeService()
Kill                       Method         void Kill()
Refresh                    Method         void Refresh()
Start                      Method         bool Start()
ToString                   Method         string ToString()
WaitForExit                Method         bool WaitForExit(int milliseconds), void WaitForExit()
WaitForInputIdle           Method         bool WaitForInputIdle(int milliseconds), bool WaitForInputIdle()
__NounName                 NoteProperty   string __NounName=Process
BasePriority               Property       int BasePriority {get;}
Container                  Property       System.ComponentModel.IContainer Container {get;}
EnableRaisingEvents        Property       bool EnableRaisingEvents {get;set;}
ExitCode                   Property       int ExitCode {get;}
ExitTime                   Property       datetime ExitTime {get;}
Handle                     Property       System.IntPtr Handle {get;}
HandleCount                Property       int HandleCount {get;}
HasExited                  Property       bool HasExited {get;}
Id                         Property       int Id {get;}
MachineName                Property       string MachineName {get;}
MainModule                 Property       System.Diagnostics.ProcessModule MainModule {get;}
MainWindowHandle           Property       System.IntPtr MainWindowHandle {get;}
MainWindowTitle            Property       string MainWindowTitle {get;}
MaxWorkingSet              Property       System.IntPtr MaxWorkingSet {get;set;}
MinWorkingSet              Property       System.IntPtr MinWorkingSet {get;set;}
Modules                    Property       System.Diagnostics.ProcessModuleCollection Modules {get;}
NonpagedSystemMemorySize   Property       int NonpagedSystemMemorySize {get;}
NonpagedSystemMemorySize64 Property       long NonpagedSystemMemorySize64 {get;}
PagedMemorySize            Property       int PagedMemorySize {get;}
PagedMemorySize64          Property       long PagedMemorySize64 {get;}
PagedSystemMemorySize      Property       int PagedSystemMemorySize {get;}
PagedSystemMemorySize64    Property       long PagedSystemMemorySize64 {get;}
PeakPagedMemorySize        Property       int PeakPagedMemorySize {get;}
PeakPagedMemorySize64      Property       long PeakPagedMemorySize64 {get;}
PeakVirtualMemorySize      Property       int PeakVirtualMemorySize {get;}
PeakVirtualMemorySize64    Property       long PeakVirtualMemorySize64 {get;}
PeakWorkingSet             Property       int PeakWorkingSet {get;}
PeakWorkingSet64           Property       long PeakWorkingSet64 {get;}
PriorityBoostEnabled       Property       bool PriorityBoostEnabled {get;set;}
PriorityClass              Property       System.Diagnostics.ProcessPriorityClass PriorityClass {get;set;}
PrivateMemorySize          Property       int PrivateMemorySize {get;}
PrivateMemorySize64        Property       long PrivateMemorySize64 {get;}
PrivilegedProcessorTime    Property       timespan PrivilegedProcessorTime {get;}
ProcessName                Property       string ProcessName {get;}
ProcessorAffinity          Property       System.IntPtr ProcessorAffinity {get;set;}
Responding                 Property       bool Responding {get;}
SafeHandle                 Property       Microsoft.Win32.SafeHandles.SafeProcessHandle SafeHandle {get;}
SessionId                  Property       int SessionId {get;}
Site                       Property       System.ComponentModel.ISite Site {get;set;}
StandardError              Property       System.IO.StreamReader StandardError {get;}
StandardInput              Property       System.IO.StreamWriter StandardInput {get;}
StandardOutput             Property       System.IO.StreamReader StandardOutput {get;}
StartInfo                  Property       System.Diagnostics.ProcessStartInfo StartInfo {get;set;}
StartTime                  Property       datetime StartTime {get;}
SynchronizingObject        Property       System.ComponentModel.ISynchronizeInvoke SynchronizingObject {get;set;}
Threads                    Property       System.Diagnostics.ProcessThreadCollection Threads {get;}
TotalProcessorTime         Property       timespan TotalProcessorTime {get;}
UserProcessorTime          Property       timespan UserProcessorTime {get;}
VirtualMemorySize          Property       int VirtualMemorySize {get;}
VirtualMemorySize64        Property       long VirtualMemorySize64 {get;}
WorkingSet                 Property       int WorkingSet {get;}
WorkingSet64               Property       long WorkingSet64 {get;}
PSConfiguration            PropertySet    PSConfiguration {Name, Id, PriorityClass, FileVersion}
PSResources                PropertySet    PSResources {Name, Id, Handlecount, WorkingSet, NonPagedMemorySize, PagedMemorySize, PrivateMemorySize, VirtualMemorySize, Threads.Count, TotalProcessorTime}
Company                    ScriptProperty System.Object Company {get=$this.Mainmodule.FileVersionInfo.CompanyName;}
CPU                        ScriptProperty System.Object CPU {get=$this.TotalProcessorTime.TotalSeconds;}
Description                ScriptProperty System.Object Description {get=$this.Mainmodule.FileVersionInfo.FileDescription;}
FileVersion                ScriptProperty System.Object FileVersion {get=$this.Mainmodule.FileVersionInfo.FileVersion;}
Path                       ScriptProperty System.Object Path {get=$this.Mainmodule.FileName;}
Product                    ScriptProperty System.Object Product {get=$this.Mainmodule.FileVersionInfo.ProductName;}
ProductVersion             ScriptProperty System.Object ProductVersion {get=$this.Mainmodule.FileVersionInfo.ProductVersion;}


PS C:\Windows\system32> Get-Service | stop-process -WhatIf
stop-process : Cannot find a process with the name "AdobeARMservice". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AdobeARMservice:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AdobeARMservice". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AdobeARMservice:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "AdtAgent". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AdtAgent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AdtAgent". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AdtAgent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "AeLookupSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AeLookupSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AeLookupSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AeLookupSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "ALG". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ALG:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "ALG". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ALG:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

What if: Performing the operation "Stop-Process" on target "AnyDesk (1384)".
What if: Performing the operation "Stop-Process" on target "AnyDesk (4764)".
stop-process : Cannot find a process with the name "AppIDSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppIDSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AppIDSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppIDSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Appinfo". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Appinfo:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Appinfo". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Appinfo:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "AppMgmt". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppMgmt:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AppMgmt". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppMgmt:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "AppReadiness". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppReadiness:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AppReadiness". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppReadiness:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "AppXSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppXSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AppXSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AppXSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "AudioEndpointBuilder". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AudioEndpointBuilder:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AudioEndpointBuilder". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AudioEndpointBuilder:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Audiosrv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Audiosrv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Audiosrv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Audiosrv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "AxInstSV". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AxInstSV:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AxInstSV". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AxInstSV:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

What if: Performing the operation "Stop-Process" on target "AzureADConnectAgentUpdater (3900)".
stop-process : Cannot find a process with the name "AzureADConnectAuthenticationAgent". Verify the process name and 
call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AzureADConnectAuthenticationAgent:String) [Stop-Process], 
ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "AzureADConnectAuthenticationAgent". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (AzureADConnectAuthenticationAgent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "BDESVC". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BDESVC:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "BDESVC". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BDESVC:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "BFE". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BFE:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "BFE". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BFE:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "BITS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BITS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "BITS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BITS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "BrokerInfrastructure". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BrokerInfrastructure:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "BrokerInfrastructure". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BrokerInfrastructure:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Browser". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Browser:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Browser". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Browser:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "BthHFSrv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BthHFSrv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "BthHFSrv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (BthHFSrv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "bthserv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (bthserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "bthserv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (bthserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "CertPropSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CertPropSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "CertPropSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CertPropSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "COMSysApp". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (COMSysApp:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "COMSysApp". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (COMSysApp:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "cphs". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (cphs:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "cphs". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (cphs:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "CryptSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CryptSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "CryptSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CryptSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "CscService". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CscService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "CscService". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (CscService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "DcomLaunch". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DcomLaunch:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "DcomLaunch". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DcomLaunch:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "defragsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (defragsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "defragsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (defragsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "DeviceAssociationService". Verify the process name and call the 
cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceAssociationService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "DeviceAssociationService". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceAssociationService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "DeviceInstall". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceInstall:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "DeviceInstall". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DeviceInstall:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Dhcp". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dhcp:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Dhcp". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dhcp:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "DiagTrack". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DiagTrack:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "DiagTrack". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DiagTrack:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Dnscache". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dnscache:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Dnscache". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Dnscache:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "dot3svc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dot3svc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "dot3svc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (dot3svc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "DPS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DPS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "DPS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DPS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "DsmSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DsmSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "DsmSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (DsmSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Eaphost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Eaphost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Eaphost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Eaphost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "EFS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EFS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "EFS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EFS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "EventLog". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventLog:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "EventLog". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventLog:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "EventSystem". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventSystem:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "EventSystem". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (EventSystem:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Fax". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Fax:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Fax". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Fax:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "fdPHost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (fdPHost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "fdPHost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (fdPHost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "FDResPub". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FDResPub:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "FDResPub". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FDResPub:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "fhsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (fhsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "fhsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (fhsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "FontCache". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FontCache:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "FontCache". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (FontCache:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "GoogleChromeElevationService". Verify the process name and call the 
cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleChromeElevationService:String) [Stop-Process], 
ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "GoogleChromeElevationService". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (GoogleChromeElevationService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "gpsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gpsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "gpsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gpsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "gupdate". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdate:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "gupdate". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdate:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "gupdatem". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdatem:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "gupdatem". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gupdatem:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "gusvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gusvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "gusvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (gusvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

What if: Performing the operation "Stop-Process" on target "HealthService (1492)".
stop-process : Cannot find a process with the name "hidserv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (hidserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "hidserv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (hidserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "hkmsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (hkmsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "hkmsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (hkmsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "HomeGroupListener". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (HomeGroupListener:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "HomeGroupListener". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (HomeGroupListener:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "HomeGroupProvider". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (HomeGroupProvider:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "HomeGroupProvider". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (HomeGroupProvider:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

What if: Performing the operation "Stop-Process" on target "IAStorDataMgrSvc (5292)".
stop-process : Cannot find a process with the name "IEEtwCollectorService". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IEEtwCollectorService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "IEEtwCollectorService". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IEEtwCollectorService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "igfxCUIService2.0.0.0". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (igfxCUIService2.0.0.0:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "igfxCUIService2.0.0.0". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (igfxCUIService2.0.0.0:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "IKEEXT". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IKEEXT:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "IKEEXT". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (IKEEXT:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Intel(R) PROSet Monitoring Service". Verify the process name and 
call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Intel(R) PROSet Monitoring Service:String) [Stop-Process], 
ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Intel(R) PROSet Monitoring Service". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Intel(R) PROSet Monitoring Service:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "iphlpsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (iphlpsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "iphlpsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (iphlpsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Jenkins". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Jenkins:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Jenkins". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Jenkins:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "KeyIso". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KeyIso:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "KeyIso". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KeyIso:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "KtmRm". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KtmRm:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "KtmRm". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (KtmRm:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "LanmanServer". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanServer:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "LanmanServer". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanServer:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "LanmanWorkstation". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanWorkstation:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "LanmanWorkstation". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LanmanWorkstation:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "lfsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lfsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "lfsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lfsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "lltdsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lltdsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "lltdsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lltdsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "lmhosts". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lmhosts:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "lmhosts". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (lmhosts:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "LSM". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LSM:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "LSM". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (LSM:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Microsoft Office Groove Audit Service". Verify the process name and 
call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Microsoft Office Groove Audit Service:String) [Stop-Process], 
ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Microsoft Office Groove Audit Service". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Microsoft Office Groove Audit Service:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "MMCSS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MMCSS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "MMCSS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MMCSS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "MpsSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MpsSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "MpsSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MpsSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "MSDTC". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSDTC:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "MSDTC". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSDTC:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "MSiSCSI". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSiSCSI:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "MSiSCSI". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MSiSCSI:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "msiserver". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (msiserver:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "msiserver". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (msiserver:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "MsKeyboardFilter". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MsKeyboardFilter:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "MsKeyboardFilter". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (MsKeyboardFilter:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

What if: Performing the operation "Stop-Process" on target "MSOIDSVC (1688)".
What if: Performing the operation "Stop-Process" on target "mvmcP2VAgent (2068)".
stop-process : Cannot find a process with the name "napagent". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (napagent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "napagent". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (napagent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "NcaSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "NcaSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "NcbService". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcbService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "NcbService". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcbService:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "NcdAutoSetup". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcdAutoSetup:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "NcdAutoSetup". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NcdAutoSetup:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Netlogon". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netlogon:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Netlogon". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netlogon:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Netman". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netman:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Netman". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Netman:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "netprofm". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (netprofm:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "netprofm". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (netprofm:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "NetTcpPortSharing". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NetTcpPortSharing:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "NetTcpPortSharing". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NetTcpPortSharing:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "NlaSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NlaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "NlaSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (NlaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "nsi". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (nsi:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "nsi". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (nsi:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "odserv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (odserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "odserv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (odserv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "ose". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ose:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "ose". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ose:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "p2pimsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (p2pimsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "p2pimsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (p2pimsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "p2psvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (p2psvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "p2psvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (p2psvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PassThru Service". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PassThru Service:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PassThru Service". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PassThru Service:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PcaSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PcaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PcaSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PcaSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PeerDistSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PeerDistSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PeerDistSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PeerDistSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PerfHost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PerfHost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PerfHost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PerfHost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "pla". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (pla:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "pla". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (pla:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PlugPlay". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PlugPlay:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PlugPlay". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PlugPlay:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PNRPAutoReg". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PNRPAutoReg:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PNRPAutoReg". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PNRPAutoReg:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PNRPsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PNRPsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PNRPsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PNRPsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PolicyAgent". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PolicyAgent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PolicyAgent". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PolicyAgent:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Power". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Power:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Power". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Power:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "PrintNotify". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PrintNotify:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "PrintNotify". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (PrintNotify:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "ProfSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ProfSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "ProfSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ProfSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "QWAVE". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (QWAVE:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "QWAVE". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (QWAVE:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "RasAuto". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasAuto:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "RasAuto". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasAuto:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "RasMan". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasMan:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "RasMan". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RasMan:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "RemoteAccess". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RemoteAccess:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "RemoteAccess". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RemoteAccess:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "RemoteRegistry". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RemoteRegistry:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "RemoteRegistry". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RemoteRegistry:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "rpcapd". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (rpcapd:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "rpcapd". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (rpcapd:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "RpcEptMapper". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RpcEptMapper:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "RpcEptMapper". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RpcEptMapper:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "RpcLocator". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RpcLocator:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "RpcLocator". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RpcLocator:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "RpcSs". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RpcSs:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "RpcSs". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (RpcSs:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SamSs". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SamSs:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SamSs". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SamSs:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SCardSvr". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SCardSvr:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SCardSvr". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SCardSvr:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "ScDeviceEnum". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ScDeviceEnum:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "ScDeviceEnum". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ScDeviceEnum:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Schedule". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Schedule:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Schedule". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Schedule:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SCPolicySvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SCPolicySvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SCPolicySvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SCPolicySvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "seclogon". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (seclogon:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "seclogon". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (seclogon:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SENS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SENS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SENS". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SENS:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SensrSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SensrSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SensrSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SensrSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SessionEnv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SessionEnv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SessionEnv". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SessionEnv:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SharedAccess". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SharedAccess:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SharedAccess". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SharedAccess:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "ShellHWDetection". Verify the process name and call the cmdlet 
again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ShellHWDetection:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "ShellHWDetection". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ShellHWDetection:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "smphost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (smphost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "smphost". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (smphost:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SNMPTRAP". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SNMPTRAP:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SNMPTRAP". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SNMPTRAP:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "Spooler". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Spooler:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "Spooler". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Spooler:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "sppsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (sppsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "sppsvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (sppsvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

What if: Performing the operation "Stop-Process" on target "sqlwriter (1872)".
stop-process : Cannot find a process with the name "SSDPSRV". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SSDPSRV:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
stop-process : Cannot find a process with the name "SSDPSRV". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SSDPSRV:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand

stop-process : Cannot find a process with the name "SstpSvc". Verify the process name and call the cmdlet again.
At line:1 char:15
+ Get-Service | stop-process -WhatIf
+               ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (SstpSvc:String) [Stop-Process], ProcessCommandException
    + FullyQualifiedErrorId : NoProcessFoundForGivenName,Microsoft.PowerShell.Commands.StopProcessCommand
>> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS C:\Windows\system32> $myhash=@{Name="Prathamesh" ; Company='Buro'}
PS C:\Windows\system32> $myhash

Name                           Value
----                           -----
Name                           Prathamesh
Company                        Buro


PS C:\Windows\system32> $myhash.Name
Prathamesh
PS C:\Windows\system32> get-service | Get-Member


   TypeName: System.ServiceProcess.ServiceController

Name                      MemberType    Definition
----                      ----------    ----------
Name                      AliasProperty Name = ServiceName
RequiredServices          AliasProperty RequiredServices = ServicesDependedOn
Disposed                  Event         System.EventHandler Disposed(System.Object, System.EventArgs)
Close                     Method        void Close()
Continue                  Method        void Continue()
CreateObjRef              Method        System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
Dispose                   Method        void Dispose(), void IDisposable.Dispose()
Equals                    Method        bool Equals(System.Object obj)
ExecuteCommand            Method        void ExecuteCommand(int command)
GetHashCode               Method        int GetHashCode()
GetLifetimeService        Method        System.Object GetLifetimeService()
GetType                   Method        type GetType()
InitializeLifetimeService Method        System.Object InitializeLifetimeService()
Pause                     Method        void Pause()
Refresh                   Method        void Refresh()
Start                     Method        void Start(), void Start(string[] args)
Stop                      Method        void Stop()
WaitForStatus             Method        void WaitForStatus(System.ServiceProcess.ServiceControllerStatus desiredStatus), void WaitForStatus(System.ServiceProcess.ServiceControllerStatus desiredStatus, timespan ...
CanPauseAndContinue       Property      bool CanPauseAndContinue {get;}
CanShutdown               Property      bool CanShutdown {get;}
CanStop                   Property      bool CanStop {get;}
Container                 Property      System.ComponentModel.IContainer Container {get;}
DependentServices         Property      System.ServiceProcess.ServiceController[] DependentServices {get;}
DisplayName               Property      string DisplayName {get;set;}
MachineName               Property      string MachineName {get;set;}
ServiceHandle             Property      System.Runtime.InteropServices.SafeHandle ServiceHandle {get;}
ServiceName               Property      string ServiceName {get;set;}
ServicesDependedOn        Property      System.ServiceProcess.ServiceController[] ServicesDependedOn {get;}
ServiceType               Property      System.ServiceProcess.ServiceType ServiceType {get;}
Site                      Property      System.ComponentModel.ISite Site {get;set;}
StartType                 Property      System.ServiceProcess.ServiceStartMode StartType {get;}
Status                    Property      System.ServiceProcess.ServiceControllerStatus Status {get;}
ToString                  ScriptMethod  System.Object ToString();


PS C:\Windows\system32> get-service | select @{l='Name1' ; e={$_name}}

Name1
-----









































































































































































































PS C:\Windows\system32> get-service | Get-Member


   TypeName: System.ServiceProcess.ServiceController

Name                      MemberType    Definition
----                      ----------    ----------
Name                      AliasProperty Name = ServiceName
RequiredServices          AliasProperty RequiredServices = ServicesDependedOn
Disposed                  Event         System.EventHandler Disposed(System.Object, System.EventArgs)
Close                     Method        void Close()
Continue                  Method        void Continue()
CreateObjRef              Method        System.Runtime.Remoting.ObjRef CreateObjRef(type requestedType)
Dispose                   Method        void Dispose(), void IDisposable.Dispose()
Equals                    Method        bool Equals(System.Object obj)
ExecuteCommand            Method        void ExecuteCommand(int command)
GetHashCode               Method        int GetHashCode()
GetLifetimeService        Method        System.Object GetLifetimeService()
GetType                   Method        type GetType()
InitializeLifetimeService Method        System.Object InitializeLifetimeService()
Pause                     Method        void Pause()
Refresh                   Method        void Refresh()
Start                     Method        void Start(), void Start(string[] args)
Stop                      Method        void Stop()
WaitForStatus             Method        void WaitForStatus(System.ServiceProcess.ServiceControllerStatus desiredStatus), void WaitForStatus(System.ServiceProcess.ServiceControllerStatus desiredStatus, timespan ...
CanPauseAndContinue       Property      bool CanPauseAndContinue {get;}
CanShutdown               Property      bool CanShutdown {get;}
CanStop                   Property      bool CanStop {get;}
Container                 Property      System.ComponentModel.IContainer Container {get;}
DependentServices         Property      System.ServiceProcess.ServiceController[] DependentServices {get;}
DisplayName               Property      string DisplayName {get;set;}
MachineName               Property      string MachineName {get;set;}
ServiceHandle             Property      System.Runtime.InteropServices.SafeHandle ServiceHandle {get;}
ServiceName               Property      string ServiceName {get;set;}
ServicesDependedOn        Property      System.ServiceProcess.ServiceController[] ServicesDependedOn {get;}
ServiceType               Property      System.ServiceProcess.ServiceType ServiceType {get;}
Site                      Property      System.ComponentModel.ISite Site {get;set;}
StartType                 Property      System.ServiceProcess.ServiceStartMode StartType {get;}
Status                    Property      System.ServiceProcess.ServiceControllerStatus Status {get;}
ToString                  ScriptMethod  System.Object ToString();


PS C:\Windows\system32> get-service | select @{label='Name1' ; e={$_name}} | Get-Member


   TypeName: Selected.System.ServiceProcess.ServiceController

Name        MemberType   Definition
----        ----------   ----------
Equals      Method       bool Equals(System.Object obj)
GetHashCode Method       int GetHashCode()
GetType     Method       type GetType()
ToString    Method       string ToString()
Name1       NoteProperty object Name1=null


PS C:\Windows\system32> get-help about_operators
TOPIC
    about_Operators

SHORT DESCRIPTION
    Describes the operators that are supported by Windows PowerShell. 

LONG DESCRIPTION
    An operator is a language element that you can use in a command or
    expression. Windows PowerShell supports several types of operators to
    help you manipulate values.


  Arithmetic Operators
      Use arithmetic operators (+, -, *, /, %) to calculate values in a command
      or expression. With these operators, you can add, subtract, multiply, or
      divide values, and calculate the remainder (modulus) of a division 
      operation.


      You can also use arithmetic operators with strings, arrays, and hash 
      tables. The addition operator concatenates elements. The multiplication
      operator returns the specified number of copies of each element.


      For more information, see about_Arithmetic_Operators. 


  Assignment Operators
      Use assignment operators (=, +=, -=, *=, /=, %=) to assign one or more
      values to variables, to change the values in a variable, and to append
      values to variables. You can also cast the variable as any Microsoft .NET
      Framework data type, such as string or DateTime, or Process variable.


      For more information, see about_Assignment_Operators.


  Comparison Operators
      Use comparison operators (-eq, -ne, -gt, -lt, -le, -ge) to compare values
      and test conditions. For example, you can compare two string values to 
      determine whether they are equal. 


      The comparison operators include the match operators (-match, -notmatch), 
      which find patterns by using regular expressions; the replace operator 
      (-replace), which uses regular expressions to change input values; the
      like operators (-like, -notlike), which find patterns using wildcard 
      characters (*); and the containment operators (-in, -notin, -contains, 
      -notcontains), which determine whether a test value appears in a reference
      set.

      They also include the bitwise operators (-bAND, -bOR, -bXOR, -bNOT) to 
      manipulate the bit patterns in values.


    For more information, see about_Comparison_Operators 


  Logical Operators
      Use logical operators (-and, -or, -xor, -not, !) to connect conditional
      statements into a single complex conditional. For example, you can use a
      logical -and operator to create an object filter with two different 
      conditions.


      For more information, see about_Logical_Operators.


  Redirection Operators
      Use redirection operators (>, >>, 2>, 2>, and 2>&1) to send the output of
      a command or expression to a text file. The redirection operators work 
      like the Out-File cmdlet (without parameters) but they also let you 
      redirect error output to specified files. You can also use the Tee-Object
      cmdlet to redirect output.


      For more information, see about_Redirection.


  Split and Join Operators
      The -split and -join operators divide and combine substrings. The -split 
      operator splits a string into substrings. The -join operator concatenates
      multiple strings into a single string.


      For more information, see about_Split and about_Join.


  Type Operators
      Use the type operators (-is, -isnot, -as) to find or change the .NET 
      Framework type of an object. 

      For more information, see about_Type_Operators.


  Unary Operators
      Use unary operators to increment or decrement variables or object 
      properties and to set integers to positive or negative numbers. For 
      example, to increment the variable $a from 9 to 10, you type $a++.


  Special Operators
      Use special operators to perform tasks that cannot be performed by the 
      other types of operators. For example, special operators allow you to 
      perform operations such as running commands and changing a value's data 
      type.

    

      @( ) Array subexpression operator
         Returns the result of one or more statements as an array. 
         If there is only one item, the array has only one member. 


             @(Get-WMIObject win32_logicalDisk)



      & Call operator
         Runs a command, script, or script block. The call operator, also known as
         the "invocation operator," lets you run commands that are stored in
         variables and represented by strings. Because the call operator does not
         parse the command, it cannot interpret command parameters. 

             C:\PS> $c = "get-executionpolicy"
             C:\PS> $c
             get-executionpolicy
 
             C:\PS> & $c
             AllSigned



      [ ] Cast operator
           Converts or limits objects to the specified type. If the objects
           cannot be converted, Windows PowerShell generates an error.

             [datetime]$birthday = "1/20/88"
             [int64]$a = 34  



      , Comma operator
         As a binary operator, the comma creates an array. As a unary
         operator, the comma creates an array with one member. Place the
         comma before the member.


             $myArray = 1,2,3 
             $SingleArray = ,1     



      . Dot sourcing operator
         Runs a script in the current scope so that any functions,
         aliases, and variables that the script creates are added to the current
         scope. 

             . c:\scripts.sample.ps1


         Note: The dot sourcing operator is followed by a space. Use the space to
               distinguish the dot from the dot (.) symbol that represents the 
               current directory.
 
               In the following example, the Sample.ps1 script in the current 
               directory is run in the current scope.

                 . .\sample.ps1



      -f Format operator
          Formats strings by using the format method of string 
          objects. Enter the format string on the left side of the operator 
          and the objects to be formatted on the right side of the operator.
        

             C:\PS> "{0} {1,-10} {2:N}" -f 1,"hello",[math]::pi
             1 hello      3.14

          For more information, see the String.Format method 
          (http://go.microsoft.com/fwlink/?LinkID=166450) and 
          Composite Formatting (http://go.microsoft.com/fwlink/?LinkID=166451).



      [ ] Index operator
           Selects objects from indexed collections, such as arrays and
           hash tables. Array indexes are zero-based, so the first object 
           is indexed as [0]. For arrays (only), you can also use negative
           indexes to get the last values. Hash tables are indexed by key
           value.

             C:\PS> $a = 1, 2, 3
             C:\PS> $a[0]
             1
             C:\PS> $a[-1]
             3


             C:\PS> (get-hotfix | sort installedOn)[-1]

           
             C:\PS> $h = @{key="value"; name="Windows PowerShell"; version="2.0"}
             C:\PS> $h["name"]
             Windows PowerShell


             C:\PS> $x = [xml]"<doc><intro>Once upon a time...</intro></doc>"
             C:\PS> $x["doc"]
             intro
             -----
             Once upon a time...

           



      | Pipeline operator
         Sends ("pipes") the output of the command that precedes it to the
         command that follows it. When the output includes more than one object
         (a "collection"), the pipeline operator sends the objects one at a time.

               get-process | get-member
               get-pssnapin | where {$_.vendor -ne "Microsoft"}                              



      . Property dereference operator
         Accesses the properties and methods of an object. 
         

             $myProcess.peakWorkingSet
             (get-process PowerShell).kill()



      .. Range operator
          Represents the sequential integers in an integer array, 
          given an upper and lower boundary.


             1..10
             10..1
             foreach ($a in 1..$max) {write-host $a}



      :: Static member operator
          Calls the static properties operator and methods of a .NET
          Framework class. To find the static properties and methods of an 
          object, use the Static parameter of the Get-Member cmdlet. 


             [datetime]::now
   



      $( ) Subexpression operator
         Returns the result of one or more statements. For a 
         single result, returns a scalar. For multiple results, returns an 
         array.


             $($x * 23)
             $(Get-WMIObject win32_Directory)

                       


       
SEE ALSO
    about_Arithmetic_Operators
    about_Assignment_Operators
    about_Comparison_Operators
    about_Logical_Operators
    about_Type_Operators
    about_Split
    about_Join
    about_Redirection
PS C:\Windows\system32> get-service| Where-Object{$_.Name -eq "BITS"}

Status   Name               DisplayName
------   ----               -----------
Running  BITS               Background Intelligent Transfer Ser...


PS C:\Windows\system32> get-service | select @{label='Name1' ; e={$_name}} | Get-Member


   TypeName: Selected.System.ServiceProcess.ServiceController

Name        MemberType   Definition
----        ----------   ----------
Equals      Method       bool Equals(System.Object obj)
GetHashCode Method       int GetHashCode()
GetType     Method       type GetType()
ToString    Method       string ToString()
Name1       NoteProperty object Name1=null


PS C:\Windows\system32> get-service | select @{label='Name1' ; e={$_name}}

Name1
-----









































































































































































































PS C:\Windows\system32> get-service | select @{label='Name1' ; e={$_.name}}

Name1
-----
AdobeARMservice
AdtAgent
AeLookupSvc
ALG
AnyDesk
AppIDSvc
Appinfo
AppMgmt
AppReadiness
AppXSvc
AudioEndpointBuilder
Audiosrv
AxInstSV
AzureADConnectAgentUpdater
AzureADConnectAuthenticationAgent
BDESVC
BFE
BITS
BrokerInfrastructure
Browser
BthHFSrv
bthserv
CertPropSvc
COMSysApp
cphs
CryptSvc
CscService
DcomLaunch
defragsvc
DeviceAssociationService
DeviceInstall
Dhcp
DiagTrack
Dnscache
dot3svc
DPS
DsmSvc
Eaphost
EFS
EventLog
EventSystem
Fax
fdPHost
FDResPub
fhsvc
FontCache
GoogleChromeElevationService
gpsvc
gupdate
gupdatem
gusvc
HealthService
hidserv
hkmsvc
HomeGroupListener
HomeGroupProvider
IAStorDataMgrSvc
IEEtwCollectorService
igfxCUIService2.0.0.0
IKEEXT
Intel(R) PROSet Monitoring Service
iphlpsvc
Jenkins
KeyIso
KtmRm
LanmanServer
LanmanWorkstation
lfsvc
lltdsvc
lmhosts
LSM
Microsoft Office Groove Audit Service
MMCSS
MpsSvc
MSDTC
MSiSCSI
msiserver
MsKeyboardFilter
msoidsvc
MVMCP2VAgent
napagent
NcaSvc
NcbService
NcdAutoSetup
Netlogon
Netman
netprofm
NetTcpPortSharing
NlaSvc
nsi
odserv
ose
p2pimsvc
p2psvc
PassThru Service
PcaSvc
PeerDistSvc
PerfHost
pla
PlugPlay
PNRPAutoReg
PNRPsvc
PolicyAgent
Power
PrintNotify
ProfSvc
QWAVE
RasAuto
RasMan
RemoteAccess
RemoteRegistry
rpcapd
RpcEptMapper
RpcLocator
RpcSs
SamSs
SCardSvr
ScDeviceEnum
Schedule
SCPolicySvc
seclogon
SENS
SensrSvc
SessionEnv
SharedAccess
ShellHWDetection
smphost
SNMPTRAP
Spooler
sppsvc
SQLWriter
SSDPSRV
SstpSvc
stisvc
StorSvc
svsvc
swprv
SysMain
SystemEventsBroker
TabletInputService
TapiSrv
TeamViewer
TermService
Themes
THREADORDER
TimeBroker
TrkWks
TrustedInstaller
UI0Detect
UmRdpService
upnphost
uSHAREitSvc
VaultSvc
vds
VMAuthdService
vmicguestinterface
vmicheartbeat
vmickvpexchange
vmicrdv
vmicshutdown
vmictimesync
vmicvss
VMnetDHCP
VMUSBArbService
VMware NAT Service
VMwareHostd
VSS
W32Time
wbengine
WbioSrvc
Wcmsvc
wcncsvc
WcsPlugInService
WdiServiceHost
WdiSystemHost
WdNisSvc
WebClient
Wecsvc
WEPHOSTSVC
wercplsupport
WerSvc
WiaRpc
WinDefend
WinHttpAutoProxySvc
Winmgmt
WinRM
WlanSvc
wlidsvc
wmiApSrv
WMPNetworkSvc
workfolderssvc
WPCSvc
WPDBusEnum
wscsvc
WSearch
WSService
wuauserv
wudfsvc
WwanSvc


PS C:\Windows\system32> get-service| Where-Object{$_.Name -eq "BITS"}

Status   Name               DisplayName
------   ----               -----------
Running  BITS               Background Intelligent Transfer Ser...


PS C:\Windows\system32> get-service |where_object{$_.name -like "win*"}
where_object : The term 'where_object' is not recognized as the name of a cmdlet, function, script file, or operable 
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:14
+ get-service |where_object{$_.name -like "win*"}
+              ~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (where_object:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
where_object : The term 'where_object' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is
correct and try again.
At line:1 char:14
+ get-service |where_object{$_.name -like "win*"}
+              ~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (where_object:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Windows\system32> get-service |Where-Object{$_.name -like "win*"}

Status   Name               DisplayName
------   ----               -----------
Stopped  WinDefend          Windows Defender Service
Running  WinHttpAutoProx... WinHTTP Web Proxy Auto-Discovery Se...
Running  Winmgmt            Windows Management Instrumentation
Running  WinRM              Windows Remote Management (WS-Manag...


PS C:\Windows\system32> get-service | select @{label='Name1' ; e={$_.name}}

Name1
-----
AdobeARMservice
AdtAgent
AeLookupSvc
ALG
AnyDesk
AppIDSvc
Appinfo
AppMgmt
AppReadiness
AppXSvc
AudioEndpointBuilder
Audiosrv
AxInstSV
AzureADConnectAgentUpdater
AzureADConnectAuthenticationAgent
BDESVC
BFE
BITS
BrokerInfrastructure
Browser
BthHFSrv
bthserv
CertPropSvc
COMSysApp
cphs
CryptSvc
CscService
DcomLaunch
defragsvc
DeviceAssociationService
DeviceInstall
Dhcp
DiagTrack
Dnscache
dot3svc
DPS
DsmSvc
Eaphost
EFS
EventLog
EventSystem
Fax
fdPHost
FDResPub
fhsvc
FontCache
GoogleChromeElevationService
gpsvc
gupdate
gupdatem
gusvc
HealthService
hidserv
hkmsvc
HomeGroupListener
HomeGroupProvider
IAStorDataMgrSvc
IEEtwCollectorService
igfxCUIService2.0.0.0
IKEEXT
Intel(R) PROSet Monitoring Service
iphlpsvc
Jenkins
KeyIso
KtmRm
LanmanServer
LanmanWorkstation
lfsvc
lltdsvc
lmhosts
LSM
Microsoft Office Groove Audit Service
MMCSS
MpsSvc
MSDTC
MSiSCSI
msiserver
MsKeyboardFilter
msoidsvc
MVMCP2VAgent
napagent
NcaSvc
NcbService
NcdAutoSetup
Netlogon
Netman
netprofm
NetTcpPortSharing
NlaSvc
nsi
odserv
ose
p2pimsvc
p2psvc
PassThru Service
PcaSvc
PeerDistSvc
PerfHost
pla
PlugPlay
PNRPAutoReg
PNRPsvc
PolicyAgent
Power
PrintNotify
ProfSvc
QWAVE
RasAuto
RasMan
RemoteAccess
RemoteRegistry
rpcapd
RpcEptMapper
RpcLocator
RpcSs
SamSs
SCardSvr
ScDeviceEnum
Schedule
SCPolicySvc
seclogon
SENS
SensrSvc
SessionEnv
SharedAccess
ShellHWDetection
smphost
SNMPTRAP
Spooler
sppsvc
SQLWriter
SSDPSRV
SstpSvc
stisvc
StorSvc
svsvc
swprv
SysMain
SystemEventsBroker
TabletInputService
TapiSrv
TeamViewer
TermService
Themes
THREADORDER
TimeBroker
TrkWks
TrustedInstaller
UI0Detect
UmRdpService
upnphost
uSHAREitSvc
VaultSvc
vds
VMAuthdService
vmicguestinterface
vmicheartbeat
vmickvpexchange
vmicrdv
vmicshutdown
vmictimesync
vmicvss
VMnetDHCP
VMUSBArbService
VMware NAT Service
VMwareHostd
VSS
W32Time
wbengine
WbioSrvc
Wcmsvc
wcncsvc
WcsPlugInService
WdiServiceHost
WdiSystemHost
WdNisSvc
WebClient
Wecsvc
WEPHOSTSVC
wercplsupport
WerSvc
WiaRpc
WinDefend
WinHttpAutoProxySvc
Winmgmt
WinRM
WlanSvc
wlidsvc
wmiApSrv
WMPNetworkSvc
workfolderssvc
WPCSvc
WPDBusEnum
wscsvc
WSearch
WSService
wuauserv
wudfsvc
WwanSvc


PS C:\Windows\system32> get-service |Where-Object{$_.name -like "win*"}

Status   Name               DisplayName
------   ----               -----------
Stopped  WinDefend          Windows Defender Service
Running  WinHttpAutoProx... WinHTTP Web Proxy Auto-Discovery Se...
Running  Winmgmt            Windows Management Instrumentation
Running  WinRM              Windows Remote Management (WS-Manag...


PS C:\Windows\system32> Get-Process|Where-Object{$_.Name -notlike "Microsoft"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    209      16    11664      12500       0.53   1384   0 AnyDesk
    177      15    12708      10856       0.23   4764   1 AnyDesk
     81       7     1020        748       0.00   1356   0 armsvc
    237      65    74960       1952       1.13   3760   1 AsrAPPShop
    506      28    53524      11648       0.36   3900   0 AzureADConnectAgentUpdater
    951      50   287620      83628       2.22   1796   0 AzureADConnectAuthenticationAgentService
    388      27    49140      38812      31.27    104   1 chrome
    455      34    54616      42884       8.28   1572   1 chrome
    327      30    53568      37492       7.02   2176   1 chrome
    398      22    14988      18724       5.06   2208   1 chrome
    153       9     1516       1564       0.05   3408   1 chrome
     91       9     1480       1132       0.02   3412   1 chrome
   1049      52    57908      61552      21.86   3692   1 chrome
    288      26    40560      31052       5.56   4252   1 chrome
    336      32    58764      49668      24.61   4584   1 chrome
    207      18    12920      11812       0.11   5172   1 chrome
    164      12     1756       1872       0.03   4980   1 concentr
     67       8     1920       1700       0.02   4620   1 conhost
    333      14     1692       1632       1.39    476   0 csrss
    314      23     2316      25040       3.92    548   1 csrss
    444      18     6536       9944       0.67   1520   0 dasHost
     90       6     1180        992       0.02   4668   0 dllhost
    172      21    17536      21564      40.42    860   1 dwm
    415      30    11196      16400       1.55   4880   1 EXCEL
   1853     120    74316      82732      20.41   3788   1 explorer
    113       8     1376        960       0.00   4840   0 GoogleCrashHandler
    108       7     1296        316       0.00   4848   0 GoogleCrashHandler64
    811      30    32452      26132      91.59   1492   0 HealthService
    330      27    32516      19272       0.97   5292   0 IAStorDataMgrSvc
    255      21    24196       7708       0.20   2644   1 IAStorIcon
      0       0        0          4                 0   0 Idle
    125       8     1368       1084       0.03    304   0 igfxCUIService
    136      12     3252       2344       0.03   3768   1 igfxEM
     93       8     1240        976       0.02   1564   0 IPROSetMonitor
   1115      21     6096       8588       6.44    652   0 lsass
    844      40    54644      17992     112.92   2908   0 MonitoringHost
    160      11     2852       2460       0.06   1688   0 MSOIDSVC
     80       5      872        576       0.00   1860   0 MSOIDSVCM
    159      13     2176       1856       0.05   2068   0 mvmcP2VAgent
     89       8     1380       4940       0.08   4344   1 notepad
     54       7      992        632       0.00   1752   0 PassThruSvr
    506      27    51028      18680       0.34   1700   1 powershell
    904      57   364880     246640     246.31   3860   1 powershell_ise
    106       7     1180       4380       0.02   1960   0 SearchFilterHost
    696      68    33060      28548       3.55   3280   0 SearchIndexer
    262       9     1512       5008       0.02   5464   0 SearchProtocolHost
    268      10     3548       4596       1.61    644   0 services
     44       2      272        220       0.19    316   0 smss
    348      20     3368       2684       0.06   1196   0 spoolsv
     99       9     1424       1040       0.02   1872   0 sqlwriter
    593      29    13952      11720      36.27    336   0 svchost
    391      14     4652       5796       0.75    728   0 svchost
    598      38     9832      11068       8.61    740   0 svchost
    475      17     4324       6196       1.94    772   0 svchost
    840      35    17984      16652       2.20    876   0 svchost
   1471      65    18156      24000       8.13    920   0 svchost
    707      35     9364      13740       2.00    948   0 svchost
    498      39    16264      17396       2.27   1240   0 svchost
    202      13     3284       3328       0.03   1440   0 svchost
    143      10     1836       1768       0.03   1932   0 svchost
    103      10     1320        904       0.05   2820   0 svchost
    508      35     7676       9812      16.45   2860   0 svchost
    411      28     5668       7968       8.66   3316   0 svchost
   1460       0      108        360   5,480.55      4   0 System
    261      44     9512      10732       0.20   3748   1 taskhostex
    406     142     5464       5816       0.23   2000   0 TeamViewer_Service
     95      10     1600       1460       0.06   2028   0 vmnat
    240      16     3748       2976       3.83   1596   0 vmware-authd
    298      32    24280      19968       1.23   2284   0 vmware-hostd
     86      10     1352       1112       0.00   5036   1 vmware-tray
    162      12     2064       1568       0.00   1696   0 vmware-usbarbitrator64
    223      18     2640       3112       0.03   5012   1 wfcrun32
     74       8      812        584       0.03    556   0 wininit
    149       8     1432        944       0.00    600   1 winlogon
    400      24     6964       4404       1.86   5452   0 wmpnetwk
     79       8     1112       1028       0.00   4772   1 WZQKPICK


PS C:\Windows\system32> Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException
Cannot convert the "Microsoft" value of type "System.String" to type "System.Type".
At line:1 char:26
+ Get-Process|Where-Object{$_.Name -isnot "Microsoft"}
+                          ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], RuntimeException
    + FullyQualifiedErrorId : RuntimeException

PS C:\Windows\system32> Get-Process|Where-Object{$_.Name -notlike "Microsoft"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    209      16    11664      12500       0.53   1384   0 AnyDesk
    177      15    12708      10856       0.23   4764   1 AnyDesk
     81       7     1020        748       0.00   1356   0 armsvc
    237      65    74960       1876       1.13   3760   1 AsrAPPShop
    506      28    53524      11648       0.36   3900   0 AzureADConnectAgentUpdater
    969      50   287612      83616       2.22   1796   0 AzureADConnectAuthenticationAgentService
    388      27    49140      38812      31.27    104   1 chrome
    455      34    54616      42884       8.28   1572   1 chrome
    327      30    53568      37492       7.02   2176   1 chrome
    398      22    14988      18724       5.06   2208   1 chrome
    153       9     1516       1564       0.05   3408   1 chrome
     91       9     1480       1132       0.02   3412   1 chrome
   1054      53    57996      61596      21.86   3692   1 chrome
    288      26    40560      31052       5.56   4252   1 chrome
    336      32    58764      49668      24.61   4584   1 chrome
    207      18    12920      11816       0.11   5172   1 chrome
    164      12     1756       1872       0.03   4980   1 concentr
     67       8     1920       1700       0.02   4620   1 conhost
    328      14     1692       1624       1.39    476   0 csrss
    314      23     2316      25040       3.97    548   1 csrss
    444      18     6536       9944       0.67   1520   0 dasHost
     90       6     1180        992       0.02   4668   0 dllhost
    172      21    17536      20908      40.91    860   1 dwm
    415      30    11196      16400       1.55   4880   1 EXCEL
   1855     120    74392      82756      20.42   3788   1 explorer
    113       8     1376        960       0.00   4840   0 GoogleCrashHandler
    108       7     1296        316       0.00   4848   0 GoogleCrashHandler64
    818      30    33284      25980      92.13   1492   0 HealthService
    330      27    32516      19272       0.97   5292   0 IAStorDataMgrSvc
    255      21    24196       7708       0.20   2644   1 IAStorIcon
      0       0        0          4                 0   0 Idle
    125       8     1368       1084       0.03    304   0 igfxCUIService
    136      12     3252       2344       0.03   3768   1 igfxEM
     93       8     1240        976       0.02   1564   0 IPROSetMonitor
   1111      21     6028       8572       6.47    652   0 lsass
    779      41    55688      17492     113.55   2908   0 MonitoringHost
    160      11     2852       2460       0.06   1688   0 MSOIDSVC
     80       5      872        576       0.00   1860   0 MSOIDSVCM
    159      13     2176       1856       0.05   2068   0 mvmcP2VAgent
     89       8     1380       4940       0.08   4344   1 notepad
     54       7      992        632       0.00   1752   0 PassThruSvr
    506      27    51028      18680       0.34   1700   1 powershell
    740      58   363980     261664     253.98   3860   1 powershell_ise
    677      68    32956      28512       3.55   3280   0 SearchIndexer
    268      10     3496       4584       1.63    644   0 services
     44       2      272        220       0.19    316   0 smss
    348      20     3368       2684       0.06   1196   0 spoolsv
     99       9     1424       1040       0.02   1872   0 sqlwriter
    594      29    13952      11804      36.27    336   0 svchost
    391      14     4652       5796       0.75    728   0 svchost
    595      38     9744      11052       8.61    740   0 svchost
    471      17     4376       6216       1.95    772   0 svchost
    804      31    17108      15960       2.20    876   0 svchost
   1474      65    18156      24000       8.13    920   0 svchost
    699      34     9260      13684       2.02    948   0 svchost
    498      39    16268      17444       2.28   1240   0 svchost
    202      13     3284       3460       0.03   1440   0 svchost
    143      10     1836       1768       0.03   1932   0 svchost
    103      10     1320        904       0.05   2820   0 svchost
    512      35     7728       9828      16.45   2860   0 svchost
    411      28     5688       7996       8.69   3316   0 svchost
   1457       0      108        424   5,480.77      4   0 System
    262      44     9532      10716       0.20   3748   1 taskhostex
    406     142     5464       5816       0.23   2000   0 TeamViewer_Service
     95      10     1600       1460       0.06   2028   0 vmnat
    240      16     3748       2976       3.84   1596   0 vmware-authd
    298      32    24280      19968       1.23   2284   0 vmware-hostd
     86      10     1352       1112       0.00   5036   1 vmware-tray
    162      12     2064       1568       0.00   1696   0 vmware-usbarbitrator64
    225      18     2644       3116       0.03   5012   1 wfcrun32
     74       8      812        584       0.03    556   0 wininit
    149       8     1432        944       0.00    600   1 winlogon
    398      24     6936       4392       1.86   5452   0 wmpnetwk
     79       8     1112       1028       0.00   4772   1 WZQKPICK


PS C:\Windows\system32> Get-Process|Where-Object{$_.Company -notlike "Microsoft"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    209      16    11664      12500       0.53   1384   0 AnyDesk
    177      15    12708      10856       0.23   4764   1 AnyDesk
     81       7     1020        748       0.00   1356   0 armsvc
    237      65    74960       1864       1.13   3760   1 AsrAPPShop
    506      28    53524      11648       0.36   3900   0 AzureADConnectAgentUpdater
    969      50   287612      83616       2.22   1796   0 AzureADConnectAuthenticationAgentService
    388      27    49140      38812      31.27    104   1 chrome
    455      34    54616      42884       8.28   1572   1 chrome
    327      30    53568      37492       7.02   2176   1 chrome
    398      22    14988      18724       5.06   2208   1 chrome
    153       9     1516       1564       0.05   3408   1 chrome
     91       9     1480       1132       0.02   3412   1 chrome
   1054      53    57996      61600      21.86   3692   1 chrome
    288      26    40560      31052       5.56   4252   1 chrome
    336      32    58764      49668      24.61   4584   1 chrome
    207      18    12920      11816       0.11   5172   1 chrome
    164      12     1756       1872       0.03   4980   1 concentr
     67       8     1920       1700       0.02   4620   1 conhost
    328      14     1692       1624       1.39    476   0 csrss
    314      23     2316      25040       3.98    548   1 csrss
    444      18     6536       9944       0.67   1520   0 dasHost
     90       6     1180        992       0.02   4668   0 dllhost
    172      21    17536      21016      41.05    860   1 dwm
    415      30    11196      16400       1.55   4880   1 EXCEL
   1855     120    74392      82756      20.42   3788   1 explorer
    113       8     1376        960       0.00   4840   0 GoogleCrashHandler
    108       7     1296        316       0.00   4848   0 GoogleCrashHandler64
    821      30    33316      25896      92.22   1492   0 HealthService
    330      27    32516      19272       0.97   5292   0 IAStorDataMgrSvc
    255      21    24196       7708       0.20   2644   1 IAStorIcon
      0       0        0          4                 0   0 Idle
    125       8     1368       1084       0.03    304   0 igfxCUIService
    136      12     3252       2344       0.03   3768   1 igfxEM
     93       8     1240        976       0.02   1564   0 IPROSetMonitor
   1111      21     6028       8572       6.47    652   0 lsass
    776      41    55372      17408     113.67   2908   0 MonitoringHost
    160      11     2852       2460       0.06   1688   0 MSOIDSVC
     80       5      872        576       0.00   1860   0 MSOIDSVCM
    159      13     2176       1856       0.05   2068   0 mvmcP2VAgent
     89       8     1380       4940       0.08   4344   1 notepad
     54       7      992        632       0.00   1752   0 PassThruSvr
    506      27    51028      18680       0.34   1700   1 powershell
    737      57   365668     255748     254.84   3860   1 powershell_ise
    677      68    32956      28512       3.55   3280   0 SearchIndexer
    268      10     3496       4584       1.63    644   0 services
     44       2      272        220       0.19    316   0 smss
    348      20     3368       2684       0.06   1196   0 spoolsv
     99       9     1424       1040       0.02   1872   0 sqlwriter
    593      30    14004      11840      37.23    336   0 svchost
    391      14     4652       5796       0.75    728   0 svchost
    597      38     9784      11068       8.61    740   0 svchost
    471      17     4376       6216       1.95    772   0 svchost
    806      31    17192      15976       2.20    876   0 svchost
   1474      65    18156      24000       8.13    920   0 svchost
    699      34     9312      13700       2.02    948   0 svchost
    499      39    16268      17444       2.28   1240   0 svchost
    202      13     3284       3460       0.03   1440   0 svchost
    143      10     1836       1768       0.03   1932   0 svchost
    103      10     1320        904       0.05   2820   0 svchost
    512      35     7728       9828      16.45   2860   0 svchost
    411      28     5688       7996       8.69   3316   0 svchost
   1457       0      108        424   5,480.78      4   0 System
    262      44     9532      10716       0.20   3748   1 taskhostex
    406     142     5464       5816       0.23   2000   0 TeamViewer_Service
     95      10     1600       1460       0.06   2028   0 vmnat
    240      16     3748       2976       3.84   1596   0 vmware-authd
    298      32    24280      19968       1.23   2284   0 vmware-hostd
     86      10     1352       1112       0.00   5036   1 vmware-tray
    162      12     2064       1568       0.00   1696   0 vmware-usbarbitrator64
    225      18     2644       3116       0.03   5012   1 wfcrun32
     74       8      812        584       0.03    556   0 wininit
    149       8     1432        944       0.00    600   1 winlogon
    398      24     6936       4392       1.86   5452   0 wmpnetwk
     79       8     1112       1028       0.00   4772   1 WZQKPICK


PS C:\Windows\system32> Get-Process|Where-Object{$_.Company -notlike "*Microsoft*"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
    209      16    11664      12500       0.53   1384   0 AnyDesk
    177      15    12708      10856       0.23   4764   1 AnyDesk
     81       7     1020        748       0.00   1356   0 armsvc
    237      65    74960       1792       1.13   3760   1 AsrAPPShop
    506      28    53524      11648       0.36   3900   0 AzureADConnectAgentUpdater
    999      52   287848      83724       2.22   1796   0 AzureADConnectAuthenticationAgentService
    388      27    49140      38812      31.27    104   1 chrome
    455      34    54616      42884       8.28   1572   1 chrome
    327      30    53568      37492       7.02   2176   1 chrome
    400      22    15044      18776       5.08   2208   1 chrome
    153       9     1516       1596       0.05   3408   1 chrome
     91       9     1480       1132       0.02   3412   1 chrome
   1062      53    58052      61928      21.88   3692   1 chrome
    288      26    40560      31052       5.56   4252   1 chrome
    336      32    58764      49668      24.61   4584   1 chrome
    207      18    12920      11816       0.11   5172   1 chrome
    164      12     1756       1872       0.03   4980   1 concentr
    326      14     1692       1624       1.39    476   0 csrss
    314      23     2316      25040       4.00    548   1 csrss
    113       8     1376        960       0.00   4840   0 GoogleCrashHandler
    108       7     1296        316       0.00   4848   0 GoogleCrashHandler64
    330      27    32516      19272       0.97   5292   0 IAStorDataMgrSvc
    255      21    24196       7708       0.20   2644   1 IAStorIcon
      0       0        0          4                 0   0 Idle
    125       8     1368       1084       0.03    304   0 igfxCUIService
    136      12     3252       2344       0.03   3768   1 igfxEM
     93       8     1240        976       0.02   1564   0 IPROSetMonitor
     54       7      992        632       0.00   1752   0 PassThruSvr
    268      10     3548       4600       1.63    644   0 services
     44       2      272        220       0.19    316   0 smss
   1459       0      108        424   5,480.80      4   0 System
    406     155     5464       5816       0.23   2000   0 TeamViewer_Service
     95      10     1600       1460       0.06   2028   0 vmnat
    240      16     3748       2972       3.84   1596   0 vmware-authd
    298      32    24280      19968       1.23   2284   0 vmware-hostd
     86      10     1352       1112       0.00   5036   1 vmware-tray
    162      12     2064       1568       0.00   1696   0 vmware-usbarbitrator64
    225      18     2644       3116       0.03   5012   1 wfcrun32
     79       8     1112       1028       0.00   4772   1 WZQKPICK


PS C:\Windows\system32> Get-Process|Where-Object{$_.WS -lt 100}
PS C:\Windows\system32> Get-Process|Where-Object{$_.WS -lt "100"}
PS C:\Windows\system32> Get-Process|Where-Object{$_.WorkingSet -lt "100"}
PS C:\Windows\system32> Get-Process|Where-Object{$_.WorkingSet -lt "100KB"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
      0       0        0          4                 0   0 Idle


PS C:\Windows\system32> Get-Process|Where-Object{$_.WorkingSet -lt "100000"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
      0       0        0          4                 0   0 Idle


PS C:\Windows\system32> Get-Process|Where-Object{$_.WorkingSet -lt "1000000"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
     81       7     1020        748       0.00   1356   0 armsvc
    113       8     1376        960       0.00   4840   0 GoogleCrashHandler
    108       7     1296        316       0.00   4848   0 GoogleCrashHandler64
      0       0        0          4                 0   0 Idle
     93       8     1240        976       0.02   1564   0 IPROSetMonitor
     80       5      872        576       0.00   1860   0 MSOIDSVCM
     54       7      992        632       0.00   1752   0 PassThruSvr
     44       2      272        220       0.19    316   0 smss
    103      10     1320        904       0.05   2820   0 svchost
   1457       0      108        424   5,481.13      4   0 System
     74       8      812        584       0.03    556   0 wininit
    149       8     1432        944       0.00    600   1 winlogon


PS C:\Windows\system32> Get-Process|Where-Object{$_.WorkingSet -lt "1000000"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
     81       7     1020        748       0.00   1356   0 armsvc
    113       8     1376        960       0.00   4840   0 GoogleCrashHandler
    108       7     1296        316       0.00   4848   0 GoogleCrashHandler64
      0       0        0          4                 0   0 Idle
     93       8     1240        976       0.02   1564   0 IPROSetMonitor
     80       5      872        576       0.00   1860   0 MSOIDSVCM
     54       7      992        632       0.00   1752   0 PassThruSvr
     44       2      272        220       0.19    316   0 smss
    103      10     1320        904       0.05   2820   0 svchost
   1457       0      108        424   5,481.13      4   0 System
     74       8      812        584       0.03    556   0 wininit
    149       8     1432        944       0.00    600   1 winlogon


PS C:\Windows\system32> Get-Process|Where-Object{$_.WorkingSet -lt "100000"}

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName
-------  ------    -----      -----     ------     --  -- -----------
      0       0        0          4                 0   0 Idle


PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PrivateMemorySize}}

       PM
       --
 11943936
 13012992
  1044480
 76759040
 54808576
294641664
 50319360
 55926784
 54853632
 15347712
  1552384
  1515520
 58241024
 41533440
 60174336
 13230080
  1798144
  1966080
  1732608
  2371584
  6692864
  1208320
 17956864
 11464704
 76021760
  1409024
  1327104
 34131968
 33296384
 24776704
        0
  1400832
  3330048
  1269760
  6307840
 57311232
  2920448
   892928
  2228224
  1413120
  1015808
 52252672
371871744
 33959936
  3792896
   278528
  3448832
  2990080
  1458176
 13942784
  4870144
 10035200
  4440064
 17862656
 34754560
  9658368
 16621568
  3362816
  1880064
  1351680
  8089600
  5824512
 10051584
   110592
  9760768
  5595136
  2850816
  1658880
  1638400
  3837952
 24862720
  1384448
  2113536
  2707456
   831488
  1466368
  3473408
  7102464
  1138688


PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PrivateMemorySize.ToByte()}} 

PM
--
















































































PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PrivateMemorySize.ToInt16()}} 

PM
--















































































PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PrivateMemorySize/1MB}} 

          PM
          --
   11.390625
 12.41015625
  0.99609375
   73.203125
 52.26953125
 281.1796875
 47.98828125
  53.3359375
     52.3125
 14.63671875
  1.48046875
   1.4453125
  55.6015625
   39.609375
 57.38671875
  12.6171875
  1.71484375
       1.875
  1.65234375
  2.26171875
   6.3828125
  1.15234375
      17.125
 10.93359375
   72.828125
     1.34375
    1.265625
   32.703125
 31.75390625
 23.62890625
           0
   1.3359375
  3.17578125
   1.2109375
  5.95703125
 54.49609375
  2.78515625
   0.8515625
       2.125
  1.34765625
     0.96875
 49.83203125
355.73828125
 32.18359375
    3.515625
    0.265625
   3.2890625
    1.390625
 13.62109375
     4.59375
  9.47265625
  4.23828125
 17.40234375
      34.125
   9.2109375
  15.8515625
  3.20703125
  1.79296875
   1.2890625
    7.390625
   5.5546875
 16.97265625
  0.10546875
    9.359375
   5.3359375
      1.5625
  3.66015625
  23.7109375
   1.3203125
    2.015625
  2.58203125
  0.79296875
   1.3984375
   2.4296875
     6.84375
   1.0859375


PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PM/1MB}} 

          PM
          --
   11.390625
 12.41015625
  0.99609375
   73.203125
 52.26953125
 281.3359375
 47.98828125
  53.3359375
     52.3125
  14.7109375
  1.48046875
   1.4453125
      55.625
   39.609375
 57.38671875
  12.6171875
  1.71484375
       1.875
  1.65234375
  2.26171875
   6.3828125
  1.15234375
      17.125
 10.93359375
   72.828125
     1.34375
    1.265625
    31.15625
 31.75390625
 23.62890625
           0
   1.3359375
  3.17578125
   1.2109375
   5.8203125
    54.34375
  2.78515625
   0.8515625
       2.125
  1.34765625
     0.96875
 49.83203125
355.20703125
 32.18359375
  3.36328125
    0.265625
   3.2890625
    1.390625
 13.62109375
  4.54296875
  9.47265625
  4.17578125
  16.9921875
 34.01953125
  9.16015625
  15.8515625
  3.20703125
  1.79296875
   1.2890625
    7.390625
   5.5546875
  16.9140625
  0.10546875
   9.2578125
   5.3359375
      1.5625
  3.66015625
  23.7109375
   1.3203125
    2.015625
  2.58203125
  0.79296875
   1.3984375
  1.99609375
  6.80078125
   1.0859375


PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PM/1MB}} | Sort-Object -Property PM

          PM
          --
           0
  0.10546875
    0.265625
  0.79296875
   0.8515625
     0.96875
  0.99609375
   1.0859375
  1.15234375
   1.2109375
    1.265625
   1.2890625
   1.3203125
   1.3359375
     1.34375
  1.34765625
    1.390625
   1.3984375
   1.4453125
  1.48046875
      1.5625
  1.65234375
  1.71484375
  1.79296875
       1.875
    2.015625
       2.125
  2.26171875
  2.58203125
  2.78515625
  3.17578125
  3.20703125
   3.2890625
  3.36328125
  3.66015625
  4.11328125
  4.54296875
  5.29296875
   5.3359375
  5.75390625
   6.3828125
   6.7734375
   7.4453125
  9.16015625
   9.2578125
  9.38671875
 10.93359375
   11.390625
 12.41015625
  12.6171875
   13.671875
 14.66796875
 16.37890625
 16.90234375
  16.9921875
      17.125
 23.62890625
  23.7109375
 31.75390625
 32.18359375
 32.69921875
 33.45703125
   39.609375
 47.98828125
 49.83203125
 52.26953125
     52.3125
  53.3359375
 53.61328125
      55.625
 57.38671875
 72.85546875
   73.203125
  281.296875
356.53515625


PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PM/1MB}} | Sort-Object -Property PM -Descending

          PM
          --
     359.375
281.37109375
   73.203125
  72.9296875
 57.38671875
 55.66015625
  53.3359375
 53.31640625
     52.3125
 52.26953125
 49.83203125
 47.98828125
   39.609375
 33.39453125
 32.18359375
 31.75390625
 29.91015625
  23.7109375
 23.62890625
      17.125
    17.09375
  16.8515625
 16.37890625
 14.63671875
 13.62109375
  12.6171875
 12.41015625
   11.390625
 10.93359375
  9.42578125
   9.2578125
  9.16015625
    7.546875
   6.7734375
   6.3828125
  5.75390625
   5.3359375
    5.296875
  4.54296875
  4.21484375
  3.66015625
  3.36328125
   3.2890625
  3.20703125
  3.17578125
  2.78515625
  2.58203125
  2.26171875
       2.125
    2.015625
       1.875
  1.79296875
  1.71484375
  1.65234375
      1.5625
  1.48046875
   1.4453125
   1.3984375
    1.390625
  1.34765625
     1.34375
   1.3359375
   1.3203125
   1.2890625
    1.265625
   1.2109375
  1.15234375
   1.0859375
  0.99609375
     0.96875
   0.8515625
  0.79296875
    0.265625
  0.10546875
           0


PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PM/1MB}} | Sort-Object -Property PM -Descending | select -first 10

         PM
         --
 358.578125
281.1015625
 73.2890625
  73.203125
57.38671875
 55.5859375
 53.3359375
53.26171875
    52.3125
52.26953125


PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Property PM -Descending | select -first 10
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (armsvc):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (armsvc):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AsrAPPShop):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AsrAPPShop):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...ctAgentUpdater):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...ctAgentUpdater):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...onAgentService):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...onAgentService):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (concentr):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (concentr):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (conhost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (conhost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dasHost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dasHost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dllhost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dllhost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dwm):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dwm):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (EXCEL):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (EXCEL):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (explorer):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (explorer):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...leCrashHandler):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...leCrashHandler):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...CrashHandler64):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...CrashHandler64):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(HealthService):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(HealthService):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...StorDataMgrSvc):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...StorDataMgrSvc):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (IAStorIcon):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (IAStorIcon):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (Idle):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (Idle):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...igfxCUIService):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...igfxCUIService):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (igfxEM):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (igfxEM):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...IPROSetMonitor):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...IPROSetMonitor):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (lsass):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (lsass):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...MonitoringHost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...MonitoringHost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVC):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVC):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVCM):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVCM):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (mvmcP2VAgent):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (mvmcP2VAgent):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (notepad):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (notepad):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (PassThruSvr):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (PassThruSvr):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (powershell):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (powershell):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...powershell_ise):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...powershell_ise):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(SearchIndexer):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(SearchIndexer):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (services):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (services):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (smss):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (smss):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (spoolsv):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (spoolsv):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (sqlwriter):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (sqlwriter):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (System):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (System):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (taskhostex):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (taskhostex):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...Viewer_Service):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...Viewer_Service):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (vmnat):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (vmnat):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},* | Sort-Object -Prop ...
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (vmware-authd):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
>> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
PS C:\Windows\system32> Get-Process| select @{label='PM';e={$_.PM/1MB}},*
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand



PM                         : 11.390625
Name                       : AnyDesk
Id                         : 1384
PriorityClass              : High
FileVersion                : 4.2.3.0
HandleCount                : 209
WorkingSet                 : 12804096
PagedMemorySize            : 11943936
PrivateMemorySize          : 11943936
VirtualMemorySize          : 84082688
TotalProcessorTime         : 00:00:00.5312500
SI                         : 0
Handles                    : 209
VM                         : 84082688
WS                         : 12804096
NPM                        : 16032
Path                       : C:\Program Files (x86)\AnyDesk\AnyDesk.exe
Company                    : philandro Software GmbH
CPU                        : 0.53125
ProductVersion             : 4.2
Description                : AnyDesk
Product                    : AnyDesk
__NounName                 : Process
BasePriority               : 13
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4420
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (AnyDesk.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (AnyDesk.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 16032
NonpagedSystemMemorySize64 : 16032
PagedMemorySize64          : 11943936
PagedSystemMemorySize      : 149112
PagedSystemMemorySize64    : 149112
PeakPagedMemorySize        : 15962112
PeakPagedMemorySize64      : 15962112
PeakWorkingSet             : 17952768
PeakWorkingSet64           : 17952768
PeakVirtualMemorySize      : 112992256
PeakVirtualMemorySize64    : 112992256
PriorityBoostEnabled       : True
PrivateMemorySize64        : 11943936
PrivilegedProcessorTime    : 00:00:00.1250000
ProcessName                : AnyDesk
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:38 AM
SynchronizingObject        :
Threads                    : {1388, 1424}
UserProcessorTime          : 00:00:00.4062500
VirtualMemorySize64        : 84082688
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 12804096
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AnyDesk):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 12.41015625
Name                       : AnyDesk
Id                         : 4764
PriorityClass              : Normal
FileVersion                : 4.2.3.0
HandleCount                : 177
WorkingSet                 : 11120640
PagedMemorySize            : 13012992
PrivateMemorySize          : 13012992
VirtualMemorySize          : 106131456
TotalProcessorTime         : 00:00:00.2343750
SI                         : 1
Handles                    : 177
VM                         : 106131456
WS                         : 11120640
NPM                        : 15216
Path                       : C:\Program Files (x86)\AnyDesk\AnyDesk.exe
Company                    : philandro Software GmbH
CPU                        : 0.234375
ProductVersion             : 4.2
Description                : AnyDesk
Product                    : AnyDesk
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4376
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (AnyDesk.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (AnyDesk.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 15216
NonpagedSystemMemorySize64 : 15216
PagedMemorySize64          : 13012992
PagedSystemMemorySize      : 200616
PagedSystemMemorySize64    : 200616
PeakPagedMemorySize        : 15962112
PeakPagedMemorySize64      : 15962112
PeakWorkingSet             : 18898944
PeakWorkingSet64           : 18898944
PeakVirtualMemorySize      : 108777472
PeakVirtualMemorySize64    : 108777472
PriorityBoostEnabled       : True
PrivateMemorySize64        : 13012992
PrivilegedProcessorTime    : 00:00:00.0312500
ProcessName                : AnyDesk
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:27 AM
SynchronizingObject        :
Threads                    : {4768, 4868, 4888, 4892...}
UserProcessorTime          : 00:00:00.2031250
VirtualMemorySize64        : 106131456
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 11120640
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (armsvc):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (armsvc):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 0.99609375
Name                       : armsvc
Id                         : 1356
PriorityClass              : Normal
FileVersion                : 1.824.31.1644
HandleCount                : 81
WorkingSet                 : 770048
PagedMemorySize            : 1044480
PrivateMemorySize          : 1044480
VirtualMemorySize          : 46202880
TotalProcessorTime         : 00:00:00
SI                         : 0
Handles                    : 81
VM                         : 46202880
WS                         : 770048
NPM                        : 7136
Path                       : C:\Program Files (x86)\Common Files\Adobe\ARM\1.0\armsvc.exe
Company                    : Adobe Systems Incorporated
CPU                        : 0
ProductVersion             : 1.824.31.1644
Description                : Adobe Acrobat Update Service
Product                    : Adobe Acrobat Update Service
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 3020
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (armsvc.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (armsvc.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 7136
NonpagedSystemMemorySize64 : 7136
PagedMemorySize64          : 1044480
PagedSystemMemorySize      : 93208
PagedSystemMemorySize64    : 93208
PeakPagedMemorySize        : 1265664
PeakPagedMemorySize64      : 1265664
PeakWorkingSet             : 4399104
PeakWorkingSet64           : 4399104
PeakVirtualMemorySize      : 50171904
PeakVirtualMemorySize64    : 50171904
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1044480
PrivilegedProcessorTime    : 00:00:00
ProcessName                : armsvc
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:37 AM
SynchronizingObject        :
Threads                    : {1360, 1376}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 46202880
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 770048
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AsrAPPShop):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (AsrAPPShop):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 73.203125
Name                       : AsrAPPShop
Id                         : 3760
PriorityClass              : BelowNormal
FileVersion                : 1.0.21.0
HandleCount                : 237
WorkingSet                 : 1454080
PagedMemorySize            : 76759040
PrivateMemorySize          : 76759040
VirtualMemorySize          : 219713536
TotalProcessorTime         : 00:00:01.1406250
SI                         : 1
Handles                    : 237
VM                         : 219713536
WS                         : 1454080
NPM                        : 66080
Path                       : C:\Program Files (x86)\ASRock Utility\APP Shop\AsrAPPShop.exe
Company                    :
CPU                        : 1.140625
ProductVersion             : 1.0.0.0
Description                : APPShop
Product                    : ASRock APP Shop
__NounName                 : Process
BasePriority               : 6
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 3720
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (AsrAPPShop.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (AsrAPPShop.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 66080
NonpagedSystemMemorySize64 : 66080
PagedMemorySize64          : 76759040
PagedSystemMemorySize      : 291928
PagedSystemMemorySize64    : 291928
PeakPagedMemorySize        : 82722816
PeakPagedMemorySize64      : 82722816
PeakWorkingSet             : 92205056
PeakWorkingSet64           : 92205056
PeakVirtualMemorySize      : 232669184
PeakVirtualMemorySize64    : 232669184
PriorityBoostEnabled       : True
PrivateMemorySize64        : 76759040
PrivilegedProcessorTime    : 00:00:00.1250000
ProcessName                : AsrAPPShop
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:09 AM
SynchronizingObject        :
Threads                    : {3764, 1208, 5024, 4196}
UserProcessorTime          : 00:00:01.0156250
VirtualMemorySize64        : 219713536
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1454080
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...ctAgentUpdater):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...ctAgentUpdater):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 52.26953125
Name                       : AzureADConnectAgentUpdater
Id                         : 3900
PriorityClass              : Normal
FileVersion                : 1.5.388.0
HandleCount                : 506
WorkingSet                 : 11931648
PagedMemorySize            : 54808576
PrivateMemorySize          : 54808576
VirtualMemorySize          : 1422209024
TotalProcessorTime         : 00:00:00.3593750
SI                         : 0
Handles                    : 506
VM                         : 18602078208
WS                         : 11931648
NPM                        : 28520
Path                       : C:\Program Files\Microsoft Azure AD Connect Agent Updater\AzureADConnectAgentUpdater.exe
Company                    :
CPU                        : 0.359375
ProductVersion             : 1.5.388.0
Description                : Microsoft.Azure.ADConnect.AgentUpdater.Service
Product                    :
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4304
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (AzureADConnectAgentUpdater.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (AzureADConnectAgentUpdater.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (MSCOREE.DLL),
                             System.Diagnostics.ProcessModule (KERNEL32.dll)...}
NonpagedSystemMemorySize   : 28520
NonpagedSystemMemorySize64 : 28520
PagedMemorySize64          : 54808576
PagedSystemMemorySize      : 301560
PagedSystemMemorySize64    : 301560
PeakPagedMemorySize        : 55013376
PeakPagedMemorySize64      : 55013376
PeakWorkingSet             : 28491776
PeakWorkingSet64           : 28491776
PeakVirtualMemorySize      : 1460310016
PeakVirtualMemorySize64    : 18640179200
PriorityBoostEnabled       : True
PrivateMemorySize64        : 54808576
PrivilegedProcessorTime    : 00:00:00.1406250
ProcessName                : AzureADConnectAgentUpdater
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:46:03 AM
SynchronizingObject        :
Threads                    : {4708, 4448, 4152, 2656...}
UserProcessorTime          : 00:00:00.2187500
VirtualMemorySize64        : 18602078208
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 11931648
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...onAgentService):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...onAgentService):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 281.2265625
Name                       : AzureADConnectAuthenticationAgentService
Id                         : 1796
PriorityClass              : Normal
FileVersion                : 1.5.1007.0
HandleCount                : 1008
WorkingSet                 : 85995520
PagedMemorySize            : 294887424
PrivateMemorySize          : 294887424
VirtualMemorySize          : 1563148288
TotalProcessorTime         : 00:00:02.2812500
SI                         : 0
Handles                    : 1008
VM                         : 18743017472
WS                         : 85995520
NPM                        : 53208
Path                       : C:\Program Files\Microsoft Azure AD Connect Authentication Agent\AzureADConnectAuthenticationAgentService.exe
Company                    :
CPU                        : 2.28125
ProductVersion             : 1.5.1007.0
Description                : Microsoft.HybridIdentity.Connector.PtaAgentService
Product                    :
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 1764
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (AzureADConnectAuthenticationAgentService.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (AzureADConnectAuthenticationAgentService.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (MSCOREE.DLL),
                             System.Diagnostics.ProcessModule (KERNEL32.dll)...}
NonpagedSystemMemorySize   : 53208
NonpagedSystemMemorySize64 : 53208
PagedMemorySize64          : 294887424
PagedSystemMemorySize      : 481440
PagedSystemMemorySize64    : 481440
PeakPagedMemorySize        : 299921408
PeakPagedMemorySize64      : 299921408
PeakWorkingSet             : 139841536
PeakWorkingSet64           : 139841536
PeakVirtualMemorySize      : 1592582144
PeakVirtualMemorySize64    : 18772451328
PriorityBoostEnabled       : True
PrivateMemorySize64        : 294887424
PrivilegedProcessorTime    : 00:00:00.3593750
ProcessName                : AzureADConnectAuthenticationAgentService
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:46:04 AM
SynchronizingObject        :
Threads                    : {4732, 3648, 1512, 3584...}
UserProcessorTime          : 00:00:01.9218750
VirtualMemorySize64        : 18743017472
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 85995520
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 47.98828125
Name                       : chrome
Id                         : 104
PriorityClass              : Normal
FileVersion                : 72.0.3626.121
HandleCount                : 388
WorkingSet                 : 39747584
PagedMemorySize            : 50319360
PrivateMemorySize          : 50319360
VirtualMemorySize          : 479682560
TotalProcessorTime         : 00:00:31.2656250
SI                         : 1
Handles                    : 388
VM                         : 2199502938112
WS                         : 39747584
NPM                        : 27696
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 31.265625
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4684
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 27696
NonpagedSystemMemorySize64 : 27696
PagedMemorySize64          : 50319360
PagedSystemMemorySize      : 729440
PagedSystemMemorySize64    : 729440
PeakPagedMemorySize        : 191041536
PeakPagedMemorySize64      : 191041536
PeakWorkingSet             : 74883072
PeakWorkingSet64           : 74883072
PeakVirtualMemorySize      : 562995200
PeakVirtualMemorySize64    : 2199586250752
PriorityBoostEnabled       : True
PrivateMemorySize64        : 50319360
PrivilegedProcessorTime    : 00:00:11.8593750
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:44 AM
SynchronizingObject        :
Threads                    : {3052, 2632, 3192, 3168...}
UserProcessorTime          : 00:00:19.4062500
VirtualMemorySize64        : 2199502938112
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 39747584
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 53.3359375
Name                       : chrome
Id                         : 1572
PriorityClass              : Idle
FileVersion                : 72.0.3626.121
HandleCount                : 455
WorkingSet                 : 44437504
PagedMemorySize            : 55926784
PrivateMemorySize          : 55926784
VirtualMemorySize          : 671113216
TotalProcessorTime         : 00:00:08.2812500
SI                         : 1
Handles                    : 455
VM                         : 2199694368768
WS                         : 44437504
NPM                        : 34784
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 8.28125
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5024
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 34784
NonpagedSystemMemorySize64 : 34784
PagedMemorySize64          : 55926784
PagedSystemMemorySize      : 549656
PagedSystemMemorySize64    : 549656
PeakPagedMemorySize        : 66199552
PeakPagedMemorySize64      : 66199552
PeakWorkingSet             : 95301632
PeakWorkingSet64           : 95301632
PeakVirtualMemorySize      : 739786752
PeakVirtualMemorySize64    : 2199763042304
PriorityBoostEnabled       : True
PrivateMemorySize64        : 55926784
PrivilegedProcessorTime    : 00:00:00.5937500
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 01:39:39 PM
SynchronizingObject        :
Threads                    : {3996, 872, 3524, 4832...}
UserProcessorTime          : 00:00:07.6875000
VirtualMemorySize64        : 2199694368768
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 44437504
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 52.3125
Name                       : chrome
Id                         : 2176
PriorityClass              : Idle
FileVersion                : 72.0.3626.121
HandleCount                : 327
WorkingSet                 : 38457344
PagedMemorySize            : 54853632
PrivateMemorySize          : 54853632
VirtualMemorySize          : 650702848
TotalProcessorTime         : 00:00:07.0156250
SI                         : 1
Handles                    : 327
VM                         : 2199673958400
WS                         : 38457344
NPM                        : 30944
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 7.015625
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4944
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 30944
NonpagedSystemMemorySize64 : 30944
PagedMemorySize64          : 54853632
PagedSystemMemorySize      : 502624
PagedSystemMemorySize64    : 502624
PeakPagedMemorySize        : 65712128
PeakPagedMemorySize64      : 65712128
PeakWorkingSet             : 85716992
PeakWorkingSet64           : 85716992
PeakVirtualMemorySize      : 700522496
PeakVirtualMemorySize64    : 2199723778048
PriorityBoostEnabled       : True
PrivateMemorySize64        : 54853632
PrivilegedProcessorTime    : 00:00:00.4687500
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 10:54:50 AM
SynchronizingObject        :
Threads                    : {5648, 5080, 2688, 6080...}
UserProcessorTime          : 00:00:06.5468750
VirtualMemorySize64        : 2199673958400
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 38457344
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 14.63671875
Name                       : chrome
Id                         : 2208
PriorityClass              : Normal
FileVersion                : 72.0.3626.121
HandleCount                : 398
WorkingSet                 : 19709952
PagedMemorySize            : 15347712
PrivateMemorySize          : 15347712
VirtualMemorySize          : 267952128
TotalProcessorTime         : 00:00:05.0937500
SI                         : 1
Handles                    : 398
VM                         : 2199291207680
WS                         : 19709952
NPM                        : 22288
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 5.09375
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4152
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 22288
NonpagedSystemMemorySize64 : 22288
PagedMemorySize64          : 15347712
PagedSystemMemorySize      : 465704
PagedSystemMemorySize64    : 465704
PeakPagedMemorySize        : 18595840
PeakPagedMemorySize64      : 18595840
PeakWorkingSet             : 36143104
PeakWorkingSet64           : 36143104
PeakVirtualMemorySize      : 309821440
PeakVirtualMemorySize64    : 2199333076992
PriorityBoostEnabled       : True
PrivateMemorySize64        : 15347712
PrivilegedProcessorTime    : 00:00:02
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:44 AM
SynchronizingObject        :
Threads                    : {1996, 2492, 3532, 4296...}
UserProcessorTime          : 00:00:03.0937500
VirtualMemorySize64        : 2199291207680
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 19709952
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.48046875
Name                       : chrome
Id                         : 3408
PriorityClass              : Normal
FileVersion                : 72.0.3626.121
HandleCount                : 153
WorkingSet                 : 1638400
PagedMemorySize            : 1552384
PrivateMemorySize          : 1552384
VirtualMemorySize          : 86372352
TotalProcessorTime         : 00:00:00.0468750
SI                         : 1
Handles                    : 153
VM                         : 2199109627904
WS                         : 1638400
NPM                        : 9200
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 0.046875
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5068
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 9200
NonpagedSystemMemorySize64 : 9200
PagedMemorySize64          : 1552384
PagedSystemMemorySize      : 146384
PagedSystemMemorySize64    : 146384
PeakPagedMemorySize        : 1601536
PeakPagedMemorySize64      : 1601536
PeakWorkingSet             : 5566464
PeakWorkingSet64           : 5566464
PeakVirtualMemorySize      : 88477696
PeakVirtualMemorySize64    : 2199111733248
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1552384
PrivilegedProcessorTime    : 00:00:00.0156250
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:43 AM
SynchronizingObject        :
Threads                    : {812, 2088, 828, 3404...}
UserProcessorTime          : 00:00:00.0312500
VirtualMemorySize64        : 2199109627904
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1638400
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.4453125
Name                       : chrome
Id                         : 3412
PriorityClass              : Normal
FileVersion                : 72.0.3626.121
HandleCount                : 91
WorkingSet                 : 1163264
PagedMemorySize            : 1515520
PrivateMemorySize          : 1515520
VirtualMemorySize          : 82481152
TotalProcessorTime         : 00:00:00.0156250
SI                         : 1
Handles                    : 91
VM                         : 2199105736704
WS                         : 1163264
NPM                        : 8816
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 0.015625
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5072
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 8816
NonpagedSystemMemorySize64 : 8816
PagedMemorySize64          : 1515520
PagedSystemMemorySize      : 153072
PagedSystemMemorySize64    : 153072
PeakPagedMemorySize        : 2252800
PeakPagedMemorySize64      : 2252800
PeakWorkingSet             : 6135808
PeakWorkingSet64           : 6135808
PeakVirtualMemorySize      : 82481152
PeakVirtualMemorySize64    : 2199105736704
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1515520
PrivilegedProcessorTime    : 00:00:00.0156250
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:44 AM
SynchronizingObject        :
Threads                    : {3724, 3972}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 2199105736704
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1163264
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 55.6171875
Name                       : chrome
Id                         : 3692
PriorityClass              : Normal
FileVersion                : 72.0.3626.121
HandleCount                : 1054
WorkingSet                 : 62959616
PagedMemorySize            : 58318848
PrivateMemorySize          : 58318848
VirtualMemorySize          : 423628800
TotalProcessorTime         : 00:00:22.2031250
SI                         : 1
Handles                    : 1054
VM                         : 2199446884352
WS                         : 62959616
NPM                        : 53744
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 22.203125
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5104
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 262692
MainWindowTitle            : Stop-Process - Google Chrome
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 53744
NonpagedSystemMemorySize64 : 53744
PagedMemorySize64          : 58318848
PagedSystemMemorySize      : 651432
PagedSystemMemorySize64    : 651432
PeakPagedMemorySize        : 95883264
PeakPagedMemorySize64      : 95883264
PeakWorkingSet             : 125116416
PeakWorkingSet64           : 125116416
PeakVirtualMemorySize      : 564211712
PeakVirtualMemorySize64    : 2199587467264
PriorityBoostEnabled       : True
PrivateMemorySize64        : 58318848
PrivilegedProcessorTime    : 00:00:05.3906250
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:43 AM
SynchronizingObject        :
Threads                    : {1924, 4404, 3988, 4132...}
UserProcessorTime          : 00:00:16.8125000
VirtualMemorySize64        : 2199446884352
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 62959616
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 39.609375
Name                       : chrome
Id                         : 4252
PriorityClass              : Idle
FileVersion                : 72.0.3626.121
HandleCount                : 288
WorkingSet                 : 31858688
PagedMemorySize            : 41533440
PrivateMemorySize          : 41533440
VirtualMemorySize          : 464195584
TotalProcessorTime         : 00:00:05.5625000
SI                         : 1
Handles                    : 288
VM                         : 2199487451136
WS                         : 31858688
NPM                        : 26848
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 5.5625
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5136
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 26848
NonpagedSystemMemorySize64 : 26848
PagedMemorySize64          : 41533440
PagedSystemMemorySize      : 435984
PagedSystemMemorySize64    : 435984
PeakPagedMemorySize        : 60354560
PeakPagedMemorySize64      : 60354560
PeakWorkingSet             : 83828736
PeakWorkingSet64           : 83828736
PeakVirtualMemorySize      : 479850496
PeakVirtualMemorySize64    : 2199503106048
PriorityBoostEnabled       : True
PrivateMemorySize64        : 41533440
PrivilegedProcessorTime    : 00:00:00.6250000
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:45 AM
SynchronizingObject        :
Threads                    : {1508, 2420, 2324, 5112...}
UserProcessorTime          : 00:00:04.9375000
VirtualMemorySize64        : 2199487451136
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 31858688
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 57.38671875
Name                       : chrome
Id                         : 4584
PriorityClass              : Normal
FileVersion                : 72.0.3626.121
HandleCount                : 336
WorkingSet                 : 50921472
PagedMemorySize            : 60174336
PrivateMemorySize          : 60174336
VirtualMemorySize          : 659169280
TotalProcessorTime         : 00:00:24.6093750
SI                         : 1
Handles                    : 336
VM                         : 2199682424832
WS                         : 50921472
NPM                        : 32608
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 24.609375
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5196
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 32608
NonpagedSystemMemorySize64 : 32608
PagedMemorySize64          : 60174336
PagedSystemMemorySize      : 511480
PagedSystemMemorySize64    : 511480
PeakPagedMemorySize        : 63922176
PeakPagedMemorySize64      : 63922176
PeakWorkingSet             : 85946368
PeakWorkingSet64           : 85946368
PeakVirtualMemorySize      : 701509632
PeakVirtualMemorySize64    : 2199724765184
PriorityBoostEnabled       : True
PrivateMemorySize64        : 60174336
PrivilegedProcessorTime    : 00:00:01.3906250
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 01:49:53 PM
SynchronizingObject        :
Threads                    : {4488, 3444, 2684, 296...}
UserProcessorTime          : 00:00:23.2187500
VirtualMemorySize64        : 2199682424832
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 50921472
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (chrome):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 12.6171875
Name                       : chrome
Id                         : 5172
PriorityClass              : Idle
FileVersion                : 72.0.3626.121
HandleCount                : 207
WorkingSet                 : 12169216
PagedMemorySize            : 13230080
PrivateMemorySize          : 13230080
VirtualMemorySize          : 379060224
TotalProcessorTime         : 00:00:00.1093750
SI                         : 1
Handles                    : 207
VM                         : 2199402315776
WS                         : 12169216
NPM                        : 18656
Path                       : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
Company                    : Google Inc.
CPU                        : 0.109375
ProductVersion             : 72.0.3626.121
Description                : Google Chrome
Product                    : Google Chrome
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 2720
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (chrome.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (chrome.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 18656
NonpagedSystemMemorySize64 : 18656
PagedMemorySize64          : 13230080
PagedSystemMemorySize      : 395224
PagedSystemMemorySize64    : 395224
PeakPagedMemorySize        : 13291520
PeakPagedMemorySize64      : 13291520
PeakWorkingSet             : 19361792
PeakWorkingSet64           : 19361792
PeakVirtualMemorySize      : 379060224
PeakVirtualMemorySize64    : 2199402315776
PriorityBoostEnabled       : True
PrivateMemorySize64        : 13230080
PrivilegedProcessorTime    : 00:00:00.0937500
ProcessName                : chrome
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 01:49:55 PM
SynchronizingObject        :
Threads                    : {5676, 484, 5636, 1368...}
UserProcessorTime          : 00:00:00.0156250
VirtualMemorySize64        : 2199402315776
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 12169216
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (concentr):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (concentr):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.71484375
Name                       : concentr
Id                         : 4980
PriorityClass              : Normal
FileVersion                : 12.1.1.1
HandleCount                : 164
WorkingSet                 : 1921024
PagedMemorySize            : 1798144
PrivateMemorySize          : 1798144
VirtualMemorySize          : 84320256
TotalProcessorTime         : 00:00:00.0312500
SI                         : 1
Handles                    : 164
VM                         : 84320256
WS                         : 1921024
NPM                        : 11872
Path                       : C:\Program Files (x86)\Citrix\ICA Client\concentr.exe
Company                    : Citrix Systems, Inc.
CPU                        : 0.03125
ProductVersion             : 12.1.1
Description                : Citrix online plug-in Connection Center
Product                    : Citrix ICA Client
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5240
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (concentr.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (concentr.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 11872
NonpagedSystemMemorySize64 : 11872
PagedMemorySize64          : 1798144
PagedSystemMemorySize      : 166544
PagedSystemMemorySize64    : 166544
PeakPagedMemorySize        : 2027520
PeakPagedMemorySize64      : 2027520
PeakWorkingSet             : 7045120
PeakWorkingSet64           : 7045120
PeakVirtualMemorySize      : 88289280
PeakVirtualMemorySize64    : 88289280
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1798144
PrivilegedProcessorTime    : 00:00:00
ProcessName                : concentr
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:32 AM
SynchronizingObject        :
Threads                    : {4984, 4996, 5088}
UserProcessorTime          : 00:00:00.0312500
VirtualMemorySize64        : 84320256
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1921024
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (conhost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (conhost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.875
Name                       : conhost
Id                         : 4620
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 67
WorkingSet                 : 1757184
PagedMemorySize            : 1966080
PrivateMemorySize          : 1966080
VirtualMemorySize          : 59883520
TotalProcessorTime         : 00:00:00.0156250
SI                         : 1
Handles                    : 67
VM                         : 2199083139072
WS                         : 1757184
NPM                        : 7920
Path                       : C:\Windows\system32\conhost.exe
Company                    : Microsoft Corporation
CPU                        : 0.015625
ProductVersion             : 6.3.9600.16384
Description                : Console Window Host
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5260
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (conhost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (conhost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 7920
NonpagedSystemMemorySize64 : 7920
PagedMemorySize64          : 1966080
PagedSystemMemorySize      : 117320
PagedSystemMemorySize64    : 117320
PeakPagedMemorySize        : 2019328
PeakPagedMemorySize64      : 2019328
PeakWorkingSet             : 6012928
PeakWorkingSet64           : 6012928
PeakVirtualMemorySize      : 60153856
PeakVirtualMemorySize64    : 2199083409408
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1966080
PrivilegedProcessorTime    : 00:00:00.0156250
ProcessName                : conhost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:48 AM
SynchronizingObject        :
Threads                    : {3812, 4748}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 2199083139072
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1757184
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.65625
Name                       : csrss
Id                         : 476
PriorityClass              :
FileVersion                :
HandleCount                : 329
WorkingSet                 : 1691648
PagedMemorySize            : 1736704
PrivateMemorySize          : 1736704
VirtualMemorySize          : 51490816
TotalProcessorTime         : 00:00:01.3906250
SI                         : 0
Handles                    : 329
VM                         : 51490816
WS                         : 1691648
NPM                        : 14272
Path                       :
Company                    :
CPU                        : 1.390625
ProductVersion             :
Description                :
Product                    :
__NounName                 : Process
BasePriority               : 13
ExitCode                   :
HasExited                  :
ExitTime                   :
Handle                     :
SafeHandle                 :
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 :
MaxWorkingSet              :
MinWorkingSet              :
Modules                    :
NonpagedSystemMemorySize   : 14272
NonpagedSystemMemorySize64 : 14272
PagedMemorySize64          : 1736704
PagedSystemMemorySize      : 152352
PagedSystemMemorySize64    : 152352
PeakPagedMemorySize        : 1835008
PeakPagedMemorySize64      : 1835008
PeakWorkingSet             : 4136960
PeakWorkingSet64           : 4136960
PeakVirtualMemorySize      : 52473856
PeakVirtualMemorySize64    : 52473856
PriorityBoostEnabled       :
PrivateMemorySize64        : 1736704
PrivilegedProcessorTime    : 00:00:01.1406250
ProcessName                : csrss
ProcessorAffinity          :
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:19 AM
SynchronizingObject        :
Threads                    : {524, 528, 532, 536...}
UserProcessorTime          : 00:00:00.2500000
VirtualMemorySize64        : 51490816
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1691648
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (csrss):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 2.26171875
Name                       : csrss
Id                         : 548
PriorityClass              :
FileVersion                :
HandleCount                : 314
WorkingSet                 : 26193920
PagedMemorySize            : 2371584
PrivateMemorySize          : 2371584
VirtualMemorySize          : 95019008
TotalProcessorTime         : 00:00:04.3750000
SI                         : 1
Handles                    : 314
VM                         : 95019008
WS                         : 26193920
NPM                        : 23232
Path                       :
Company                    :
CPU                        : 4.375
ProductVersion             :
Description                :
Product                    :
__NounName                 : Process
BasePriority               : 13
ExitCode                   :
HasExited                  :
ExitTime                   :
Handle                     :
SafeHandle                 :
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 :
MaxWorkingSet              :
MinWorkingSet              :
Modules                    :
NonpagedSystemMemorySize   : 23232
NonpagedSystemMemorySize64 : 23232
PagedMemorySize64          : 2371584
PagedSystemMemorySize      : 240304
PagedSystemMemorySize64    : 240304
PeakPagedMemorySize        : 13180928
PeakPagedMemorySize64      : 13180928
PeakWorkingSet             : 49180672
PeakWorkingSet64           : 49180672
PeakVirtualMemorySize      : 100757504
PeakVirtualMemorySize64    : 100757504
PriorityBoostEnabled       :
PrivateMemorySize64        : 2371584
PrivilegedProcessorTime    : 00:00:04.0937500
ProcessName                : csrss
ProcessorAffinity          :
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:20 AM
SynchronizingObject        :
Threads                    : {564, 584, 588, 592...}
UserProcessorTime          : 00:00:00.2812500
VirtualMemorySize64        : 95019008
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 26193920
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dasHost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dasHost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 6.3828125
Name                       : dasHost
Id                         : 1520
PriorityClass              : Normal
FileVersion                : 6.3.9600.17415 (winblue_r4.141028-1500)
HandleCount                : 444
WorkingSet                 : 10510336
PagedMemorySize            : 6692864
PrivateMemorySize          : 6692864
VirtualMemorySize          : 84742144
TotalProcessorTime         : 00:00:00.6718750
SI                         : 0
Handles                    : 444
VM                         : 2199107997696
WS                         : 10510336
NPM                        : 18144
Path                       : C:\Windows\system32\dashost.exe
Company                    : Microsoft Corporation
CPU                        : 0.671875
ProductVersion             : 6.3.9600.17415
Description                : Device Association Framework Provider Host
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5340
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (dashost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (dashost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 18144
NonpagedSystemMemorySize64 : 18144
PagedMemorySize64          : 6692864
PagedSystemMemorySize      : 171216
PagedSystemMemorySize64    : 171216
PeakPagedMemorySize        : 7753728
PeakPagedMemorySize64      : 7753728
PeakWorkingSet             : 14794752
PeakWorkingSet64           : 14794752
PeakVirtualMemorySize      : 98054144
PeakVirtualMemorySize64    : 2199121309696
PriorityBoostEnabled       : True
PrivateMemorySize64        : 6692864
PrivilegedProcessorTime    : 00:00:00.2656250
ProcessName                : dasHost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:40 AM
SynchronizingObject        :
Threads                    : {1524, 3012, 3384}
UserProcessorTime          : 00:00:00.4062500
VirtualMemorySize64        : 2199107997696
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 10510336
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dllhost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dllhost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.15234375
Name                       : dllhost
Id                         : 4668
PriorityClass              : Normal
FileVersion                : 6.3.9600.17415 (winblue_r4.141028-1500)
HandleCount                : 90
WorkingSet                 : 1019904
PagedMemorySize            : 1208320
PrivateMemorySize          : 1208320
VirtualMemorySize          : 31363072
TotalProcessorTime         : 00:00:00.0156250
SI                         : 0
Handles                    : 90
VM                         : 2199054618624
WS                         : 1019904
NPM                        : 6512
Path                       : C:\Windows\system32\DllHost.exe
Company                    : Microsoft Corporation
CPU                        : 0.015625
ProductVersion             : 6.3.9600.17415
Description                : COM Surrogate
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5412
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (DllHost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (DllHost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 6512
NonpagedSystemMemorySize64 : 6512
PagedMemorySize64          : 1208320
PagedSystemMemorySize      : 58624
PagedSystemMemorySize64    : 58624
PeakPagedMemorySize        : 1372160
PeakPagedMemorySize64      : 1372160
PeakWorkingSet             : 5877760
PeakWorkingSet64           : 5877760
PeakVirtualMemorySize      : 34533376
PeakVirtualMemorySize64    : 2199057788928
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1208320
PrivilegedProcessorTime    : 00:00:00.0156250
ProcessName                : dllhost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:25 AM
SynchronizingObject        :
Threads                    : {4672, 4688, 4704}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 2199054618624
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1019904
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dwm):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (dwm):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 17.125
Name                       : dwm
Id                         : 860
PriorityClass              : High
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 173
WorkingSet                 : 22822912
PagedMemorySize            : 17956864
PrivateMemorySize          : 17956864
VirtualMemorySize          : 215621632
TotalProcessorTime         : 00:00:45.5625000
SI                         : 1
Handles                    : 173
VM                         : 2199238877184
WS                         : 22822912
NPM                        : 21104
Path                       : C:\Windows\system32\dwm.exe
Company                    : Microsoft Corporation
CPU                        : 45.5625
ProductVersion             : 6.3.9600.16384
Description                : Desktop Window Manager
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 13
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5244
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (dwm.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (dwm.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 21104
NonpagedSystemMemorySize64 : 21104
PagedMemorySize64          : 17956864
PagedSystemMemorySize      : 411800
PagedSystemMemorySize64    : 411800
PeakPagedMemorySize        : 19341312
PeakPagedMemorySize64      : 19341312
PeakWorkingSet             : 33550336
PeakWorkingSet64           : 33550336
PeakVirtualMemorySize      : 221569024
PeakVirtualMemorySize64    : 2199244824576
PriorityBoostEnabled       : True
PrivateMemorySize64        : 17956864
PrivilegedProcessorTime    : 00:00:19.0468750
ProcessName                : dwm
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:28 AM
SynchronizingObject        :
Threads                    : {864, 892, 900, 912...}
UserProcessorTime          : 00:00:26.5156250
VirtualMemorySize64        : 2199238877184
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 22822912
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (EXCEL):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (EXCEL):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 10.93359375
Name                       : EXCEL
Id                         : 4880
PriorityClass              : Normal
FileVersion                : 12.0.4518.1014
HandleCount                : 415
WorkingSet                 : 16801792
PagedMemorySize            : 11464704
PrivateMemorySize          : 11464704
VirtualMemorySize          : 208056320
TotalProcessorTime         : 00:00:01.6093750
SI                         : 1
Handles                    : 415
VM                         : 208056320
WS                         : 16801792
NPM                        : 30688
Path                       : C:\Program Files (x86)\Microsoft Office\Office12\EXCEL.EXE
Company                    : Microsoft Corporation
CPU                        : 1.609375
ProductVersion             : 12.0.4518.1014
Description                : Microsoft Office Excel
Product                    : 2007 Microsoft Office system
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5476
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 1115002
MainWindowTitle            : Microsoft Excel - process.csv
MainModule                 : System.Diagnostics.ProcessModule (EXCEL.EXE)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (EXCEL.EXE), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 30688
NonpagedSystemMemorySize64 : 30688
PagedMemorySize64          : 11464704
PagedSystemMemorySize      : 393024
PagedSystemMemorySize64    : 393024
PeakPagedMemorySize        : 12988416
PeakPagedMemorySize64      : 12988416
PeakWorkingSet             : 26124288
PeakWorkingSet64           : 26124288
PeakVirtualMemorySize      : 224837632
PeakVirtualMemorySize64    : 224837632
PriorityBoostEnabled       : True
PrivateMemorySize64        : 11464704
PrivilegedProcessorTime    : 00:00:00.6562500
ProcessName                : EXCEL
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 02:24:22 PM
SynchronizingObject        :
Threads                    : {4600, 4328, 2660, 896...}
UserProcessorTime          : 00:00:00.9531250
VirtualMemorySize64        : 208056320
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 16801792
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (explorer):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (explorer):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 73.07421875
Name                       : explorer
Id                         : 3788
PriorityClass              : Normal
FileVersion                : 6.3.9600.17031 (winblue_gdr.140221-1952)
HandleCount                : 1876
WorkingSet                 : 85729280
PagedMemorySize            : 76623872
PrivateMemorySize          : 76623872
VirtualMemorySize          : 753614848
TotalProcessorTime         : 00:00:20.9375000
SI                         : 1
Handles                    : 1876
VM                         : 2199776870400
WS                         : 85729280
NPM                        : 124736
Path                       : C:\Windows\Explorer.EXE
Company                    : Microsoft Corporation
CPU                        : 20.9375
ProductVersion             : 6.3.9600.17031
Description                : Windows Explorer
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5540
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 65708
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (Explorer.EXE)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (Explorer.EXE), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 124736
NonpagedSystemMemorySize64 : 124736
PagedMemorySize64          : 76623872
PagedSystemMemorySize      : 1516608
PagedSystemMemorySize64    : 1516608
PeakPagedMemorySize        : 83910656
PeakPagedMemorySize64      : 83910656
PeakWorkingSet             : 134029312
PeakWorkingSet64           : 134029312
PeakVirtualMemorySize      : 810057728
PeakVirtualMemorySize64    : 2199833313280
PriorityBoostEnabled       : True
PrivateMemorySize64        : 76623872
PrivilegedProcessorTime    : 00:00:12.4218750
ProcessName                : explorer
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:09 AM
SynchronizingObject        :
Threads                    : {3792, 3932, 3936, 3948...}
UserProcessorTime          : 00:00:08.5156250
VirtualMemorySize64        : 2199776870400
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 85729280
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...leCrashHandler):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...leCrashHandler):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.34375
Name                       : GoogleCrashHandler
Id                         : 4840
PriorityClass              : Idle
FileVersion                : 1.3.33.23
HandleCount                : 113
WorkingSet                 : 987136
PagedMemorySize            : 1409024
PrivateMemorySize          : 1409024
VirtualMemorySize          : 49577984
TotalProcessorTime         : 00:00:00
SI                         : 0
Handles                    : 113
VM                         : 49577984
WS                         : 987136
NPM                        : 8576
Path                       : C:\Program Files (x86)\Google\Update\1.3.33.23\GoogleCrashHandler.exe
Company                    : Google Inc.
CPU                        : 0
ProductVersion             : 1.3.33.23
Description                : Google Crash Handler
Product                    : Google Update
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5600
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (GoogleCrashHandler.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (GoogleCrashHandler.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll),
                             System.Diagnostics.ProcessModule (wow64win.dll)...}
NonpagedSystemMemorySize   : 8576
NonpagedSystemMemorySize64 : 8576
PagedMemorySize64          : 1409024
PagedSystemMemorySize      : 97024
PagedSystemMemorySize64    : 97024
PeakPagedMemorySize        : 1556480
PeakPagedMemorySize64      : 1556480
PeakWorkingSet             : 4743168
PeakWorkingSet64           : 4743168
PeakVirtualMemorySize      : 52224000
PeakVirtualMemorySize64    : 52224000
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1409024
PrivilegedProcessorTime    : 00:00:00
ProcessName                : GoogleCrashHandler
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:40 AM
SynchronizingObject        :
Threads                    : {4908, 4728, 4724}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 49577984
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 987136
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...CrashHandler64):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...CrashHandler64):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.265625
Name                       : GoogleCrashHandler64
Id                         : 4848
PriorityClass              : Idle
FileVersion                : 1.3.33.23
HandleCount                : 108
WorkingSet                 : 327680
PagedMemorySize            : 1327104
PrivateMemorySize          : 1327104
VirtualMemorySize          : 54210560
TotalProcessorTime         : 00:00:00
SI                         : 0
Handles                    : 108
VM                         : 54210560
WS                         : 327680
NPM                        : 7552
Path                       : C:\Program Files (x86)\Google\Update\1.3.33.23\GoogleCrashHandler64.exe
Company                    : Google Inc.
CPU                        : 0
ProductVersion             : 1.3.33.23
Description                : Google Crash Handler
Product                    : Google Update
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5596
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (GoogleCrashHandler64.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (GoogleCrashHandler64.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL),
                             System.Diagnostics.ProcessModule (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 7552
NonpagedSystemMemorySize64 : 7552
PagedMemorySize64          : 1327104
PagedSystemMemorySize      : 104136
PagedSystemMemorySize64    : 104136
PeakPagedMemorySize        : 1396736
PeakPagedMemorySize64      : 1396736
PeakWorkingSet             : 4419584
PeakWorkingSet64           : 4419584
PeakVirtualMemorySize      : 56324096
PeakVirtualMemorySize64    : 56324096
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1327104
PrivilegedProcessorTime    : 00:00:00
ProcessName                : GoogleCrashHandler64
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:40 AM
SynchronizingObject        :
Threads                    : {4844, 764, 4712}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 54210560
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 327680
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(HealthService):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(HealthService):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 31.76953125
Name                       : HealthService
Id                         : 1492
PriorityClass              : Idle
FileVersion                : 10.19.10006.0
HandleCount                : 810
WorkingSet                 : 26411008
PagedMemorySize            : 33312768
PrivateMemorySize          : 33312768
VirtualMemorySize          : 1715654656
TotalProcessorTime         : 00:01:40.4218750
SI                         : 0
Handles                    : 810
VM                         : 1715654656
WS                         : 26411008
NPM                        : 30144
Path                       : C:\Program Files\Microsoft Monitoring Agent\Agent\HealthService.exe
Company                    : Microsoft Corp.
CPU                        : 100.421875
ProductVersion             : 10.19.10006.0
Description                : Microsoft Monitoring Agent Service
Product                    : Microsoft Monitoring Agent
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5524
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (HealthService.exe)
MaxWorkingSet              : 33554432
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (HealthService.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 30144
NonpagedSystemMemorySize64 : 30144
PagedMemorySize64          : 33312768
PagedSystemMemorySize      : 134904
PagedSystemMemorySize64    : 134904
PeakPagedMemorySize        : 38395904
PeakPagedMemorySize64      : 38395904
PeakWorkingSet             : 33554432
PeakWorkingSet64           : 33554432
PeakVirtualMemorySize      : 1726402560
PeakVirtualMemorySize64    : 1726402560
PriorityBoostEnabled       : True
PrivateMemorySize64        : 33312768
PrivilegedProcessorTime    : 00:00:15.7812500
ProcessName                : HealthService
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:40 AM
SynchronizingObject        :
Threads                    : {1496, 1832, 2584, 2588...}
UserProcessorTime          : 00:01:24.6406250
VirtualMemorySize64        : 1715654656
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 26411008
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...StorDataMgrSvc):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...StorDataMgrSvc):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 31.75390625
Name                       : IAStorDataMgrSvc
Id                         : 5292
PriorityClass              : Normal
FileVersion                : 14.6.0.1029
HandleCount                : 330
WorkingSet                 : 19738624
PagedMemorySize            : 33296384
PrivateMemorySize          : 33296384
VirtualMemorySize          : 229761024
TotalProcessorTime         : 00:00:00.9687500
SI                         : 0
Handles                    : 330
VM                         : 229761024
WS                         : 19738624
NPM                        : 27688
Path                       : C:\Program Files\Intel\Intel(R) Rapid Storage Technology\IAStorDataMgrSvc.exe
Company                    : Intel Corporation
CPU                        : 0.96875
ProductVersion             : 14.6.0.1029
Description                : IAStorDataSvc
Product                    : IAStorDataSvc
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5668
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (IAStorDataMgrSvc.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (IAStorDataMgrSvc.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 27688
NonpagedSystemMemorySize64 : 27688
PagedMemorySize64          : 33296384
PagedSystemMemorySize      : 385920
PagedSystemMemorySize64    : 385920
PeakPagedMemorySize        : 34807808
PeakPagedMemorySize64      : 34807808
PeakWorkingSet             : 44961792
PeakWorkingSet64           : 44961792
PeakVirtualMemorySize      : 242515968
PeakVirtualMemorySize64    : 242515968
PriorityBoostEnabled       : True
PrivateMemorySize64        : 33296384
PrivilegedProcessorTime    : 00:00:00.0937500
ProcessName                : IAStorDataMgrSvc
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:46:06 AM
SynchronizingObject        :
Threads                    : {5296, 5300, 5304, 5316...}
UserProcessorTime          : 00:00:00.8750000
VirtualMemorySize64        : 229761024
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 19738624
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (IAStorIcon):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (IAStorIcon):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 23.62890625
Name                       : IAStorIcon
Id                         : 2644
PriorityClass              : Normal
FileVersion                : 14.6.0.1029
HandleCount                : 255
WorkingSet                 : 7897088
PagedMemorySize            : 24776704
PrivateMemorySize          : 24776704
VirtualMemorySize          : 269074432
TotalProcessorTime         : 00:00:00.2031250
SI                         : 1
Handles                    : 255
VM                         : 269074432
WS                         : 7897088
NPM                        : 21064
Path                       : C:\Program Files\Intel\Intel(R) Rapid Storage Technology\IAStorIcon.exe
Company                    : Intel Corporation
CPU                        : 0.203125
ProductVersion             : 14.6.0.1029
Description                : IAStorIcon
Product                    : IAStorIcon
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5732
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (IAStorIcon.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (IAStorIcon.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 21064
NonpagedSystemMemorySize64 : 21064
PagedMemorySize64          : 24776704
PagedSystemMemorySize      : 455464
PagedSystemMemorySize64    : 455464
PeakPagedMemorySize        : 25464832
PeakPagedMemorySize64      : 25464832
PeakWorkingSet             : 30187520
PeakWorkingSet64           : 30187520
PeakVirtualMemorySize      : 282316800
PeakVirtualMemorySize64    : 282316800
PriorityBoostEnabled       : True
PrivateMemorySize64        : 24776704
PrivilegedProcessorTime    : 00:00:00.1093750
ProcessName                : IAStorIcon
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:25 AM
SynchronizingObject        :
Threads                    : {1920, 2648, 2640, 2768...}
UserProcessorTime          : 00:00:00.0937500
VirtualMemorySize64        : 269074432
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 7897088
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (Idle):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (Idle):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 0
Name                       : Idle
Id                         : 0
PriorityClass              :
FileVersion                :
HandleCount                : 0
WorkingSet                 : 4096
PagedMemorySize            : 0
PrivateMemorySize          : 0
VirtualMemorySize          : 65536
TotalProcessorTime         :
SI                         : 0
Handles                    : 0
VM                         : 65536
WS                         : 4096
NPM                        : 0
Path                       :
Company                    :
CPU                        :
ProductVersion             :
Description                :
Product                    :
__NounName                 : Process
BasePriority               : 0
ExitCode                   :
HasExited                  :
ExitTime                   :
Handle                     :
SafeHandle                 :
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 :
MaxWorkingSet              :
MinWorkingSet              :
Modules                    :
NonpagedSystemMemorySize   : 0
NonpagedSystemMemorySize64 : 0
PagedMemorySize64          : 0
PagedSystemMemorySize      : 0
PagedSystemMemorySize64    : 0
PeakPagedMemorySize        : 0
PeakPagedMemorySize64      : 0
PeakWorkingSet             : 4096
PeakWorkingSet64           : 4096
PeakVirtualMemorySize      : 65536
PeakVirtualMemorySize64    : 65536
PriorityBoostEnabled       :
PrivateMemorySize64        : 0
PrivilegedProcessorTime    :
ProcessName                : Idle
ProcessorAffinity          :
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  :
SynchronizingObject        :
Threads                    : {0, 0, 0, 0}
UserProcessorTime          :
VirtualMemorySize64        : 65536
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 4096
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...igfxCUIService):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...igfxCUIService):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.3359375
Name                       : igfxCUIService
Id                         : 304
PriorityClass              : Normal
FileVersion                : 6.15.10.4565
HandleCount                : 125
WorkingSet                 : 1114112
PagedMemorySize            : 1400832
PrivateMemorySize          : 1400832
VirtualMemorySize          : 41480192
TotalProcessorTime         : 00:00:00.0312500
SI                         : 0
Handles                    : 125
VM                         : 41480192
WS                         : 1114112
NPM                        : 8416
Path                       : C:\Windows\system32\igfxCUIService.exe
Company                    : Intel Corporation
CPU                        : 0.03125
ProductVersion             : 6.15.10.4565
Description                : igfxCUIService Module
Product                    : Intel(R) Common User Interface
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5888
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (igfxCUIService.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (igfxCUIService.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 8416
NonpagedSystemMemorySize64 : 8416
PagedMemorySize64          : 1400832
PagedSystemMemorySize      : 81440
PagedSystemMemorySize64    : 81440
PeakPagedMemorySize        : 1548288
PeakPagedMemorySize64      : 1548288
PeakWorkingSet             : 6328320
PeakWorkingSet64           : 6328320
PeakVirtualMemorySize      : 49549312
PeakVirtualMemorySize64    : 49549312
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1400832
PrivilegedProcessorTime    : 00:00:00.0312500
ProcessName                : igfxCUIService
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:30 AM
SynchronizingObject        :
Threads                    : {300, 344}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 41480192
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1114112
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (igfxEM):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (igfxEM):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 3.17578125
Name                       : igfxEM
Id                         : 3768
PriorityClass              : Normal
FileVersion                : 6.15.10.4565
HandleCount                : 136
WorkingSet                 : 2404352
PagedMemorySize            : 3330048
PrivateMemorySize          : 3330048
VirtualMemorySize          : 101154816
TotalProcessorTime         : 00:00:00.0312500
SI                         : 1
Handles                    : 136
VM                         : 101154816
WS                         : 2404352
NPM                        : 12000
Path                       : C:\Windows\system32\igfxEM.exe
Company                    : Intel Corporation
CPU                        : 0.03125
ProductVersion             : 6.15.10.4565
Description                : igfxEM Module
Product                    : Intel(R) Common User Interface
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5936
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (igfxEM.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (igfxEM.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 12000
NonpagedSystemMemorySize64 : 12000
PagedMemorySize64          : 3330048
PagedSystemMemorySize      : 192528
PagedSystemMemorySize64    : 192528
PeakPagedMemorySize        : 3534848
PeakPagedMemorySize64      : 3534848
PeakWorkingSet             : 9420800
PeakWorkingSet64           : 9420800
PeakVirtualMemorySize      : 104325120
PeakVirtualMemorySize64    : 104325120
PriorityBoostEnabled       : True
PrivateMemorySize64        : 3330048
PrivilegedProcessorTime    : 00:00:00.0312500
ProcessName                : igfxEM
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:09 AM
SynchronizingObject        :
Threads                    : {3772, 3908}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 101154816
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 2404352
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...IPROSetMonitor):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...IPROSetMonitor):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.2109375
Name                       : IPROSetMonitor
Id                         : 1564
PriorityClass              : Normal
FileVersion                : 20, 2, 3000, 0
HandleCount                : 93
WorkingSet                 : 1003520
PagedMemorySize            : 1269760
PrivateMemorySize          : 1269760
VirtualMemorySize          : 39669760
TotalProcessorTime         : 00:00:00.0156250
SI                         : 0
Handles                    : 93
VM                         : 39669760
WS                         : 1003520
NPM                        : 7792
Path                       : C:\Windows\system32\IProsetMonitor.exe
Company                    : Intel Corporation
CPU                        : 0.015625
ProductVersion             : 20, 2, 3000, 0
Description                : Intel® PROSet Monitoring Service
Product                    : Intel® PROSet Monitoring Service
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4992
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (IProsetMonitor.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (IProsetMonitor.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 7792
NonpagedSystemMemorySize64 : 7792
PagedMemorySize64          : 1269760
PagedSystemMemorySize      : 77152
PagedSystemMemorySize64    : 77152
PeakPagedMemorySize        : 1400832
PeakPagedMemorySize64      : 1400832
PeakWorkingSet             : 6021120
PeakWorkingSet64           : 6021120
PeakVirtualMemorySize      : 43917312
PeakVirtualMemorySize64    : 43917312
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1269760
PrivilegedProcessorTime    : 00:00:00
ProcessName                : IPROSetMonitor
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:41 AM
SynchronizingObject        :
Threads                    : {1568, 1620}
UserProcessorTime          : 00:00:00.0156250
VirtualMemorySize64        : 39669760
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1003520
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (lsass):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (lsass):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 5.73046875
Name                       : lsass
Id                         : 652
PriorityClass              : Normal
FileVersion                : 6.3.9600.17415 (winblue_r4.141028-1500)
HandleCount                : 1113
WorkingSet                 : 8802304
PagedMemorySize            : 6008832
PrivateMemorySize          : 6008832
VirtualMemorySize          : 71450624
TotalProcessorTime         : 00:00:06.8906250
SI                         : 0
Handles                    : 1113
VM                         : 2199094706176
WS                         : 8802304
NPM                        : 21504
Path                       : C:\Windows\system32\lsass.exe
Company                    : Microsoft Corporation
CPU                        : 6.890625
ProductVersion             : 6.3.9600.17415
Description                : Local Security Authority Process
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 9
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5964
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (lsass.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (lsass.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 21504
NonpagedSystemMemorySize64 : 21504
PagedMemorySize64          : 6008832
PagedSystemMemorySize      : 178400
PagedSystemMemorySize64    : 178400
PeakPagedMemorySize        : 6737920
PeakPagedMemorySize64      : 6737920
PeakWorkingSet             : 14405632
PeakWorkingSet64           : 14405632
PeakVirtualMemorySize      : 74653696
PeakVirtualMemorySize64    : 2199097909248
PriorityBoostEnabled       : True
PrivateMemorySize64        : 6008832
PrivilegedProcessorTime    : 00:00:01.2968750
ProcessName                : lsass
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:22 AM
SynchronizingObject        :
Threads                    : {660, 664, 668, 684...}
UserProcessorTime          : 00:00:05.5937500
VirtualMemorySize64        : 2199094706176
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 8802304
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...MonitoringHost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...MonitoringHost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 53.47265625
Name                       : MonitoringHost
Id                         : 2908
PriorityClass              : Idle
FileVersion                : 10.19.10006.0
HandleCount                : 905
WorkingSet                 : 18141184
PagedMemorySize            : 56070144
PrivateMemorySize          : 56070144
VirtualMemorySize          : 675332096
TotalProcessorTime         : 00:02:04.1875000
SI                         : 0
Handles                    : 905
VM                         : 675332096
WS                         : 18141184
NPM                        : 41816
Path                       : C:\Program Files\Microsoft Monitoring Agent\Agent\MonitoringHost.exe
Company                    : Microsoft Corp.
CPU                        : 124.1875
ProductVersion             : 10.19.10006.0
Description                : System Center Management Service Host Process
Product                    : Microsoft Monitoring Agent
__NounName                 : Process
BasePriority               : 4
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6016
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (MonitoringHost.exe)
MaxWorkingSet              : 33554432
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (MonitoringHost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 41816
NonpagedSystemMemorySize64 : 41816
PagedMemorySize64          : 56070144
PagedSystemMemorySize      : 481720
PagedSystemMemorySize64    : 481720
PeakPagedMemorySize        : 61288448
PeakPagedMemorySize64      : 61288448
PeakWorkingSet             : 33554432
PeakWorkingSet64           : 33554432
PeakVirtualMemorySize      : 678154240
PeakVirtualMemorySize64    : 678154240
PriorityBoostEnabled       : True
PrivateMemorySize64        : 56070144
PrivilegedProcessorTime    : 00:00:14.7031250
ProcessName                : MonitoringHost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:28 AM
SynchronizingObject        :
Threads                    : {2904, 2880, 2120, 1592...}
UserProcessorTime          : 00:01:49.4843750
VirtualMemorySize64        : 675332096
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 18141184
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVC):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVC):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 2.78515625
Name                       : MSOIDSVC
Id                         : 1688
PriorityClass              : Normal
FileVersion                : 7.250.4556.0
HandleCount                : 160
WorkingSet                 : 2523136
PagedMemorySize            : 2920448
PrivateMemorySize          : 2920448
VirtualMemorySize          : 64802816
TotalProcessorTime         : 00:00:00.0625000
SI                         : 0
Handles                    : 160
VM                         : 64802816
WS                         : 2523136
NPM                        : 11136
Path                       : C:\Program Files\Common Files\Microsoft Shared\Microsoft Online Services\MSOIDSVC.EXE
Company                    : Microsoft Corp.
CPU                        : 0.0625
ProductVersion             : 7.250.4556.0
Description                : Microsoft Online Services Executable
Product                    : Microsoft Online Services
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6036
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (MSOIDSVC.EXE)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (MSOIDSVC.EXE), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 11136
NonpagedSystemMemorySize64 : 11136
PagedMemorySize64          : 2920448
PagedSystemMemorySize      : 124912
PagedSystemMemorySize64    : 124912
PeakPagedMemorySize        : 3104768
PeakPagedMemorySize64      : 3104768
PeakWorkingSet             : 8269824
PeakWorkingSet64           : 8269824
PeakVirtualMemorySize      : 66940928
PeakVirtualMemorySize64    : 66940928
PriorityBoostEnabled       : True
PrivateMemorySize64        : 2920448
PrivilegedProcessorTime    : 00:00:00.0468750
ProcessName                : MSOIDSVC
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:42 AM
SynchronizingObject        :
Threads                    : {1692, 1724, 1736, 1740}
UserProcessorTime          : 00:00:00.0156250
VirtualMemorySize64        : 64802816
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 2523136
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVCM):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (MSOIDSVCM):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 0.8515625
Name                       : MSOIDSVCM
Id                         : 1860
PriorityClass              : Normal
FileVersion                : 7.250.4556.0
HandleCount                : 80
WorkingSet                 : 593920
PagedMemorySize            : 892928
PrivateMemorySize          : 892928
VirtualMemorySize          : 44453888
TotalProcessorTime         : 00:00:00
SI                         : 0
Handles                    : 80
VM                         : 44453888
WS                         : 593920
NPM                        : 5584
Path                       : C:\Program Files\Common Files\Microsoft Shared\Microsoft Online Services\MSOIDSvcm.exe
Company                    : Microsoft Corp.
CPU                        : 0
ProductVersion             : 7.250.4556.0
Description                : Microsoft Online Services Executable
Product                    : Microsoft Online Services
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6048
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (MSOIDSvcm.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (MSOIDSvcm.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 5584
NonpagedSystemMemorySize64 : 5584
PagedMemorySize64          : 892928
PagedSystemMemorySize      : 89264
PagedSystemMemorySize64    : 89264
PeakPagedMemorySize        : 983040
PeakPagedMemorySize64      : 983040
PeakWorkingSet             : 3612672
PeakWorkingSet64           : 3612672
PeakVirtualMemorySize      : 46051328
PeakVirtualMemorySize64    : 46051328
PriorityBoostEnabled       : True
PrivateMemorySize64        : 892928
PrivilegedProcessorTime    : 00:00:00
ProcessName                : MSOIDSVCM
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:43 AM
SynchronizingObject        :
Threads                    : {1864, 1888}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 44453888
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 593920
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (mvmcP2VAgent):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (mvmcP2VAgent):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 2.125
Name                       : mvmcP2VAgent
Id                         : 2068
PriorityClass              : Normal
FileVersion                : 3.0.1002.0
HandleCount                : 159
WorkingSet                 : 1904640
PagedMemorySize            : 2228224
PrivateMemorySize          : 2228224
VirtualMemorySize          : 74190848
TotalProcessorTime         : 00:00:00.0468750
SI                         : 0
Handles                    : 159
VM                         : 74190848
WS                         : 1904640
NPM                        : 13408
Path                       : C:\Program Files\Microsoft Virtual Machine Converter P2V Agent\bin\mvmcP2VAgent.exe
Company                    : Microsoft Corp.
CPU                        : 0.046875
ProductVersion             : 3.0.1002.0
Description                : Microsoft Virtual Machine Converter P2V Agent
Product                    : Microsoft Virtual Machine Converter
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6116
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (mvmcP2VAgent.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (mvmcP2VAgent.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 13408
NonpagedSystemMemorySize64 : 13408
PagedMemorySize64          : 2228224
PagedSystemMemorySize      : 141936
PagedSystemMemorySize64    : 141936
PeakPagedMemorySize        : 2355200
PeakPagedMemorySize64      : 2355200
PeakWorkingSet             : 8458240
PeakWorkingSet64           : 8458240
PeakVirtualMemorySize      : 75272192
PeakVirtualMemorySize64    : 75272192
PriorityBoostEnabled       : True
PrivateMemorySize64        : 2228224
PrivilegedProcessorTime    : 00:00:00.0156250
ProcessName                : mvmcP2VAgent
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:49 AM
SynchronizingObject        :
Threads                    : {2072, 2128, 2144, 2148...}
UserProcessorTime          : 00:00:00.0312500
VirtualMemorySize64        : 74190848
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1904640
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (notepad):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (notepad):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.34765625
Name                       : notepad
Id                         : 4344
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 89
WorkingSet                 : 5079040
PagedMemorySize            : 1413120
PrivateMemorySize          : 1413120
VirtualMemorySize          : 94912512
TotalProcessorTime         : 00:00:00.0781250
SI                         : 1
Handles                    : 89
VM                         : 2199118168064
WS                         : 5079040
NPM                        : 8176
Path                       : C:\Windows\system32\notepad.exe
Company                    : Microsoft Corporation
CPU                        : 0.078125
ProductVersion             : 6.3.9600.16384
Description                : Notepad
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6024
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 2294500
MainWindowTitle            : Untitled - Notepad
MainModule                 : System.Diagnostics.ProcessModule (notepad.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (notepad.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 8176
NonpagedSystemMemorySize64 : 8176
PagedMemorySize64          : 1413120
PagedSystemMemorySize      : 186024
PagedSystemMemorySize64    : 186024
PeakPagedMemorySize        : 1478656
PeakPagedMemorySize64      : 1478656
PeakWorkingSet             : 6815744
PeakWorkingSet64           : 6815744
PeakVirtualMemorySize      : 100773888
PeakVirtualMemorySize64    : 2199124029440
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1413120
PrivilegedProcessorTime    : 00:00:00.0625000
ProcessName                : notepad
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 02:31:27 PM
SynchronizingObject        :
Threads                    : {2608}
UserProcessorTime          : 00:00:00.0156250
VirtualMemorySize64        : 2199118168064
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 5079040
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (PassThruSvr):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (PassThruSvr):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 0.96875
Name                       : PassThruSvr
Id                         : 1752
PriorityClass              : Normal
FileVersion                : 1.2.1.9
HandleCount                : 54
WorkingSet                 : 651264
PagedMemorySize            : 1015808
PrivateMemorySize          : 1015808
VirtualMemorySize          : 19755008
TotalProcessorTime         : 00:00:00
SI                         : 0
Handles                    : 54
VM                         : 19755008
WS                         : 651264
NPM                        : 6672
Path                       : C:\Program Files (x86)\HTC\Internet Pass-Through\PassThruSvr.exe
Company                    :
CPU                        : 0
ProductVersion             : 1.2.1.9
Description                : PassThruSvr Application
Product                    : PassThruSvr Application
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5676
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (PassThruSvr.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (PassThruSvr.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 6672
NonpagedSystemMemorySize64 : 6672
PagedMemorySize64          : 1015808
PagedSystemMemorySize      : 36968
PagedSystemMemorySize64    : 36968
PeakPagedMemorySize        : 1286144
PeakPagedMemorySize64      : 1286144
PeakWorkingSet             : 3792896
PeakWorkingSet64           : 3792896
PeakVirtualMemorySize      : 22401024
PeakVirtualMemorySize64    : 22401024
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1015808
PrivilegedProcessorTime    : 00:00:00
ProcessName                : PassThruSvr
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:42 AM
SynchronizingObject        :
Threads                    : {1756, 1852, 1856}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 19755008
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 651264
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (powershell):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (powershell):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 49.83203125
Name                       : powershell
Id                         : 1700
PriorityClass              : Normal
FileVersion                : 10.0.14409.1005 (rs1_srvoob.161208-1155)
HandleCount                : 506
WorkingSet                 : 19132416
PagedMemorySize            : 52252672
PrivateMemorySize          : 52252672
VirtualMemorySize          : 671604736
TotalProcessorTime         : 00:00:00.3437500
SI                         : 1
Handles                    : 506
VM                         : 2199694860288
WS                         : 19132416
NPM                        : 27192
Path                       : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
Company                    : Microsoft Corporation
CPU                        : 0.34375
ProductVersion             : 10.0.14409.1005
Description                : Windows PowerShell
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5212
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 196732
MainWindowTitle            : Administrator: Windows PowerShell
MainModule                 : System.Diagnostics.ProcessModule (powershell.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (powershell.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 27192
NonpagedSystemMemorySize64 : 27192
PagedMemorySize64          : 52252672
PagedSystemMemorySize      : 505544
PagedSystemMemorySize64    : 505544
PeakPagedMemorySize        : 53170176
PeakPagedMemorySize64      : 53170176
PeakWorkingSet             : 58310656
PeakWorkingSet64           : 58310656
PeakVirtualMemorySize      : 685850624
PeakVirtualMemorySize64    : 2199709106176
PriorityBoostEnabled       : True
PrivateMemorySize64        : 52252672
PrivilegedProcessorTime    : 00:00:00.1093750
ProcessName                : powershell
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:48 AM
SynchronizingObject        :
Threads                    : {1708, 3120, 5100, 3796...}
UserProcessorTime          : 00:00:00.2343750
VirtualMemorySize64        : 2199694860288
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 19132416
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...powershell_ise):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...powershell_ise):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 356.88671875
Name                       : powershell_ise
Id                         : 3860
PriorityClass              : Normal
FileVersion                : 10.0.14409.1005 (rs1_srvoob.161208-1155)
HandleCount                : 1158
WorkingSet                 : 265637888
PagedMemorySize            : 374222848
PrivateMemorySize          : 374222848
VirtualMemorySize          : 1185406976
TotalProcessorTime         : 00:05:04.2343750
SI                         : 1
Handles                    : 1158
VM                         : 1185406976
WS                         : 265637888
NPM                        : 62376
Path                       : C:\Windows\System32\WindowsPowerShell\v1.0\powershell_ise.exe
Company                    : Microsoft Corporation
CPU                        : 304.234375
ProductVersion             : 10.0.14409.1005
Description                : Windows PowerShell ISE
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6000
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 197150
MainWindowTitle            : Administrator: Windows PowerShell ISE
MainModule                 : System.Diagnostics.ProcessModule (powershell_ise.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (powershell_ise.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (MSCOREE.DLL), System.Diagnostics.ProcessModule
                             (KERNEL32.dll)...}
NonpagedSystemMemorySize   : 62376
NonpagedSystemMemorySize64 : 62376
PagedMemorySize64          : 374222848
PagedSystemMemorySize      : 1159440
PagedSystemMemorySize64    : 1159440
PeakPagedMemorySize        : 398385152
PeakPagedMemorySize64      : 398385152
PeakWorkingSet             : 348835840
PeakWorkingSet64           : 348835840
PeakVirtualMemorySize      : 1212497920
PeakVirtualMemorySize64    : 1212497920
PriorityBoostEnabled       : True
PrivateMemorySize64        : 374222848
PrivilegedProcessorTime    : 00:00:32.0468750
ProcessName                : powershell_ise
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:45:00 AM
SynchronizingObject        :
Threads                    : {3856, 5116, 4856, 4944...}
UserProcessorTime          : 00:04:32.2031250
VirtualMemorySize64        : 1185406976
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 265637888
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(SearchIndexer):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...(SearchIndexer):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 32.18359375
Name                       : SearchIndexer
Id                         : 3280
PriorityClass              : Normal
FileVersion                : 7.00.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 677
WorkingSet                 : 29200384
PagedMemorySize            : 33746944
PrivateMemorySize          : 33746944
VirtualMemorySize          : 560439296
TotalProcessorTime         : 00:00:03.5781250
SI                         : 0
Handles                    : 677
VM                         : 2199583694848
WS                         : 29200384
NPM                        : 69280
Path                       : C:\Windows\system32\SearchIndexer.exe
Company                    : Microsoft Corporation
CPU                        : 3.578125
ProductVersion             : 7.00.9600.16384
Description                : Microsoft Windows Search Indexer
Product                    : Windows® Search
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6100
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (SearchIndexer.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (SearchIndexer.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 69280
NonpagedSystemMemorySize64 : 69280
PagedMemorySize64          : 33746944
PagedSystemMemorySize      : 239584
PagedSystemMemorySize64    : 239584
PeakPagedMemorySize        : 40779776
PeakPagedMemorySize64      : 40779776
PeakWorkingSet             : 33845248
PeakWorkingSet64           : 33845248
PeakVirtualMemorySize      : 567230464
PeakVirtualMemorySize64    : 2199590486016
PriorityBoostEnabled       : True
PrivateMemorySize64        : 33746944
PrivilegedProcessorTime    : 00:00:00.9062500
ProcessName                : SearchIndexer
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:15 AM
SynchronizingObject        :
Threads                    : {3552, 3448, 3736, 3784...}
UserProcessorTime          : 00:00:02.6718750
VirtualMemorySize64        : 2199583694848
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 29200384
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (services):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (services):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 3.46484375
Name                       : services
Id                         : 644
PriorityClass              :
FileVersion                :
HandleCount                : 268
WorkingSet                 : 4710400
PagedMemorySize            : 3633152
PrivateMemorySize          : 3633152
VirtualMemorySize          : 26406912
TotalProcessorTime         : 00:00:01.6875000
SI                         : 0
Handles                    : 268
VM                         : 2199049662464
WS                         : 4710400
NPM                        : 10176
Path                       :
Company                    :
CPU                        : 1.6875
ProductVersion             :
Description                :
Product                    :
__NounName                 : Process
BasePriority               : 9
ExitCode                   :
HasExited                  :
ExitTime                   :
Handle                     :
SafeHandle                 :
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 :
MaxWorkingSet              :
MinWorkingSet              :
Modules                    :
NonpagedSystemMemorySize   : 10176
NonpagedSystemMemorySize64 : 10176
PagedMemorySize64          : 3633152
PagedSystemMemorySize      : 115376
PagedSystemMemorySize64    : 115376
PeakPagedMemorySize        : 4268032
PeakPagedMemorySize64      : 4268032
PeakWorkingSet             : 7053312
PeakWorkingSet64           : 7053312
PeakVirtualMemorySize      : 38346752
PeakVirtualMemorySize64    : 2199061602304
PriorityBoostEnabled       :
PrivateMemorySize64        : 3633152
PrivilegedProcessorTime    : 00:00:00.8750000
ProcessName                : services
ProcessorAffinity          :
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:21 AM
SynchronizingObject        :
Threads                    : {748, 4220, 4176}
UserProcessorTime          : 00:00:00.8125000
VirtualMemorySize64        : 2199049662464
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 4710400
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (smss):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (smss):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 0.265625
Name                       : smss
Id                         : 316
PriorityClass              :
FileVersion                :
HandleCount                : 44
WorkingSet                 : 225280
PagedMemorySize            : 278528
PrivateMemorySize          : 278528
VirtualMemorySize          : 4407296
TotalProcessorTime         : 00:00:00.1875000
SI                         : 0
Handles                    : 44
VM                         : 4407296
WS                         : 225280
NPM                        : 2480
Path                       :
Company                    :
CPU                        : 0.1875
ProductVersion             :
Description                :
Product                    :
__NounName                 : Process
BasePriority               : 11
ExitCode                   :
HasExited                  :
ExitTime                   :
Handle                     :
SafeHandle                 :
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 :
MaxWorkingSet              :
MinWorkingSet              :
Modules                    :
NonpagedSystemMemorySize   : 2480
NonpagedSystemMemorySize64 : 2480
PagedMemorySize64          : 278528
PagedSystemMemorySize      : 12424
PagedSystemMemorySize64    : 12424
PeakPagedMemorySize        : 360448
PeakPagedMemorySize64      : 360448
PeakWorkingSet             : 1077248
PeakWorkingSet64           : 1077248
PeakVirtualMemorySize      : 26607616
PeakVirtualMemorySize64    : 26607616
PriorityBoostEnabled       :
PrivateMemorySize64        : 278528
PrivilegedProcessorTime    : 00:00:00.1875000
ProcessName                : smss
ProcessorAffinity          :
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:14 AM
SynchronizingObject        :
Threads                    : {320, 640}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 4407296
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 225280
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (spoolsv):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (spoolsv):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 3.2890625
Name                       : spoolsv
Id                         : 1196
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 348
WorkingSet                 : 2752512
PagedMemorySize            : 3448832
PrivateMemorySize          : 3448832
VirtualMemorySize          : 51662848
TotalProcessorTime         : 00:00:00.0625000
SI                         : 0
Handles                    : 348
VM                         : 2199074918400
WS                         : 2752512
NPM                        : 20224
Path                       : C:\Windows\System32\spoolsv.exe
Company                    : Microsoft Corporation
CPU                        : 0.0625
ProductVersion             : 6.3.9600.16384
Description                : Spooler SubSystem App
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6072
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (spoolsv.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (spoolsv.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 20224
NonpagedSystemMemorySize64 : 20224
PagedMemorySize64          : 3448832
PagedSystemMemorySize      : 116120
PagedSystemMemorySize64    : 116120
PeakPagedMemorySize        : 3903488
PeakPagedMemorySize64      : 3903488
PeakWorkingSet             : 9621504
PeakWorkingSet64           : 9621504
PeakVirtualMemorySize      : 53555200
PeakVirtualMemorySize64    : 2199076810752
PriorityBoostEnabled       : True
PrivateMemorySize64        : 3448832
PrivilegedProcessorTime    : 00:00:00.0468750
ProcessName                : spoolsv
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:35 AM
SynchronizingObject        :
Threads                    : {1200, 1228, 1236, 3144...}
UserProcessorTime          : 00:00:00.0156250
VirtualMemorySize64        : 2199074918400
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 2752512
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (sqlwriter):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (sqlwriter):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.390625
Name                       : sqlwriter
Id                         : 1872
PriorityClass              : Normal
FileVersion                : 2011.0110.2100.060 ((SQL11_RTM).120210-1917 )
HandleCount                : 99
WorkingSet                 : 1069056
PagedMemorySize            : 1458176
PrivateMemorySize          : 1458176
VirtualMemorySize          : 39186432
TotalProcessorTime         : 00:00:00.0156250
SI                         : 0
Handles                    : 99
VM                         : 39186432
WS                         : 1069056
NPM                        : 9184
Path                       : C:\Program Files\Microsoft SQL Server\90\Shared\sqlwriter.exe
Company                    : Microsoft Corporation
CPU                        : 0.015625
ProductVersion             : 11.0.2100.60
Description                : SQL Server VSS Writer - 64 Bit
Product                    : Microsoft SQL Server
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 6044
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (sqlwriter.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (sqlwriter.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 9184
NonpagedSystemMemorySize64 : 9184
PagedMemorySize64          : 1458176
PagedSystemMemorySize      : 73424
PagedSystemMemorySize64    : 73424
PeakPagedMemorySize        : 1908736
PeakPagedMemorySize64      : 1908736
PeakWorkingSet             : 6074368
PeakWorkingSet64           : 6074368
PeakVirtualMemorySize      : 49713152
PeakVirtualMemorySize64    : 49713152
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1458176
PrivilegedProcessorTime    : 00:00:00
ProcessName                : sqlwriter
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:43 AM
SynchronizingObject        :
Threads                    : {1876, 1928}
UserProcessorTime          : 00:00:00.0156250
VirtualMemorySize64        : 39186432
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1069056
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 12.9609375
Name                       : svchost
Id                         : 336
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 593
WorkingSet                 : 11681792
PagedMemorySize            : 13590528
PrivateMemorySize          : 13590528
VirtualMemorySize          : 107212800
TotalProcessorTime         : 00:00:39.3437500
SI                         : 0
Handles                    : 593
VM                         : 2203425435648
WS                         : 11681792
NPM                        : 29952
Path                       : C:\Windows\System32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 39.34375
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5928
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 29952
NonpagedSystemMemorySize64 : 29952
PagedMemorySize64          : 13590528
PagedSystemMemorySize      : 198880
PagedSystemMemorySize64    : 198880
PeakPagedMemorySize        : 18382848
PeakPagedMemorySize64      : 18382848
PeakWorkingSet             : 29192192
PeakWorkingSet64           : 29192192
PeakVirtualMemorySize      : 115355648
PeakVirtualMemorySize64    : 2203433578496
PriorityBoostEnabled       : True
PrivateMemorySize64        : 13590528
PrivilegedProcessorTime    : 00:00:33.9687500
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:31 AM
SynchronizingObject        :
Threads                    : {368, 496, 468, 464...}
UserProcessorTime          : 00:00:05.3750000
VirtualMemorySize64        : 2203425435648
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 11681792
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 4.54296875
Name                       : svchost
Id                         : 728
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 391
WorkingSet                 : 6021120
PagedMemorySize            : 4763648
PrivateMemorySize          : 4763648
VirtualMemorySize          : 43786240
TotalProcessorTime         : 00:00:00.8125000
SI                         : 0
Handles                    : 391
VM                         : 2199067041792
WS                         : 6021120
NPM                        : 14784
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 0.8125
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4988
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 14784
NonpagedSystemMemorySize64 : 14784
PagedMemorySize64          : 4763648
PagedSystemMemorySize      : 222328
PagedSystemMemorySize64    : 222328
PeakPagedMemorySize        : 5689344
PeakPagedMemorySize64      : 5689344
PeakWorkingSet             : 11513856
PeakWorkingSet64           : 11513856
PeakVirtualMemorySize      : 51437568
PeakVirtualMemorySize64    : 2199074693120
PriorityBoostEnabled       : True
PrivateMemorySize64        : 4763648
PrivilegedProcessorTime    : 00:00:00.4687500
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:26 AM
SynchronizingObject        :
Threads                    : {732, 756, 760, 836...}
UserProcessorTime          : 00:00:00.3437500
VirtualMemorySize64        : 2199067041792
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 6021120
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 9.3515625
Name                       : svchost
Id                         : 740
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 603
WorkingSet                 : 11218944
PagedMemorySize            : 9805824
PrivateMemorySize          : 9805824
VirtualMemorySize          : 1450541056
TotalProcessorTime         : 00:00:09.3750000
SI                         : 0
Handles                    : 603
VM                         : 2200473796608
WS                         : 11218944
NPM                        : 39344
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 9.375
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5060
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 39344
NonpagedSystemMemorySize64 : 39344
PagedMemorySize64          : 9805824
PagedSystemMemorySize      : 195800
PagedSystemMemorySize64    : 195800
PeakPagedMemorySize        : 10403840
PeakPagedMemorySize64      : 10403840
PeakWorkingSet             : 19230720
PeakWorkingSet64           : 19230720
PeakVirtualMemorySize      : 1452630016
PeakVirtualMemorySize64    : 2200475885568
PriorityBoostEnabled       : True
PrivateMemorySize64        : 9805824
PrivilegedProcessorTime    : 00:00:06.1093750
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:32 AM
SynchronizingObject        :
Threads                    : {744, 848, 960, 936...}
UserProcessorTime          : 00:00:03.2656250
VirtualMemorySize64        : 2200473796608
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 11218944
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 4.21484375
Name                       : svchost
Id                         : 772
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 474
WorkingSet                 : 6356992
PagedMemorySize            : 4419584
PrivateMemorySize          : 4419584
VirtualMemorySize          : 66207744
TotalProcessorTime         : 00:00:02.1406250
SI                         : 0
Handles                    : 474
VM                         : 2199089463296
WS                         : 6356992
NPM                        : 17168
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 2.140625
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5616
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 17168
NonpagedSystemMemorySize64 : 17168
PagedMemorySize64          : 4419584
PagedSystemMemorySize      : 155384
PagedSystemMemorySize64    : 155384
PeakPagedMemorySize        : 4706304
PeakPagedMemorySize64      : 4706304
PeakWorkingSet             : 7344128
PeakWorkingSet64           : 7344128
PeakVirtualMemorySize      : 85184512
PeakVirtualMemorySize64    : 2199108440064
PriorityBoostEnabled       : True
PrivateMemorySize64        : 4419584
PrivilegedProcessorTime    : 00:00:00.9843750
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:27 AM
SynchronizingObject        :
Threads                    : {776, 788, 792, 5732...}
UserProcessorTime          : 00:00:01.1562500
VirtualMemorySize64        : 2199089463296
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 6356992
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 17.15234375
Name                       : svchost
Id                         : 876
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 815
WorkingSet                 : 16842752
PagedMemorySize            : 17985536
PrivateMemorySize          : 17985536
VirtualMemorySize          : 90689536
TotalProcessorTime         : 00:00:02.2187500
SI                         : 0
Handles                    : 815
VM                         : 2199113945088
WS                         : 16842752
NPM                        : 33376
Path                       : C:\Windows\System32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 2.21875
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5788
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 33376
NonpagedSystemMemorySize64 : 33376
PagedMemorySize64          : 17985536
PagedSystemMemorySize      : 157312
PagedSystemMemorySize64    : 157312
PeakPagedMemorySize        : 20938752
PeakPagedMemorySize64      : 20938752
PeakWorkingSet             : 28102656
PeakWorkingSet64           : 28102656
PeakVirtualMemorySize      : 107188224
PeakVirtualMemorySize64    : 2199130443776
PriorityBoostEnabled       : True
PrivateMemorySize64        : 17985536
PrivilegedProcessorTime    : 00:00:01.0781250
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:28 AM
SynchronizingObject        :
Threads                    : {880, 904, 968, 972...}
UserProcessorTime          : 00:00:01.1406250
VirtualMemorySize64        : 2199113945088
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 16842752
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 25.92578125
Name                       : svchost
Id                         : 920
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 1600
WorkingSet                 : 32014336
PagedMemorySize            : 27185152
PrivateMemorySize          : 27185152
VirtualMemorySize          : 583188480
TotalProcessorTime         : 00:00:09
SI                         : 0
Handles                    : 1600
VM                         : 2199606444032
WS                         : 32014336
NPM                        : 78640
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 9
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5324
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 78640
NonpagedSystemMemorySize64 : 78640
PagedMemorySize64          : 27185152
PagedSystemMemorySize      : 426744
PagedSystemMemorySize64    : 426744
PeakPagedMemorySize        : 37732352
PeakPagedMemorySize64      : 37732352
PeakWorkingSet             : 53633024
PeakWorkingSet64           : 53633024
PeakVirtualMemorySize      : 640987136
PeakVirtualMemorySize64    : 2199664242688
PriorityBoostEnabled       : True
PrivateMemorySize64        : 27185152
PrivilegedProcessorTime    : 00:00:04.5000000
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:28 AM
SynchronizingObject        :
Threads                    : {924, 940, 944, 1036...}
UserProcessorTime          : 00:00:04.5000000
VirtualMemorySize64        : 2199606444032
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 32014336
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 9.2109375
Name                       : svchost
Id                         : 948
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 703
WorkingSet                 : 14086144
PagedMemorySize            : 9658368
PrivateMemorySize          : 9658368
VirtualMemorySize          : 135499776
TotalProcessorTime         : 00:00:02.0156250
SI                         : 0
Handles                    : 703
VM                         : 2199158755328
WS                         : 14086144
NPM                        : 35504
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 2.015625
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5740
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 35504
NonpagedSystemMemorySize64 : 35504
PagedMemorySize64          : 9658368
PagedSystemMemorySize      : 274800
PagedSystemMemorySize64    : 274800
PeakPagedMemorySize        : 14016512
PeakPagedMemorySize64      : 14016512
PeakWorkingSet             : 24416256
PeakWorkingSet64           : 24416256
PeakVirtualMemorySize      : 175190016
PeakVirtualMemorySize64    : 2199198445568
PriorityBoostEnabled       : True
PrivateMemorySize64        : 9658368
PrivilegedProcessorTime    : 00:00:01.0625000
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:29 AM
SynchronizingObject        :
Threads                    : {952, 996, 500, 544...}
UserProcessorTime          : 00:00:00.9531250
VirtualMemorySize64        : 2199158755328
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 14086144
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 16.12109375
Name                       : svchost
Id                         : 1240
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 497
WorkingSet                 : 18079744
PagedMemorySize            : 16904192
PrivateMemorySize          : 16904192
VirtualMemorySize          : 127922176
TotalProcessorTime         : 00:00:02.4375000
SI                         : 0
Handles                    : 497
VM                         : 2199151177728
WS                         : 18079744
NPM                        : 39680
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 2.4375
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5728
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 39680
NonpagedSystemMemorySize64 : 39680
PagedMemorySize64          : 16904192
PagedSystemMemorySize      : 184104
PagedSystemMemorySize64    : 184104
PeakPagedMemorySize        : 55791616
PeakPagedMemorySize64      : 55791616
PeakWorkingSet             : 56446976
PeakWorkingSet64           : 56446976
PeakVirtualMemorySize      : 938287104
PeakVirtualMemorySize64    : 2199961542656
PriorityBoostEnabled       : True
PrivateMemorySize64        : 16904192
PrivilegedProcessorTime    : 00:00:01.3906250
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:35 AM
SynchronizingObject        :
Threads                    : {1244, 1260, 1268, 1280...}
UserProcessorTime          : 00:00:01.0468750
VirtualMemorySize64        : 2199151177728
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 18079744
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 3.20703125
Name                       : svchost
Id                         : 1440
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 202
WorkingSet                 : 3547136
PagedMemorySize            : 3362816
PrivateMemorySize          : 3362816
VirtualMemorySize          : 102293504
TotalProcessorTime         : 00:00:00.0312500
SI                         : 0
Handles                    : 202
VM                         : 2199125549056
WS                         : 3547136
NPM                        : 13536
Path                       : C:\Windows\System32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 0.03125
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5580
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 13536
NonpagedSystemMemorySize64 : 13536
PagedMemorySize64          : 3362816
PagedSystemMemorySize      : 194888
PagedSystemMemorySize64    : 194888
PeakPagedMemorySize        : 3510272
PeakPagedMemorySize64      : 3510272
PeakWorkingSet             : 10313728
PeakWorkingSet64           : 10313728
PeakVirtualMemorySize      : 103890944
PeakVirtualMemorySize64    : 2199127146496
PriorityBoostEnabled       : True
PrivateMemorySize64        : 3362816
PrivilegedProcessorTime    : 00:00:00.0312500
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:39 AM
SynchronizingObject        :
Threads                    : {1444, 1580, 1604, 1612...}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 2199125549056
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 3547136
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.79296875
Name                       : svchost
Id                         : 1932
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 143
WorkingSet                 : 1814528
PagedMemorySize            : 1880064
PrivateMemorySize          : 1880064
VirtualMemorySize          : 41840640
TotalProcessorTime         : 00:00:00.0312500
SI                         : 0
Handles                    : 143
VM                         : 2199065096192
WS                         : 1814528
NPM                        : 10480
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 0.03125
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 3572
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 10480
NonpagedSystemMemorySize64 : 10480
PagedMemorySize64          : 1880064
PagedSystemMemorySize      : 81240
PagedSystemMemorySize64    : 81240
PeakPagedMemorySize        : 2023424
PeakPagedMemorySize64      : 2023424
PeakWorkingSet             : 6520832
PeakWorkingSet64           : 6520832
PeakVirtualMemorySize      : 43970560
PeakVirtualMemorySize64    : 2199067226112
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1880064
PrivilegedProcessorTime    : 00:00:00
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:44 AM
SynchronizingObject        :
Threads                    : {1936, 1944, 1964, 1968...}
UserProcessorTime          : 00:00:00.0312500
VirtualMemorySize64        : 2199065096192
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1814528
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.2890625
Name                       : svchost
Id                         : 2820
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 103
WorkingSet                 : 929792
PagedMemorySize            : 1351680
PrivateMemorySize          : 1351680
VirtualMemorySize          : 22081536
TotalProcessorTime         : 00:00:00.0468750
SI                         : 0
Handles                    : 103
VM                         : 2199045337088
WS                         : 929792
NPM                        : 10576
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 0.046875
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5380
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 10576
NonpagedSystemMemorySize64 : 10576
PagedMemorySize64          : 1351680
PagedSystemMemorySize      : 47440
PagedSystemMemorySize64    : 47440
PeakPagedMemorySize        : 1556480
PeakPagedMemorySize64      : 1556480
PeakWorkingSet             : 5001216
PeakWorkingSet64           : 5001216
PeakVirtualMemorySize      : 23162880
PeakVirtualMemorySize64    : 2199046418432
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1351680
PrivilegedProcessorTime    : 00:00:00.0468750
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:03 AM
SynchronizingObject        :
Threads                    : {2824, 2856, 2980}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 2199045337088
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 929792
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 8.0234375
Name                       : svchost
Id                         : 2860
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 513
WorkingSet                 : 10252288
PagedMemorySize            : 8413184
PrivateMemorySize          : 8413184
VirtualMemorySize          : 100327424
TotalProcessorTime         : 00:00:18
SI                         : 0
Handles                    : 513
VM                         : 2199123582976
WS                         : 10252288
NPM                        : 35792
Path                       : C:\Windows\system32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 18
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4964
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 35792
NonpagedSystemMemorySize64 : 35792
PagedMemorySize64          : 8413184
PagedSystemMemorySize      : 194568
PagedSystemMemorySize64    : 194568
PeakPagedMemorySize        : 9003008
PeakPagedMemorySize64      : 9003008
PeakWorkingSet             : 16363520
PeakWorkingSet64           : 16363520
PeakVirtualMemorySize      : 107249664
PeakVirtualMemorySize64    : 2199130505216
PriorityBoostEnabled       : True
PrivateMemorySize64        : 8413184
PrivilegedProcessorTime    : 00:00:09.7031250
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:03 AM
SynchronizingObject        :
Threads                    : {2864, 2868, 2912, 2984...}
UserProcessorTime          : 00:00:08.2968750
VirtualMemorySize64        : 2199123582976
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 10252288
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (svchost):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 5.57421875
Name                       : svchost
Id                         : 3316
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 412
WorkingSet                 : 8269824
PagedMemorySize            : 5844992
PrivateMemorySize          : 5844992
VirtualMemorySize          : 861372416
TotalProcessorTime         : 00:00:09.4062500
SI                         : 0
Handles                    : 412
VM                         : 2199884627968
WS                         : 8269824
NPM                        : 29632
Path                       : C:\Windows\System32\svchost.exe
Company                    : Microsoft Corporation
CPU                        : 9.40625
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Services
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5384
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (svchost.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (svchost.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 29632
NonpagedSystemMemorySize64 : 29632
PagedMemorySize64          : 5844992
PagedSystemMemorySize      : 107136
PagedSystemMemorySize64    : 107136
PeakPagedMemorySize        : 5922816
PeakPagedMemorySize64      : 5922816
PeakWorkingSet             : 12570624
PeakWorkingSet64           : 12570624
PeakVirtualMemorySize      : 867520512
PeakVirtualMemorySize64    : 2199890776064
PriorityBoostEnabled       : True
PrivateMemorySize64        : 5844992
PrivilegedProcessorTime    : 00:00:06.5312500
ProcessName                : svchost
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:06 AM
SynchronizingObject        :
Threads                    : {3320, 3340, 3356, 3888...}
UserProcessorTime          : 00:00:02.8750000
VirtualMemorySize64        : 2199884627968
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 8269824
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (System):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (System):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 0.10546875
Name                       : System
Id                         : 4
PriorityClass              :
FileVersion                :
HandleCount                : 1459
WorkingSet                 : 585728
PagedMemorySize            : 110592
PrivateMemorySize          : 110592
VirtualMemorySize          : 5701632
TotalProcessorTime         : 01:31:22.3125000
SI                         : 0
Handles                    : 1459
VM                         : 5701632
WS                         : 585728
NPM                        : 0
Path                       :
Company                    :
CPU                        : 5482.3125
ProductVersion             :
Description                :
Product                    :
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  :
ExitTime                   :
Handle                     :
SafeHandle                 :
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 :
MaxWorkingSet              :
MinWorkingSet              :
Modules                    :
NonpagedSystemMemorySize   : 0
NonpagedSystemMemorySize64 : 0
PagedMemorySize64          : 110592
PagedSystemMemorySize      : 0
PagedSystemMemorySize64    : 0
PeakPagedMemorySize        : 6201344
PeakPagedMemorySize64      : 6201344
PeakWorkingSet             : 12922880
PeakWorkingSet64           : 12922880
PeakVirtualMemorySize      : 16924672
PeakVirtualMemorySize64    : 16924672
PriorityBoostEnabled       :
PrivateMemorySize64        : 110592
PrivilegedProcessorTime    : 01:31:22.3125000
ProcessName                : System
ProcessorAffinity          :
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:14 AM
SynchronizingObject        :
Threads                    : {8, 12, 16, 20...}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 5701632
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 585728
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (taskhostex):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (taskhostex):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 9.00390625
Name                       : taskhostex
Id                         : 3748
PriorityClass              : Normal
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 261
WorkingSet                 : 11153408
PagedMemorySize            : 9441280
PrivateMemorySize          : 9441280
VirtualMemorySize          : 510251008
TotalProcessorTime         : 00:00:00.2031250
SI                         : 1
Handles                    : 261
VM                         : 2199533506560
WS                         : 11153408
NPM                        : 44992
Path                       : C:\Windows\system32\taskhostex.exe
Company                    : Microsoft Corporation
CPU                        : 0.203125
ProductVersion             : 6.3.9600.16384
Description                : Host Process for Windows Tasks
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5016
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (taskhostex.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (taskhostex.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 44992
NonpagedSystemMemorySize64 : 44992
PagedMemorySize64          : 9441280
PagedSystemMemorySize      : 214256
PagedSystemMemorySize64    : 214256
PeakPagedMemorySize        : 10338304
PeakPagedMemorySize64      : 10338304
PeakWorkingSet             : 15233024
PeakWorkingSet64           : 15233024
PeakVirtualMemorySize      : 512765952
PeakVirtualMemorySize64    : 2199536021504
PriorityBoostEnabled       : True
PrivateMemorySize64        : 9441280
PrivilegedProcessorTime    : 00:00:00.0781250
ProcessName                : taskhostex
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:09 AM
SynchronizingObject        :
Threads                    : {3752, 3756, 3836, 3864...}
UserProcessorTime          : 00:00:00.1250000
VirtualMemorySize64        : 2199533506560
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 11153408
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...Viewer_Service):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...Viewer_Service):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 5.3359375
Name                       : TeamViewer_Service
Id                         : 2000
PriorityClass              : Normal
FileVersion                : 13.2.26558.0
HandleCount                : 406
WorkingSet                 : 5959680
PagedMemorySize            : 5595136
PrivateMemorySize          : 5595136
VirtualMemorySize          : 128507904
TotalProcessorTime         : 00:00:00.2343750
SI                         : 0
Handles                    : 406
VM                         : 128507904
WS                         : 5959680
NPM                        : 190116
Path                       : C:\Program Files (x86)\TeamViewer\TeamViewer_Service.exe
Company                    : TeamViewer GmbH
CPU                        : 0.234375
ProductVersion             : 13.2.26558.0
Description                : TeamViewer 13
Product                    : TeamViewer
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 2656
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (TeamViewer_Service.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (TeamViewer_Service.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll),
                             System.Diagnostics.ProcessModule (wow64win.dll)...}
NonpagedSystemMemorySize   : 190116
NonpagedSystemMemorySize64 : 190116
PagedMemorySize64          : 5595136
PagedSystemMemorySize      : 175280
PagedSystemMemorySize64    : 175280
PeakPagedMemorySize        : 6041600
PeakPagedMemorySize64      : 6041600
PeakWorkingSet             : 23527424
PeakWorkingSet64           : 23527424
PeakVirtualMemorySize      : 136445952
PeakVirtualMemorySize64    : 136445952
PriorityBoostEnabled       : True
PrivateMemorySize64        : 5595136
PrivilegedProcessorTime    : 00:00:00.1718750
ProcessName                : TeamViewer_Service
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:44 AM
SynchronizingObject        :
Threads                    : {2004, 2016, 2036, 2040...}
UserProcessorTime          : 00:00:00.0625000
VirtualMemorySize64        : 128507904
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 5959680
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (vmnat):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (vmnat):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.5625
Name                       : vmnat
Id                         : 2028
PriorityClass              : Normal
FileVersion                : 12.5.7 build-5813279
HandleCount                : 95
WorkingSet                 : 1499136
PagedMemorySize            : 1638400
PrivateMemorySize          : 1638400
VirtualMemorySize          : 48013312
TotalProcessorTime         : 00:00:00.0625000
SI                         : 0
Handles                    : 95
VM                         : 48013312
WS                         : 1499136
NPM                        : 10032
Path                       : C:\Windows\SysWOW64\vmnat.exe
Company                    : VMware, Inc.
CPU                        : 0.0625
ProductVersion             : 12.5.7 build-5813279
Description                : VMware NAT Service
Product                    : VMware Workstation
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5036
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (vmnat.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (vmnat.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 10032
NonpagedSystemMemorySize64 : 10032
PagedMemorySize64          : 1638400
PagedSystemMemorySize      : 92936
PagedSystemMemorySize64    : 92936
PeakPagedMemorySize        : 1781760
PeakPagedMemorySize64      : 1781760
PeakWorkingSet             : 5124096
PeakWorkingSet64           : 5124096
PeakVirtualMemorySize      : 50659328
PeakVirtualMemorySize64    : 50659328
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1638400
PrivilegedProcessorTime    : 00:00:00.0312500
ProcessName                : vmnat
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:45 AM
SynchronizingObject        :
Threads                    : {2032, 1340, 1344, 1432}
UserProcessorTime          : 00:00:00.0312500
VirtualMemorySize64        : 48013312
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1499136
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (vmware-authd):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (vmware-authd):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 3.66015625
Name                       : vmware-authd
Id                         : 1596
PriorityClass              : Normal
FileVersion                : 12.5.7 build-5813279
HandleCount                : 240
WorkingSet                 : 3051520
PagedMemorySize            : 3837952
PrivateMemorySize          : 3837952
VirtualMemorySize          : 90664960
TotalProcessorTime         : 00:00:03.8593750
SI                         : 0
Handles                    : 240
VM                         : 90664960
WS                         : 3051520
NPM                        : 15920
Path                       : C:\Program Files (x86)\VMware\VMware Workstation\vmware-authd.exe
Company                    : VMware, Inc.
CPU                        : 3.859375
ProductVersion             : 12.5.7 build-5813279
Description                : VMware Authorization Service
Product                    : VMware Workstation
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5516
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (vmware-authd.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (vmware-authd.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 15920
NonpagedSystemMemorySize64 : 15920
PagedMemorySize64          : 3837952
PagedSystemMemorySize      : 166992
PagedSystemMemorySize64    : 166992
PeakPagedMemorySize        : 3907584
PeakPagedMemorySize64      : 3907584
PeakWorkingSet             : 8941568
PeakWorkingSet64           : 8941568
PeakVirtualMemorySize      : 98873344
PeakVirtualMemorySize64    : 98873344
PriorityBoostEnabled       : True
PrivateMemorySize64        : 3837952
PrivilegedProcessorTime    : 00:00:03.1562500
ProcessName                : vmware-authd
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:45 AM
SynchronizingObject        :
Threads                    : {1608, 2268, 2272, 2276...}
UserProcessorTime          : 00:00:00.7031250
VirtualMemorySize64        : 90664960
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 3051520
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (vmware-hostd):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost... (vmware-hostd):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 23.7109375
Name                       : vmware-hostd
Id                         : 2284
PriorityClass              : Normal
FileVersion                :
HandleCount                : 298
WorkingSet                 : 20447232
PagedMemorySize            : 24862720
PrivateMemorySize          : 24862720
VirtualMemorySize          : 162394112
TotalProcessorTime         : 00:00:01.2343750
SI                         : 0
Handles                    : 298
VM                         : 162394112
WS                         : 20447232
NPM                        : 32992
Path                       : C:\Program Files (x86)\VMware\VMware Workstation\vmware-hostd.exe
Company                    :
CPU                        : 1.234375
ProductVersion             :
Description                :
Product                    :
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5716
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (vmware-hostd.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (vmware-hostd.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 32992
NonpagedSystemMemorySize64 : 32992
PagedMemorySize64          : 24862720
PagedSystemMemorySize      : 253760
PagedSystemMemorySize64    : 253760
PeakPagedMemorySize        : 28180480
PeakPagedMemorySize64      : 28180480
PeakWorkingSet             : 43032576
PeakWorkingSet64           : 43032576
PeakVirtualMemorySize      : 172978176
PeakVirtualMemorySize64    : 172978176
PriorityBoostEnabled       : True
PrivateMemorySize64        : 24862720
PrivilegedProcessorTime    : 00:00:00.1093750
ProcessName                : vmware-hostd
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:51 AM
SynchronizingObject        :
Threads                    : {2288, 2340, 2344, 2348...}
UserProcessorTime          : 00:00:01.1250000
VirtualMemorySize64        : 162394112
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 20447232
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (vmware-tray):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (vmware-tray):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.3203125
Name                       : vmware-tray
Id                         : 5036
PriorityClass              : Normal
FileVersion                : 12.5.7 build-5813279
HandleCount                : 86
WorkingSet                 : 1138688
PagedMemorySize            : 1384448
PrivateMemorySize          : 1384448
VirtualMemorySize          : 78872576
TotalProcessorTime         : 00:00:00
SI                         : 1
Handles                    : 86
VM                         : 78872576
WS                         : 1138688
NPM                        : 10096
Path                       : C:\Program Files (x86)\VMware\VMware Workstation\vmware-tray.exe
Company                    : VMware, Inc.
CPU                        : 0
ProductVersion             : 12.5.7 build-5813279
Description                : VMware Tray Process
Product                    : VMware Workstation
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5112
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (vmware-tray.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (vmware-tray.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 10096
NonpagedSystemMemorySize64 : 10096
PagedMemorySize64          : 1384448
PagedSystemMemorySize      : 155176
PagedSystemMemorySize64    : 155176
PeakPagedMemorySize        : 1462272
PeakPagedMemorySize64      : 1462272
PeakWorkingSet             : 5763072
PeakWorkingSet64           : 5763072
PeakVirtualMemorySize      : 80195584
PeakVirtualMemorySize64    : 80195584
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1384448
PrivilegedProcessorTime    : 00:00:00
ProcessName                : vmware-tray
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:32 AM
SynchronizingObject        :
Threads                    : {5040, 5044, 5048}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 78872576
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1138688
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...sbarbitrator64):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnost...sbarbitrator64):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 2.015625
Name                       : vmware-usbarbitrator64
Id                         : 1696
PriorityClass              : Normal
FileVersion                : 15. 2.0.5097610
HandleCount                : 162
WorkingSet                 : 1605632
PagedMemorySize            : 2113536
PrivateMemorySize          : 2113536
VirtualMemorySize          : 69976064
TotalProcessorTime         : 00:00:00
SI                         : 0
Handles                    : 162
VM                         : 69976064
WS                         : 1605632
NPM                        : 11840
Path                       : C:\Program Files (x86)\Common Files\VMware\USB\vmware-usbarbitrator64.exe
Company                    : VMware, Inc.
CPU                        : 0
ProductVersion             : 12.5.3 build-5097610
Description                : VMware USB Arbitration Service
Product                    : VMware USB Arbitration Service
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4216
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (vmware-usbarbitrator64.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (vmware-usbarbitrator64.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL),
                             System.Diagnostics.ProcessModule (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 11840
NonpagedSystemMemorySize64 : 11840
PagedMemorySize64          : 2113536
PagedSystemMemorySize      : 136680
PagedSystemMemorySize64    : 136680
PeakPagedMemorySize        : 2199552
PeakPagedMemorySize64      : 2199552
PeakWorkingSet             : 7442432
PeakWorkingSet64           : 7442432
PeakVirtualMemorySize      : 73146368
PeakVirtualMemorySize64    : 73146368
PriorityBoostEnabled       : True
PrivateMemorySize64        : 2113536
PrivilegedProcessorTime    : 00:00:00
ProcessName                : vmware-usbarbitrator64
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:48 AM
SynchronizingObject        :
Threads                    : {1712, 2052, 2076}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 69976064
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1605632
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (wfcrun32):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (wfcrun32):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 2.58203125
Name                       : wfcrun32
Id                         : 5012
PriorityClass              : Normal
FileVersion                : 12.1.1.1
HandleCount                : 225
WorkingSet                 : 3203072
PagedMemorySize            : 2707456
PrivateMemorySize          : 2707456
VirtualMemorySize          : 117547008
TotalProcessorTime         : 00:00:00.0312500
SI                         : 1
Handles                    : 225
VM                         : 117547008
WS                         : 3203072
NPM                        : 18784
Path                       : C:\Program Files (x86)\Citrix\ICA Client\wfcrun32.exe
Company                    : Citrix Systems, Inc.
CPU                        : 0.03125
ProductVersion             : 12.1.1
Description                : Citrix
Product                    : Citrix ICA Client
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 5284
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (wfcrun32.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (wfcrun32.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 18784
NonpagedSystemMemorySize64 : 18784
PagedMemorySize64          : 2707456
PagedSystemMemorySize      : 222472
PagedSystemMemorySize64    : 222472
PeakPagedMemorySize        : 2928640
PeakPagedMemorySize64      : 2928640
PeakWorkingSet             : 10448896
PeakWorkingSet64           : 10448896
PeakVirtualMemorySize      : 127287296
PeakVirtualMemorySize64    : 127287296
PriorityBoostEnabled       : True
PrivateMemorySize64        : 2707456
PrivilegedProcessorTime    : 00:00:00.0156250
ProcessName                : wfcrun32
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:32 AM
SynchronizingObject        :
Threads                    : {5016, 5064, 5068, 5084...}
UserProcessorTime          : 00:00:00.0156250
VirtualMemorySize64        : 117547008
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 3203072
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (wininit):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (wininit):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 0.79296875
Name                       : wininit
Id                         : 556
PriorityClass              : High
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 74
WorkingSet                 : 598016
PagedMemorySize            : 831488
PrivateMemorySize          : 831488
VirtualMemorySize          : 45334528
TotalProcessorTime         : 00:00:00.0312500
SI                         : 0
Handles                    : 74
VM                         : 2199068590080
WS                         : 598016
NPM                        : 8048
Path                       : C:\Windows\system32\wininit.exe
Company                    : Microsoft Corporation
CPU                        : 0.03125
ProductVersion             : 6.3.9600.16384
Description                : Windows Start-Up Application
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 13
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4812
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (wininit.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (wininit.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 8048
NonpagedSystemMemorySize64 : 8048
PagedMemorySize64          : 831488
PagedSystemMemorySize      : 103824
PagedSystemMemorySize64    : 103824
PeakPagedMemorySize        : 1064960
PeakPagedMemorySize64      : 1064960
PeakWorkingSet             : 4128768
PeakWorkingSet64           : 4128768
PeakVirtualMemorySize      : 49000448
PeakVirtualMemorySize64    : 2199072256000
PriorityBoostEnabled       : True
PrivateMemorySize64        : 831488
PrivilegedProcessorTime    : 00:00:00.0312500
ProcessName                : wininit
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:20 AM
SynchronizingObject        :
Threads                    : {560}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 2199068590080
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 598016
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (winlogon):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (winlogon):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.3984375
Name                       : winlogon
Id                         : 600
PriorityClass              : High
FileVersion                : 6.3.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 149
WorkingSet                 : 966656
PagedMemorySize            : 1466368
PrivateMemorySize          : 1466368
VirtualMemorySize          : 59625472
TotalProcessorTime         : 00:00:00
SI                         : 1
Handles                    : 149
VM                         : 2199082881024
WS                         : 966656
NPM                        : 8160
Path                       : C:\Windows\system32\winlogon.exe
Company                    : Microsoft Corporation
CPU                        : 0
ProductVersion             : 6.3.9600.16384
Description                : Windows Log-on Application
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 13
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4180
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (winlogon.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (winlogon.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 8160
NonpagedSystemMemorySize64 : 8160
PagedMemorySize64          : 1466368
PagedSystemMemorySize      : 127640
PagedSystemMemorySize64    : 127640
PeakPagedMemorySize        : 3035136
PeakPagedMemorySize64      : 3035136
PeakWorkingSet             : 14348288
PeakWorkingSet64           : 14348288
PeakVirtualMemorySize      : 67223552
PeakVirtualMemorySize64    : 2199090479104
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1466368
PrivilegedProcessorTime    : 00:00:00
ProcessName                : winlogon
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:43:20 AM
SynchronizingObject        :
Threads                    : {604, 844}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 2199082881024
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 966656
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (wmpnetwk):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (wmpnetwk):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 6.7734375
Name                       : wmpnetwk
Id                         : 5452
PriorityClass              : Normal
FileVersion                : 12.0.9600.16384 (winblue_rtm.130821-1623)
HandleCount                : 398
WorkingSet                 : 4505600
PagedMemorySize            : 7102464
PrivateMemorySize          : 7102464
VirtualMemorySize          : 107216896
TotalProcessorTime         : 00:00:02.1875000
SI                         : 0
Handles                    : 398
VM                         : 2199130472448
WS                         : 4505600
NPM                        : 24704
Path                       : C:\Program Files\Windows Media Player\wmpnetwk.exe
Company                    : Microsoft Corporation
CPU                        : 2.1875
ProductVersion             : 12.0.9600.16384
Description                : Windows Media Player Network Sharing Service
Product                    : Microsoft® Windows® Operating System
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 4676
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (wmpnetwk.exe)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (wmpnetwk.exe), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (KERNEL32.DLL), System.Diagnostics.ProcessModule
                             (KERNELBASE.dll)...}
NonpagedSystemMemorySize   : 24704
NonpagedSystemMemorySize64 : 24704
PagedMemorySize64          : 7102464
PagedSystemMemorySize      : 208360
PagedSystemMemorySize64    : 208360
PeakPagedMemorySize        : 7294976
PeakPagedMemorySize64      : 7294976
PeakWorkingSet             : 20234240
PeakWorkingSet64           : 20234240
PeakVirtualMemorySize      : 110014464
PeakVirtualMemorySize64    : 2199133270016
PriorityBoostEnabled       : True
PrivateMemorySize64        : 7102464
PrivilegedProcessorTime    : 00:00:01.1562500
ProcessName                : wmpnetwk
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 0
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:46:08 AM
SynchronizingObject        :
Threads                    : {5456, 5472, 5480, 5484...}
UserProcessorTime          : 00:00:01.0312500
VirtualMemorySize64        : 2199130472448
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 4505600
Site                       :
Container                  :

select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (WZQKPICK):PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : 
AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand
select : The property cannot be processed because the property "PM" already exists.
At line:1 char:14
+ Get-Process| select @{label='PM';e={$_.PM/1MB}},*
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Diagnostics.Process (WZQKPICK):PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : AlreadyExistingUserSpecifiedPropertyNoExpand,Microsoft.PowerShell.Commands.SelectObjectCommand

PM                         : 1.0859375
Name                       : WZQKPICK
Id                         : 4772
PriorityClass              : Normal
FileVersion                : 1.0 (32-bit)
HandleCount                : 79
WorkingSet                 : 1052672
PagedMemorySize            : 1138688
PrivateMemorySize          : 1138688
VirtualMemorySize          : 72105984
TotalProcessorTime         : 00:00:00
SI                         : 1
Handles                    : 79
VM                         : 72105984
WS                         : 1052672
NPM                        : 7792
Path                       : C:\Program Files (x86)\WinZip\WZQKPICK.EXE
Company                    : WinZip Computing, Inc.
CPU                        : 0
ProductVersion             : 8.1  (4319)
Description                : WinZip Executable
Product                    : WinZip
__NounName                 : Process
BasePriority               : 8
ExitCode                   :
HasExited                  : False
ExitTime                   :
Handle                     : 2812
SafeHandle                 : Microsoft.Win32.SafeHandles.SafeProcessHandle
MachineName                : .
MainWindowHandle           : 0
MainWindowTitle            :
MainModule                 : System.Diagnostics.ProcessModule (WZQKPICK.EXE)
MaxWorkingSet              : 1413120
MinWorkingSet              : 204800
Modules                    : {System.Diagnostics.ProcessModule (WZQKPICK.EXE), System.Diagnostics.ProcessModule (ntdll.dll), System.Diagnostics.ProcessModule (wow64.dll), System.Diagnostics.ProcessModule
                             (wow64win.dll)...}
NonpagedSystemMemorySize   : 7792
NonpagedSystemMemorySize64 : 7792
PagedMemorySize64          : 1138688
PagedSystemMemorySize      : 142496
PagedSystemMemorySize64    : 142496
PeakPagedMemorySize        : 1212416
PeakPagedMemorySize64      : 1212416
PeakWorkingSet             : 5349376
PeakWorkingSet64           : 5349376
PeakVirtualMemorySize      : 73428992
PeakVirtualMemorySize64    : 73428992
PriorityBoostEnabled       : True
PrivateMemorySize64        : 1138688
PrivilegedProcessorTime    : 00:00:00
ProcessName                : WZQKPICK
ProcessorAffinity          : 15
Responding                 : True
SessionId                  : 1
StartInfo                  : System.Diagnostics.ProcessStartInfo
StartTime                  : 09-03-2019 09:44:28 AM
SynchronizingObject        :
Threads                    : {4776}
UserProcessorTime          : 00:00:00
VirtualMemorySize64        : 72105984
EnableRaisingEvents        : False
StandardInput              :
StandardOutput             :
StandardError              :
WorkingSet64               : 1052672
Site                       :
Container                  :



PS C:\Windows\system32> Stop-Transcript
**********************
Windows PowerShell transcript end
End time: 20190309154100
**********************
